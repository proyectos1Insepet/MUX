ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Protocolo.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	count_teclas1,1,1
  19              		.comm	comas1,1,1
  20              		.comm	comas2,1,1
  21              		.comm	id_coma1,1,1
  22              		.comm	id_teclado1,1,1
  23              		.comm	count_teclas2,1,1
  24              		.comm	id_coma2,1,1
  25              		.comm	id_teclado2,1,1
  26              		.comm	posx1,2,2
  27              		.comm	posy1,2,2
  28              		.comm	sizeletra1,2,2
  29              		.comm	posx2,2,2
  30              		.comm	posy2,2,2
  31              		.comm	sizeletra2,2,2
  32              		.comm	teclas1,1,1
  33              		.comm	teclas2,1,1
  34              		.comm	flujo_LCD1,1,1
  35              		.comm	flujo_LCD2,1,1
  36              		.comm	flujo_LCD3,1,1
  37              		.comm	flujo_LCD4,1,1
  38              		.comm	Buffer_LCD1,30,4
  39              		.comm	Buffer_LCD2,30,4
  40              		.comm	count_protector,1,1
  41              		.comm	count_protector2,1,1
  42              		.comm	password_lcd,9,4
  43              		.comm	imagen_grado1,2,2
  44              		.comm	imagen_grado2,2,2
  45              		.comm	imagen_grado3,2,2
  46              		.comm	imagen_grado4,2,2
  47              		.comm	prox_caso,16,4
  48              		.comm	bloqueo_LCD,3,4
  49              		.comm	ppux10,1,1
  50              		.comm	nombre_pro1,17,4
  51              		.comm	nombre_pro2,17,4
  52              		.comm	nombre_pro3,17,4
  53              		.comm	version,4,4
  54              		.comm	lado1,93,4
  55              		.comm	lado2,93,4
  56              		.comm	lado3,93,4
  57              		.comm	lado4,93,4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 2


  58              		.comm	nombre,33,4
  59              		.comm	nit,15,4
  60              		.comm	telefono,20,4
  61              		.comm	direccion,33,4
  62              		.comm	lema1,32,4
  63              		.comm	lema2,32,4
  64              		.comm	id_logo,2,4
  65              		.comm	km,2,4
  66              		.comm	fecha,3,4
  67              		.comm	hora,2,4
  68              		.comm	rventa1,97,4
  69              		.comm	rventa2,97,4
  70              		.comm	rventa3,97,4
  71              		.comm	rventa4,97,4
  72              		.comm	ok_RF,1,1
  73              		.comm	ok_datosRF,1,1
  74              		.comm	rf_mod,200,4
  75              		.comm	buffer_i2c,64,4
  76              		.comm	crc_total,1,1
  77              		.comm	print1,2,4
  78              		.comm	print2,2,4
  79              		.comm	rx_timeout,1,1
  80              		.global	msn_tc
  81              		.data
  82              		.align	2
  83              		.type	msn_tc, %object
  84              		.size	msn_tc, 17
  85              	msn_tc:
  86 0000 544F5441 		.ascii	"TOTALES CORRIENTE"
  86      4C455320 
  86      434F5252 
  86      49454E54 
  86      45
  87              		.global	msn_te
  88 0011 000000   		.align	2
  89              		.type	msn_te, %object
  90              		.size	msn_te, 13
  91              	msn_te:
  92 0014 544F5441 		.ascii	"TOTALES EXTRA"
  92      4C455320 
  92      45585452 
  92      41
  93              		.global	msn_td
  94 0021 000000   		.align	2
  95              		.type	msn_td, %object
  96              		.size	msn_td, 14
  97              	msn_td:
  98 0024 544F5441 		.ascii	"TOTALES DIESEL"
  98      4C455320 
  98      44494553 
  98      454C
  99              		.global	msn_lecact
 100 0032 0000     		.align	2
 101              		.type	msn_lecact, %object
 102              		.size	msn_lecact, 15
 103              	msn_lecact:
 104 0034 4C656374 		.ascii	"Lectura Actual:"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 3


 104      75726120 
 104      41637475 
 104      616C3A
 105              		.global	msn_lecaan
 106 0043 00       		.align	2
 107              		.type	msn_lecaan, %object
 108              		.size	msn_lecaan, 17
 109              	msn_lecaan:
 110 0044 4C656374 		.ascii	"Lectura Anterior:"
 110      75726120 
 110      416E7465 
 110      72696F72 
 110      3A
 111              		.global	msn_tventas
 112 0055 000000   		.align	2
 113              		.type	msn_tventas, %object
 114              		.size	msn_tventas, 18
 115              	msn_tventas:
 116 0058 546F7461 		.ascii	"Total de Ventas: $"
 116      6C206465 
 116      2056656E 
 116      7461733A 
 116      2024
 117 006a 0000     		.section	.text.Rx_Surtidor,"ax",%progbits
 118              		.align	2
 119              		.global	Rx_Surtidor
 120              		.thumb
 121              		.thumb_func
 122              		.type	Rx_Surtidor, %function
 123              	Rx_Surtidor:
 124              	.LFB63:
 125              		.file 1 ".\\Protocolo.c"
   1:.\Protocolo.c **** /*
   2:.\Protocolo.c **** ***************************************************************************************************
   3:.\Protocolo.c **** *                                           GRP550/700 CODE
   4:.\Protocolo.c **** 
   5:.\Protocolo.c **** *
   6:.\Protocolo.c **** *                             (c) Copyright 2013; Sistemas Insepet LTDA
   7:.\Protocolo.c **** *
   8:.\Protocolo.c **** *               All rights reserved.  Protected by international copyright laws.
   9:.\Protocolo.c **** *               Knowledge of the source code may NOT be used to develop a similar product.
  10:.\Protocolo.c **** *               Please help us continue to provide the Embedded community with the finest
  11:.\Protocolo.c **** *               software available.  Your honesty is greatly appreciated.
  12:.\Protocolo.c **** ***************************************************************************************************
  13:.\Protocolo.c **** */
  14:.\Protocolo.c **** 
  15:.\Protocolo.c **** /*
  16:.\Protocolo.c **** ***************************************************************************************************
  17:.\Protocolo.c **** *
  18:.\Protocolo.c **** *                                             GRP550/700 CODE
  19:.\Protocolo.c **** *
  20:.\Protocolo.c **** *                                             CYPRESS PSoC5LP
  21:.\Protocolo.c **** *                                                with the
  22:.\Protocolo.c **** *                                            CY8C5969AXI-LP035
  23:.\Protocolo.c **** *
  24:.\Protocolo.c **** * Filename      : Protocolo.c
  25:.\Protocolo.c **** * Version       : V1.00
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 4


  26:.\Protocolo.c **** * Programmer(s) : 
  27:.\Protocolo.c ****                   
  28:.\Protocolo.c **** ***************************************************************************************************
  29:.\Protocolo.c **** */
  30:.\Protocolo.c **** 
  31:.\Protocolo.c **** 
  32:.\Protocolo.c **** /*
  33:.\Protocolo.c **** ***************************************************************************************************
  34:.\Protocolo.c **** *                                             INCLUDE FILES
  35:.\Protocolo.c **** ***************************************************************************************************
  36:.\Protocolo.c **** */
  37:.\Protocolo.c **** #include <device.h>
  38:.\Protocolo.c **** #include "VariablesG.h"
  39:.\Protocolo.c **** #include "i2c.h"
  40:.\Protocolo.c **** #include "Print.h"
  41:.\Protocolo.c **** 
  42:.\Protocolo.c **** /*
  43:.\Protocolo.c **** ***************************************************************************************************
  44:.\Protocolo.c **** *                                            	MENSAJES
  45:.\Protocolo.c **** ***************************************************************************************************
  46:.\Protocolo.c **** */
  47:.\Protocolo.c **** uint8 rx_timeout;								//0 inicia espera  1 se cumplio el tiempo
  48:.\Protocolo.c **** uint8 msn_tc[17]="TOTALES CORRIENTE";
  49:.\Protocolo.c **** uint8 msn_te[13]="TOTALES EXTRA";
  50:.\Protocolo.c **** uint8 msn_td[14]="TOTALES DIESEL";
  51:.\Protocolo.c **** uint8 msn_lecact[15]="Lectura Actual:";
  52:.\Protocolo.c **** uint8 msn_lecaan[17]="Lectura Anterior:";
  53:.\Protocolo.c **** uint8 msn_tventas[18]="Total de Ventas: $";
  54:.\Protocolo.c **** 
  55:.\Protocolo.c **** /*
  56:.\Protocolo.c **** ***************************************************************************************************
  57:.\Protocolo.c **** *                                        CY_ISR(modo_mux)
  58:.\Protocolo.c **** *
  59:.\Protocolo.c **** * Description : 
  60:.\Protocolo.c **** *               
  61:.\Protocolo.c **** ***************************************************************************************************
  62:.\Protocolo.c **** */
  63:.\Protocolo.c **** CY_ISR(Rx_Surtidor){
 126              		.loc 1 63 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 1, uses_anonymous_args = 0
 130 0000 80B5     		push	{r7, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 7, -8
 133              		.cfi_offset 14, -4
 134 0002 00AF     		add	r7, sp, #0
 135              		.cfi_def_cfa_register 7
  64:.\Protocolo.c ****     Timer_RxSurtidor_ReadStatusRegister();
 136              		.loc 1 64 0
 137 0004 FFF7FEFF 		bl	Timer_RxSurtidor_ReadStatusRegister
  65:.\Protocolo.c **** 	rx_timeout=1;	
 138              		.loc 1 65 0
 139 0008 014B     		ldr	r3, .L2
 140 000a 0122     		movs	r2, #1
 141 000c 1A70     		strb	r2, [r3]
  66:.\Protocolo.c **** }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 5


 142              		.loc 1 66 0
 143 000e 80BD     		pop	{r7, pc}
 144              	.L3:
 145              		.align	2
 146              	.L2:
 147 0010 00000000 		.word	rx_timeout
 148              		.cfi_endproc
 149              	.LFE63:
 150              		.size	Rx_Surtidor, .-Rx_Surtidor
 151              		.section	.text.get_estado,"ax",%progbits
 152              		.align	2
 153              		.global	get_estado
 154              		.thumb
 155              		.thumb_func
 156              		.type	get_estado, %function
 157              	get_estado:
 158              	.LFB64:
  67:.\Protocolo.c **** 
  68:.\Protocolo.c **** 
  69:.\Protocolo.c **** /*
  70:.\Protocolo.c **** ***************************************************************************************************
  71:.\Protocolo.c **** *                                         ver_estado( void )
  72:.\Protocolo.c **** *
  73:.\Protocolo.c **** * Description : 
  74:.\Protocolo.c **** *               
  75:.\Protocolo.c **** *
  76:.\Protocolo.c **** * Argument(s) : none
  77:.\Protocolo.c **** *
  78:.\Protocolo.c **** * Return(s)   : none
  79:.\Protocolo.c **** *
  80:.\Protocolo.c **** * Caller(s)   : 
  81:.\Protocolo.c **** *
  82:.\Protocolo.c **** * Note(s)     : none.
  83:.\Protocolo.c **** ***************************************************************************************************
  84:.\Protocolo.c **** */
  85:.\Protocolo.c **** 
  86:.\Protocolo.c **** uint8 get_estado(uint8 dir){
 159              		.loc 1 86 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 16
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 84B0     		sub	sp, sp, #16
 168              		.cfi_def_cfa_offset 24
 169 0004 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 171 0006 0346     		mov	r3, r0
 172 0008 FB71     		strb	r3, [r7, #7]
  87:.\Protocolo.c ****     uint8 estado;
  88:.\Protocolo.c ****     Surtidor_ClearRxBuffer();	
 173              		.loc 1 88 0
 174 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  89:.\Protocolo.c ****     Surtidor_PutChar(dir);
 175              		.loc 1 89 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 6


 176 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 177 0010 1846     		mov	r0, r3
 178 0012 FFF7FEFF 		bl	Surtidor_PutChar
  90:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 179              		.loc 1 90 0
 180 0016 1E48     		ldr	r0, .L9
 181 0018 FFF7FEFF 		bl	isr_1_StartEx
  91:.\Protocolo.c ****     Timer_RxSurtidor_Start();
 182              		.loc 1 91 0
 183 001c FFF7FEFF 		bl	Timer_RxSurtidor_Start
  92:.\Protocolo.c **** 	rx_timeout=0;
 184              		.loc 1 92 0
 185 0020 1C4B     		ldr	r3, .L9+4
 186 0022 0022     		movs	r2, #0
 187 0024 1A70     		strb	r2, [r3]
  93:.\Protocolo.c ****     CyDelay(10);
 188              		.loc 1 93 0
 189 0026 0A20     		movs	r0, #10
 190 0028 FFF7FEFF 		bl	CyDelay
  94:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 191              		.loc 1 94 0
 192 002c 0BE0     		b	.L5
 193              	.L7:
  95:.\Protocolo.c **** 		if(rx_timeout==1){
 194              		.loc 1 95 0
 195 002e 194B     		ldr	r3, .L9+4
 196 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 197 0032 012B     		cmp	r3, #1
 198 0034 07D1     		bne	.L5
  96:.\Protocolo.c **** 			isr_1_Stop();
 199              		.loc 1 96 0
 200 0036 FFF7FEFF 		bl	isr_1_Stop
  97:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 201              		.loc 1 97 0
 202 003a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
  98:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 203              		.loc 1 98 0
 204 003e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  99:.\Protocolo.c **** 			return 0;
 205              		.loc 1 99 0
 206 0042 0023     		movs	r3, #0
 207 0044 20E0     		b	.L6
 208              	.L5:
  94:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 209              		.loc 1 94 0 discriminator 1
 210 0046 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 211 004a 0346     		mov	r3, r0
 212 004c 002B     		cmp	r3, #0
 213 004e EED0     		beq	.L7
 100:.\Protocolo.c **** 		}
 101:.\Protocolo.c **** 	}
 102:.\Protocolo.c ****     estado=Surtidor_ReadRxData();
 214              		.loc 1 102 0
 215 0050 FFF7FEFF 		bl	Surtidor_ReadRxData
 216 0054 0346     		mov	r3, r0
 217 0056 FB73     		strb	r3, [r7, #15]
 103:.\Protocolo.c **** 	if((estado&0x0F)==dir){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 7


 218              		.loc 1 103 0
 219 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 220 005a 03F00F02 		and	r2, r3, #15
 221 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 222 0060 9A42     		cmp	r2, r3
 223 0062 0AD1     		bne	.L8
 104:.\Protocolo.c **** 		estado=(estado&0xF0)>>4;
 224              		.loc 1 104 0
 225 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 226 0066 1B09     		lsrs	r3, r3, #4
 227 0068 FB73     		strb	r3, [r7, #15]
 105:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 228              		.loc 1 105 0
 229 006a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 106:.\Protocolo.c **** 		isr_1_Stop();
 230              		.loc 1 106 0
 231 006e FFF7FEFF 		bl	isr_1_Stop
 107:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 232              		.loc 1 107 0
 233 0072 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 108:.\Protocolo.c **** 	    return estado;
 234              		.loc 1 108 0
 235 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 236 0078 06E0     		b	.L6
 237              	.L8:
 109:.\Protocolo.c **** 	}
 110:.\Protocolo.c **** 	else{
 111:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 238              		.loc 1 111 0
 239 007a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 112:.\Protocolo.c **** 		isr_1_Stop();
 240              		.loc 1 112 0
 241 007e FFF7FEFF 		bl	isr_1_Stop
 113:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 242              		.loc 1 113 0
 243 0082 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 114:.\Protocolo.c **** 	    return 0;	
 244              		.loc 1 114 0
 245 0086 0023     		movs	r3, #0
 246              	.L6:
 115:.\Protocolo.c **** 	}
 116:.\Protocolo.c **** }
 247              		.loc 1 116 0
 248 0088 1846     		mov	r0, r3
 249 008a 1037     		adds	r7, r7, #16
 250 008c BD46     		mov	sp, r7
 251              		@ sp needed
 252 008e 80BD     		pop	{r7, pc}
 253              	.L10:
 254              		.align	2
 255              	.L9:
 256 0090 00000000 		.word	Rx_Surtidor
 257 0094 00000000 		.word	rx_timeout
 258              		.cfi_endproc
 259              	.LFE64:
 260              		.size	get_estado, .-get_estado
 261              		.section	.text.ver_pos,"ax",%progbits
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 8


 262              		.align	2
 263              		.global	ver_pos
 264              		.thumb
 265              		.thumb_func
 266              		.type	ver_pos, %function
 267              	ver_pos:
 268              	.LFB65:
 117:.\Protocolo.c **** 
 118:.\Protocolo.c **** /*
 119:.\Protocolo.c **** ***************************************************************************************************
 120:.\Protocolo.c **** *                                         ver_pos( void )
 121:.\Protocolo.c **** *
 122:.\Protocolo.c **** * Description : 
 123:.\Protocolo.c **** *               
 124:.\Protocolo.c **** *
 125:.\Protocolo.c **** * Argument(s) : none
 126:.\Protocolo.c **** *
 127:.\Protocolo.c **** * Return(s)   : none
 128:.\Protocolo.c **** *
 129:.\Protocolo.c **** * Caller(s)   : 
 130:.\Protocolo.c **** *
 131:.\Protocolo.c **** * Note(s)     : none.
 132:.\Protocolo.c **** ***************************************************************************************************
 133:.\Protocolo.c **** */
 134:.\Protocolo.c **** uint8 ver_pos (void){
 269              		.loc 1 134 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273 0000 80B5     		push	{r7, lr}
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 7, -8
 276              		.cfi_offset 14, -4
 277 0002 82B0     		sub	sp, sp, #8
 278              		.cfi_def_cfa_offset 16
 279 0004 00AF     		add	r7, sp, #0
 280              		.cfi_def_cfa_register 7
 135:.\Protocolo.c **** 	uint8 x;
 136:.\Protocolo.c **** 	lado1.dir=0xff;
 281              		.loc 1 136 0
 282 0006 354B     		ldr	r3, .L21
 283 0008 FF22     		movs	r2, #255
 284 000a 1A70     		strb	r2, [r3]
 137:.\Protocolo.c **** 	lado2.dir=0xff;
 285              		.loc 1 137 0
 286 000c 344B     		ldr	r3, .L21+4
 287 000e FF22     		movs	r2, #255
 288 0010 1A70     		strb	r2, [r3]
 138:.\Protocolo.c **** 	lado3.dir=0xff;
 289              		.loc 1 138 0
 290 0012 344B     		ldr	r3, .L21+8
 291 0014 FF22     		movs	r2, #255
 292 0016 1A70     		strb	r2, [r3]
 139:.\Protocolo.c **** 	lado4.dir=0xff;	
 293              		.loc 1 139 0
 294 0018 334B     		ldr	r3, .L21+12
 295 001a FF22     		movs	r2, #255
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 9


 296 001c 1A70     		strb	r2, [r3]
 140:.\Protocolo.c **** 	CyDelay(5);
 297              		.loc 1 140 0
 298 001e 0520     		movs	r0, #5
 299 0020 FFF7FEFF 		bl	CyDelay
 141:.\Protocolo.c ****     if(get_estado(0)!=0){
 300              		.loc 1 141 0
 301 0024 0020     		movs	r0, #0
 302 0026 FFF7FEFF 		bl	get_estado
 303 002a 0346     		mov	r3, r0
 304 002c 002B     		cmp	r3, #0
 305 002e 02D0     		beq	.L12
 142:.\Protocolo.c **** 		lado4.dir=0;
 306              		.loc 1 142 0
 307 0030 2D4B     		ldr	r3, .L21+12
 308 0032 0022     		movs	r2, #0
 309 0034 1A70     		strb	r2, [r3]
 310              	.L12:
 143:.\Protocolo.c **** 	}	
 144:.\Protocolo.c ****     for(x=1;x<=15;x++){
 311              		.loc 1 144 0
 312 0036 0123     		movs	r3, #1
 313 0038 FB71     		strb	r3, [r7, #7]
 314 003a 31E0     		b	.L13
 315              	.L19:
 145:.\Protocolo.c **** 		CyDelay(5);
 316              		.loc 1 145 0
 317 003c 0520     		movs	r0, #5
 318 003e FFF7FEFF 		bl	CyDelay
 146:.\Protocolo.c ****         if(get_estado(x)!=0){
 319              		.loc 1 146 0
 320 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 321 0044 1846     		mov	r0, r3
 322 0046 FFF7FEFF 		bl	get_estado
 323 004a 0346     		mov	r3, r0
 324 004c 002B     		cmp	r3, #0
 325 004e 24D0     		beq	.L14
 147:.\Protocolo.c **** 			if(lado1.dir==0xFF){
 326              		.loc 1 147 0
 327 0050 224B     		ldr	r3, .L21
 328 0052 1B78     		ldrb	r3, [r3]
 329 0054 DBB2     		uxtb	r3, r3
 330 0056 FF2B     		cmp	r3, #255
 331 0058 03D1     		bne	.L15
 148:.\Protocolo.c **** 				lado1.dir=x;
 332              		.loc 1 148 0
 333 005a 204B     		ldr	r3, .L21
 334 005c FA79     		ldrb	r2, [r7, #7]
 335 005e 1A70     		strb	r2, [r3]
 336 0060 1BE0     		b	.L14
 337              	.L15:
 149:.\Protocolo.c **** 			}
 150:.\Protocolo.c **** 			else if(lado2.dir==0xFF){
 338              		.loc 1 150 0
 339 0062 1F4B     		ldr	r3, .L21+4
 340 0064 1B78     		ldrb	r3, [r3]
 341 0066 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 10


 342 0068 FF2B     		cmp	r3, #255
 343 006a 03D1     		bne	.L16
 151:.\Protocolo.c **** 				lado2.dir=x;
 344              		.loc 1 151 0
 345 006c 1C4B     		ldr	r3, .L21+4
 346 006e FA79     		ldrb	r2, [r7, #7]
 347 0070 1A70     		strb	r2, [r3]
 348 0072 12E0     		b	.L14
 349              	.L16:
 152:.\Protocolo.c **** 			}
 153:.\Protocolo.c **** 			else if(lado3.dir==0xFF){
 350              		.loc 1 153 0
 351 0074 1B4B     		ldr	r3, .L21+8
 352 0076 1B78     		ldrb	r3, [r3]
 353 0078 DBB2     		uxtb	r3, r3
 354 007a FF2B     		cmp	r3, #255
 355 007c 03D1     		bne	.L17
 154:.\Protocolo.c **** 				lado3.dir=x;
 356              		.loc 1 154 0
 357 007e 194B     		ldr	r3, .L21+8
 358 0080 FA79     		ldrb	r2, [r7, #7]
 359 0082 1A70     		strb	r2, [r3]
 360 0084 09E0     		b	.L14
 361              	.L17:
 155:.\Protocolo.c **** 			}
 156:.\Protocolo.c **** 			else if(lado4.dir==0xFF){
 362              		.loc 1 156 0
 363 0086 184B     		ldr	r3, .L21+12
 364 0088 1B78     		ldrb	r3, [r3]
 365 008a DBB2     		uxtb	r3, r3
 366 008c FF2B     		cmp	r3, #255
 367 008e 04D1     		bne	.L14
 157:.\Protocolo.c **** 				lado4.dir=x;
 368              		.loc 1 157 0
 369 0090 154B     		ldr	r3, .L21+12
 370 0092 FA79     		ldrb	r2, [r7, #7]
 371 0094 1A70     		strb	r2, [r3]
 158:.\Protocolo.c **** 				return 1;
 372              		.loc 1 158 0
 373 0096 0123     		movs	r3, #1
 374 0098 1CE0     		b	.L18
 375              	.L14:
 144:.\Protocolo.c ****     for(x=1;x<=15;x++){
 376              		.loc 1 144 0
 377 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 378 009c 0133     		adds	r3, r3, #1
 379 009e FB71     		strb	r3, [r7, #7]
 380              	.L13:
 144:.\Protocolo.c ****     for(x=1;x<=15;x++){
 381              		.loc 1 144 0 is_stmt 0 discriminator 1
 382 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 383 00a2 0F2B     		cmp	r3, #15
 384 00a4 CAD9     		bls	.L19
 159:.\Protocolo.c **** 			}			
 160:.\Protocolo.c **** 		}
 161:.\Protocolo.c **** 	}
 162:.\Protocolo.c **** 	if((lado1.dir!=0xFF)&&(lado2.dir!=0xFF)&&(lado3.dir!=0xFF)&&(lado4.dir!=0xFF)){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 11


 385              		.loc 1 162 0 is_stmt 1
 386 00a6 0D4B     		ldr	r3, .L21
 387 00a8 1B78     		ldrb	r3, [r3]
 388 00aa DBB2     		uxtb	r3, r3
 389 00ac FF2B     		cmp	r3, #255
 390 00ae 10D0     		beq	.L20
 391              		.loc 1 162 0 is_stmt 0 discriminator 1
 392 00b0 0B4B     		ldr	r3, .L21+4
 393 00b2 1B78     		ldrb	r3, [r3]
 394 00b4 DBB2     		uxtb	r3, r3
 395 00b6 FF2B     		cmp	r3, #255
 396 00b8 0BD0     		beq	.L20
 397 00ba 0A4B     		ldr	r3, .L21+8
 398 00bc 1B78     		ldrb	r3, [r3]
 399 00be DBB2     		uxtb	r3, r3
 400 00c0 FF2B     		cmp	r3, #255
 401 00c2 06D0     		beq	.L20
 402 00c4 084B     		ldr	r3, .L21+12
 403 00c6 1B78     		ldrb	r3, [r3]
 404 00c8 DBB2     		uxtb	r3, r3
 405 00ca FF2B     		cmp	r3, #255
 406 00cc 01D0     		beq	.L20
 163:.\Protocolo.c **** 		return 1;
 407              		.loc 1 163 0 is_stmt 1
 408 00ce 0123     		movs	r3, #1
 409 00d0 00E0     		b	.L18
 410              	.L20:
 164:.\Protocolo.c **** 	}
 165:.\Protocolo.c **** 	else{
 166:.\Protocolo.c **** 		return 0;
 411              		.loc 1 166 0
 412 00d2 0023     		movs	r3, #0
 413              	.L18:
 167:.\Protocolo.c **** 	}
 168:.\Protocolo.c **** }
 414              		.loc 1 168 0
 415 00d4 1846     		mov	r0, r3
 416 00d6 0837     		adds	r7, r7, #8
 417 00d8 BD46     		mov	sp, r7
 418              		@ sp needed
 419 00da 80BD     		pop	{r7, pc}
 420              	.L22:
 421              		.align	2
 422              	.L21:
 423 00dc 00000000 		.word	lado1
 424 00e0 00000000 		.word	lado2
 425 00e4 00000000 		.word	lado3
 426 00e8 00000000 		.word	lado4
 427              		.cfi_endproc
 428              	.LFE65:
 429              		.size	ver_pos, .-ver_pos
 430              		.section	.text.ver_error,"ax",%progbits
 431              		.align	2
 432              		.global	ver_error
 433              		.thumb
 434              		.thumb_func
 435              		.type	ver_error, %function
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 12


 436              	ver_error:
 437              	.LFB66:
 169:.\Protocolo.c **** 
 170:.\Protocolo.c **** /*
 171:.\Protocolo.c **** ***************************************************************************************************
 172:.\Protocolo.c **** *                                         void ver_error(uint8 val)
 173:.\Protocolo.c **** *
 174:.\Protocolo.c **** * Description : 
 175:.\Protocolo.c **** *               
 176:.\Protocolo.c **** *
 177:.\Protocolo.c **** * Argument(s) : none
 178:.\Protocolo.c **** *
 179:.\Protocolo.c **** * Return(s)   : none
 180:.\Protocolo.c **** *
 181:.\Protocolo.c **** * Caller(s)   : 
 182:.\Protocolo.c **** *
 183:.\Protocolo.c **** * Note(s)     : none.
 184:.\Protocolo.c **** ***************************************************************************************************
 185:.\Protocolo.c **** */
 186:.\Protocolo.c **** void ver_error(uint8 val){
 438              		.loc 1 186 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 16
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442 0000 80B5     		push	{r7, lr}
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 7, -8
 445              		.cfi_offset 14, -4
 446 0002 84B0     		sub	sp, sp, #16
 447              		.cfi_def_cfa_offset 24
 448 0004 00AF     		add	r7, sp, #0
 449              		.cfi_def_cfa_register 7
 450 0006 0346     		mov	r3, r0
 451 0008 FB71     		strb	r3, [r7, #7]
 187:.\Protocolo.c ****     uint8 estado;
 188:.\Protocolo.c ****     Surtidor_PutChar(val);
 452              		.loc 1 188 0
 453 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 454 000c 1846     		mov	r0, r3
 455 000e FFF7FEFF 		bl	Surtidor_PutChar
 189:.\Protocolo.c ****     CyDelay(200);
 456              		.loc 1 189 0
 457 0012 C820     		movs	r0, #200
 458 0014 FFF7FEFF 		bl	CyDelay
 190:.\Protocolo.c ****     if(Surtidor_GetRxBufferSize()>=1){
 459              		.loc 1 190 0
 460 0018 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 461 001c 0346     		mov	r3, r0
 462 001e 002B     		cmp	r3, #0
 463 0020 06D0     		beq	.L23
 191:.\Protocolo.c ****        estado=(Surtidor_ReadRxData()&0xF0)>>4;
 464              		.loc 1 191 0
 465 0022 FFF7FEFF 		bl	Surtidor_ReadRxData
 466 0026 0346     		mov	r3, r0
 467 0028 1B09     		lsrs	r3, r3, #4
 468 002a FB73     		strb	r3, [r7, #15]
 192:.\Protocolo.c ****        Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 13


 469              		.loc 1 192 0
 470 002c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 471              	.L23:
 193:.\Protocolo.c ****        if(estado==0){
 194:.\Protocolo.c **** 
 195:.\Protocolo.c ****        }
 196:.\Protocolo.c ****     }    
 197:.\Protocolo.c **** }
 472              		.loc 1 197 0
 473 0030 1037     		adds	r7, r7, #16
 474 0032 BD46     		mov	sp, r7
 475              		@ sp needed
 476 0034 80BD     		pop	{r7, pc}
 477              		.cfi_endproc
 478              	.LFE66:
 479              		.size	ver_error, .-ver_error
 480 0036 00BF     		.section	.rodata
 481              		.align	2
 482              	.LC0:
 483 0000 FF       		.byte	-1
 484 0001 E9       		.byte	-23
 485 0002 FE       		.byte	-2
 486 0003 E0       		.byte	-32
 487 0004 E1       		.byte	-31
 488 0005 E0       		.byte	-32
 489 0006 FB       		.byte	-5
 490 0007 EE       		.byte	-18
 491 0008 F0       		.byte	-16
 492 0009 000000   		.section	.text.estado_ex,"ax",%progbits
 493              		.align	2
 494              		.global	estado_ex
 495              		.thumb
 496              		.thumb_func
 497              		.type	estado_ex, %function
 498              	estado_ex:
 499              	.LFB67:
 198:.\Protocolo.c **** 
 199:.\Protocolo.c **** /*
 200:.\Protocolo.c **** ***************************************************************************************************
 201:.\Protocolo.c **** *                                         estado_ex(uint8 val)
 202:.\Protocolo.c **** *
 203:.\Protocolo.c **** * Description : 
 204:.\Protocolo.c **** *               
 205:.\Protocolo.c **** *
 206:.\Protocolo.c **** * Argument(s) : none
 207:.\Protocolo.c **** *
 208:.\Protocolo.c **** * Return(s)   : none
 209:.\Protocolo.c **** *
 210:.\Protocolo.c **** * Caller(s)   : 
 211:.\Protocolo.c **** *
 212:.\Protocolo.c **** * Note(s)     : none.
 213:.\Protocolo.c **** ***************************************************************************************************
 214:.\Protocolo.c **** */
 215:.\Protocolo.c **** uint8 estado_ex(uint8 val){
 500              		.loc 1 215 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 40
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 14


 503              		@ frame_needed = 1, uses_anonymous_args = 0
 504 0000 90B5     		push	{r4, r7, lr}
 505              		.cfi_def_cfa_offset 12
 506              		.cfi_offset 4, -12
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 8BB0     		sub	sp, sp, #44
 510              		.cfi_def_cfa_offset 56
 511 0004 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 513 0006 0346     		mov	r3, r0
 514 0008 FB71     		strb	r3, [r7, #7]
 216:.\Protocolo.c ****     uint8 rx_extend[19],x,comand_exten[9]={0xFF,0xE9,0xFE,0xE0,0xE1,0xE0,0xFB,0xEE,0xF0};
 515              		.loc 1 216 0
 516 000a 594A     		ldr	r2, .L43
 517 000c 07F10803 		add	r3, r7, #8
 518 0010 1068     		ldr	r0, [r2]	@ unaligned
 519 0012 5168     		ldr	r1, [r2, #4]	@ unaligned
 520 0014 03C3     		stmia	r3!, {r0, r1}
 521 0016 127A     		ldrb	r2, [r2, #8]
 522 0018 1A70     		strb	r2, [r3]
 217:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 523              		.loc 1 217 0
 524 001a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 218:.\Protocolo.c ****     Surtidor_PutChar(0x20|val);
 525              		.loc 1 218 0
 526 001e FB79     		ldrb	r3, [r7, #7]
 527 0020 43F02003 		orr	r3, r3, #32
 528 0024 DBB2     		uxtb	r3, r3
 529 0026 1846     		mov	r0, r3
 530 0028 FFF7FEFF 		bl	Surtidor_PutChar
 219:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 531              		.loc 1 219 0
 532 002c 5148     		ldr	r0, .L43+4
 533 002e FFF7FEFF 		bl	isr_1_StartEx
 220:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 534              		.loc 1 220 0
 535 0032 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 221:.\Protocolo.c ****     rx_timeout=0;
 536              		.loc 1 221 0
 537 0036 504B     		ldr	r3, .L43+8
 538 0038 0022     		movs	r2, #0
 539 003a 1A70     		strb	r2, [r3]
 222:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 540              		.loc 1 222 0
 541 003c 0BE0     		b	.L26
 542              	.L28:
 223:.\Protocolo.c **** 		if(rx_timeout==1){
 543              		.loc 1 223 0
 544 003e 4E4B     		ldr	r3, .L43+8
 545 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 546 0042 012B     		cmp	r3, #1
 547 0044 07D1     		bne	.L26
 224:.\Protocolo.c **** 			isr_1_Stop();
 548              		.loc 1 224 0
 549 0046 FFF7FEFF 		bl	isr_1_Stop
 225:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 15


 550              		.loc 1 225 0
 551 004a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 226:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 552              		.loc 1 226 0
 553 004e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 227:.\Protocolo.c **** 			return 0;
 554              		.loc 1 227 0
 555 0052 0023     		movs	r3, #0
 556 0054 88E0     		b	.L41
 557              	.L26:
 222:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 558              		.loc 1 222 0 discriminator 1
 559 0056 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 560 005a 0346     		mov	r3, r0
 561 005c 002B     		cmp	r3, #0
 562 005e EED0     		beq	.L28
 228:.\Protocolo.c **** 		}
 229:.\Protocolo.c **** 	}
 230:.\Protocolo.c **** 	isr_1_Stop();
 563              		.loc 1 230 0
 564 0060 FFF7FEFF 		bl	isr_1_Stop
 231:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 565              		.loc 1 231 0
 566 0064 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 232:.\Protocolo.c ****     if(Surtidor_ReadRxData()==(0xD0|val)){
 567              		.loc 1 232 0
 568 0068 FFF7FEFF 		bl	Surtidor_ReadRxData
 569 006c 0346     		mov	r3, r0
 570 006e 1A46     		mov	r2, r3
 571 0070 FB79     		ldrb	r3, [r7, #7]
 572 0072 63F02F03 		orn	r3, r3, #47
 573 0076 DBB2     		uxtb	r3, r3
 574 0078 9A42     		cmp	r2, r3
 575 007a 74D1     		bne	.L29
 233:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 576              		.loc 1 233 0
 577 007c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 234:.\Protocolo.c **** 		CyDelay(5);
 578              		.loc 1 234 0
 579 0080 0520     		movs	r0, #5
 580 0082 FFF7FEFF 		bl	CyDelay
 235:.\Protocolo.c ****         for(x=0;x<=8;x++){
 581              		.loc 1 235 0
 582 0086 0023     		movs	r3, #0
 583 0088 87F82730 		strb	r3, [r7, #39]
 584 008c 0EE0     		b	.L30
 585              	.L31:
 236:.\Protocolo.c ****            Surtidor_PutChar(comand_exten[x]); 
 586              		.loc 1 236 0 discriminator 2
 587 008e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 588 0092 07F12802 		add	r2, r7, #40
 589 0096 1344     		add	r3, r3, r2
 590 0098 13F8203C 		ldrb	r3, [r3, #-32]	@ zero_extendqisi2
 591 009c 1846     		mov	r0, r3
 592 009e FFF7FEFF 		bl	Surtidor_PutChar
 235:.\Protocolo.c ****         for(x=0;x<=8;x++){
 593              		.loc 1 235 0 discriminator 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 16


 594 00a2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 595 00a6 0133     		adds	r3, r3, #1
 596 00a8 87F82730 		strb	r3, [r7, #39]
 597              	.L30:
 235:.\Protocolo.c ****         for(x=0;x<=8;x++){
 598              		.loc 1 235 0 is_stmt 0 discriminator 1
 599 00ac 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 600 00b0 082B     		cmp	r3, #8
 601 00b2 ECD9     		bls	.L31
 237:.\Protocolo.c ****         }
 238:.\Protocolo.c **** 		isr_1_StartEx(Rx_Surtidor);
 602              		.loc 1 238 0 is_stmt 1
 603 00b4 2F48     		ldr	r0, .L43+4
 604 00b6 FFF7FEFF 		bl	isr_1_StartEx
 239:.\Protocolo.c **** 	    Timer_RxSurtidor_Start();	
 605              		.loc 1 239 0
 606 00ba FFF7FEFF 		bl	Timer_RxSurtidor_Start
 240:.\Protocolo.c **** 	    rx_timeout=0;
 607              		.loc 1 240 0
 608 00be 2E4B     		ldr	r3, .L43+8
 609 00c0 0022     		movs	r2, #0
 610 00c2 1A70     		strb	r2, [r3]
 241:.\Protocolo.c **** 		while(Surtidor_GetRxBufferSize()!=19){
 611              		.loc 1 241 0
 612 00c4 0BE0     		b	.L32
 613              	.L33:
 242:.\Protocolo.c **** 			if(rx_timeout==1){
 614              		.loc 1 242 0
 615 00c6 2C4B     		ldr	r3, .L43+8
 616 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 617 00ca 012B     		cmp	r3, #1
 618 00cc 07D1     		bne	.L32
 243:.\Protocolo.c **** 				isr_1_Stop();
 619              		.loc 1 243 0
 620 00ce FFF7FEFF 		bl	isr_1_Stop
 244:.\Protocolo.c **** 				Timer_RxSurtidor_Stop();
 621              		.loc 1 244 0
 622 00d2 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 245:.\Protocolo.c **** 	    		Surtidor_ClearRxBuffer();			
 623              		.loc 1 245 0
 624 00d6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 246:.\Protocolo.c **** 				return 0;
 625              		.loc 1 246 0
 626 00da 0023     		movs	r3, #0
 627 00dc 44E0     		b	.L41
 628              	.L32:
 241:.\Protocolo.c **** 		while(Surtidor_GetRxBufferSize()!=19){
 629              		.loc 1 241 0 discriminator 1
 630 00de FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 631 00e2 0346     		mov	r3, r0
 632 00e4 132B     		cmp	r3, #19
 633 00e6 EED1     		bne	.L33
 247:.\Protocolo.c **** 			}
 248:.\Protocolo.c **** 		}       
 249:.\Protocolo.c **** 		isr_1_Stop();
 634              		.loc 1 249 0
 635 00e8 FFF7FEFF 		bl	isr_1_Stop
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 17


 250:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();		
 636              		.loc 1 250 0
 637 00ec FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 251:.\Protocolo.c ****         for(x=0;x<=18;x++){
 638              		.loc 1 251 0
 639 00f0 0023     		movs	r3, #0
 640 00f2 87F82730 		strb	r3, [r7, #39]
 641 00f6 0FE0     		b	.L34
 642              	.L35:
 252:.\Protocolo.c ****            rx_extend[x]=Surtidor_ReadRxData(); 
 643              		.loc 1 252 0 discriminator 2
 644 00f8 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 645 00fc FFF7FEFF 		bl	Surtidor_ReadRxData
 646 0100 0346     		mov	r3, r0
 647 0102 1A46     		mov	r2, r3
 648 0104 07F12803 		add	r3, r7, #40
 649 0108 2344     		add	r3, r3, r4
 650 010a 03F8142C 		strb	r2, [r3, #-20]
 251:.\Protocolo.c ****         for(x=0;x<=18;x++){
 651              		.loc 1 251 0 discriminator 2
 652 010e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 653 0112 0133     		adds	r3, r3, #1
 654 0114 87F82730 		strb	r3, [r7, #39]
 655              	.L34:
 251:.\Protocolo.c ****         for(x=0;x<=18;x++){
 656              		.loc 1 251 0 is_stmt 0 discriminator 1
 657 0118 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 658 011c 122B     		cmp	r3, #18
 659 011e EBD9     		bls	.L35
 253:.\Protocolo.c ****         }
 254:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 660              		.loc 1 254 0 is_stmt 1
 661 0120 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 255:.\Protocolo.c ****         if((rx_extend[0]==0xBA)&&(rx_extend[17]==0x8D)&&(rx_extend[18]==0x8A)&&(rx_extend[12]==0xB1
 662              		.loc 1 255 0
 663 0124 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 664 0126 BA2B     		cmp	r3, #186
 665 0128 1BD1     		bne	.L36
 666              		.loc 1 255 0 is_stmt 0 discriminator 1
 667 012a 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 668 012e 8D2B     		cmp	r3, #141
 669 0130 17D1     		bne	.L36
 670 0132 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 671 0136 8A2B     		cmp	r3, #138
 672 0138 13D1     		bne	.L36
 673 013a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 674 013e B12B     		cmp	r3, #177
 675 0140 0FD1     		bne	.L36
 256:.\Protocolo.c ****             switch(rx_extend[14]){
 676              		.loc 1 256 0 is_stmt 1
 677 0142 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 678 0146 B22B     		cmp	r3, #178
 679 0148 05D0     		beq	.L38
 680 014a B32B     		cmp	r3, #179
 681 014c 05D0     		beq	.L39
 682 014e B12B     		cmp	r3, #177
 683 0150 05D1     		bne	.L42
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 18


 257:.\Protocolo.c ****                 case 0xB1:
 258:.\Protocolo.c ****                     return 1;
 684              		.loc 1 258 0
 685 0152 0123     		movs	r3, #1
 686 0154 08E0     		b	.L41
 687              	.L38:
 259:.\Protocolo.c ****                 break;
 260:.\Protocolo.c ****                 case 0xB2:
 261:.\Protocolo.c ****                     return 2;
 688              		.loc 1 261 0
 689 0156 0223     		movs	r3, #2
 690 0158 06E0     		b	.L41
 691              	.L39:
 262:.\Protocolo.c ****                 break;
 263:.\Protocolo.c ****                 case 0xB3:
 264:.\Protocolo.c ****                     return 3;
 692              		.loc 1 264 0
 693 015a 0323     		movs	r3, #3
 694 015c 04E0     		b	.L41
 695              	.L42:
 265:.\Protocolo.c ****                 break;
 266:.\Protocolo.c ****                 default:
 267:.\Protocolo.c ****                 	return 0;
 696              		.loc 1 267 0
 697 015e 0023     		movs	r3, #0
 698 0160 02E0     		b	.L41
 699              	.L36:
 268:.\Protocolo.c **** 				break;
 269:.\Protocolo.c ****             }
 270:.\Protocolo.c ****         }
 271:.\Protocolo.c ****         else{
 272:.\Protocolo.c ****             return 0;
 700              		.loc 1 272 0
 701 0162 0023     		movs	r3, #0
 702 0164 00E0     		b	.L41
 703              	.L29:
 273:.\Protocolo.c ****         }
 274:.\Protocolo.c ****     }
 275:.\Protocolo.c ****     else{
 276:.\Protocolo.c ****         return 0;
 704              		.loc 1 276 0
 705 0166 0023     		movs	r3, #0
 706              	.L41:
 277:.\Protocolo.c ****     }
 278:.\Protocolo.c **** }
 707              		.loc 1 278 0
 708 0168 1846     		mov	r0, r3
 709 016a 2C37     		adds	r7, r7, #44
 710 016c BD46     		mov	sp, r7
 711              		@ sp needed
 712 016e 90BD     		pop	{r4, r7, pc}
 713              	.L44:
 714              		.align	2
 715              	.L43:
 716 0170 00000000 		.word	.LC0
 717 0174 00000000 		.word	Rx_Surtidor
 718 0178 00000000 		.word	rx_timeout
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 19


 719              		.cfi_endproc
 720              	.LFE67:
 721              		.size	estado_ex, .-estado_ex
 722              		.section	.text.detener,"ax",%progbits
 723              		.align	2
 724              		.global	detener
 725              		.thumb
 726              		.thumb_func
 727              		.type	detener, %function
 728              	detener:
 729              	.LFB68:
 279:.\Protocolo.c **** 
 280:.\Protocolo.c **** /*
 281:.\Protocolo.c **** ***************************************************************************************************
 282:.\Protocolo.c **** *                                         void detener(uint8 val)
 283:.\Protocolo.c **** *
 284:.\Protocolo.c **** * Description : 
 285:.\Protocolo.c **** *               
 286:.\Protocolo.c **** *
 287:.\Protocolo.c **** * Argument(s) : none
 288:.\Protocolo.c **** *
 289:.\Protocolo.c **** * Return(s)   : none
 290:.\Protocolo.c **** *
 291:.\Protocolo.c **** * Caller(s)   : 
 292:.\Protocolo.c **** *
 293:.\Protocolo.c **** * Note(s)     : none.
 294:.\Protocolo.c **** ***************************************************************************************************
 295:.\Protocolo.c **** */
 296:.\Protocolo.c **** void detener(uint8 val){
 730              		.loc 1 296 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 8
 733              		@ frame_needed = 1, uses_anonymous_args = 0
 734 0000 80B5     		push	{r7, lr}
 735              		.cfi_def_cfa_offset 8
 736              		.cfi_offset 7, -8
 737              		.cfi_offset 14, -4
 738 0002 82B0     		sub	sp, sp, #8
 739              		.cfi_def_cfa_offset 16
 740 0004 00AF     		add	r7, sp, #0
 741              		.cfi_def_cfa_register 7
 742 0006 0346     		mov	r3, r0
 743 0008 FB71     		strb	r3, [r7, #7]
 297:.\Protocolo.c ****     Surtidor_PutChar(0x30|val);
 744              		.loc 1 297 0
 745 000a FB79     		ldrb	r3, [r7, #7]
 746 000c 43F03003 		orr	r3, r3, #48
 747 0010 DBB2     		uxtb	r3, r3
 748 0012 1846     		mov	r0, r3
 749 0014 FFF7FEFF 		bl	Surtidor_PutChar
 298:.\Protocolo.c ****     CyDelay(200);
 750              		.loc 1 298 0
 751 0018 C820     		movs	r0, #200
 752 001a FFF7FEFF 		bl	CyDelay
 299:.\Protocolo.c **** }
 753              		.loc 1 299 0
 754 001e 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 20


 755 0020 BD46     		mov	sp, r7
 756              		@ sp needed
 757 0022 80BD     		pop	{r7, pc}
 758              		.cfi_endproc
 759              	.LFE68:
 760              		.size	detener, .-detener
 761              		.section	.text.venta,"ax",%progbits
 762              		.align	2
 763              		.global	venta
 764              		.thumb
 765              		.thumb_func
 766              		.type	venta, %function
 767              	venta:
 768              	.LFB69:
 300:.\Protocolo.c **** 
 301:.\Protocolo.c **** /*
 302:.\Protocolo.c **** ***************************************************************************************************
 303:.\Protocolo.c **** *                                         void venta(uint8 val)
 304:.\Protocolo.c **** *
 305:.\Protocolo.c **** * Description : 
 306:.\Protocolo.c **** *               
 307:.\Protocolo.c **** *
 308:.\Protocolo.c **** * Argument(s) : none
 309:.\Protocolo.c **** *
 310:.\Protocolo.c **** * Return(s)   : none
 311:.\Protocolo.c **** *
 312:.\Protocolo.c **** * Caller(s)   : 
 313:.\Protocolo.c **** *
 314:.\Protocolo.c **** * Note(s)     : none.
 315:.\Protocolo.c **** ***************************************************************************************************
 316:.\Protocolo.c **** */
 317:.\Protocolo.c **** uint8 venta(uint8 dir){
 769              		.loc 1 317 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 16
 772              		@ frame_needed = 1, uses_anonymous_args = 0
 773 0000 80B5     		push	{r7, lr}
 774              		.cfi_def_cfa_offset 8
 775              		.cfi_offset 7, -8
 776              		.cfi_offset 14, -4
 777 0002 84B0     		sub	sp, sp, #16
 778              		.cfi_def_cfa_offset 24
 779 0004 00AF     		add	r7, sp, #0
 780              		.cfi_def_cfa_register 7
 781 0006 0346     		mov	r3, r0
 782 0008 FB71     		strb	r3, [r7, #7]
 318:.\Protocolo.c **** 	uint8 x;
 319:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 783              		.loc 1 319 0
 784 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 320:.\Protocolo.c **** 	Surtidor_PutChar(0x40|dir);
 785              		.loc 1 320 0
 786 000e FB79     		ldrb	r3, [r7, #7]
 787 0010 43F04003 		orr	r3, r3, #64
 788 0014 DBB2     		uxtb	r3, r3
 789 0016 1846     		mov	r0, r3
 790 0018 FFF7FEFF 		bl	Surtidor_PutChar
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 21


 321:.\Protocolo.c ****     CyDelay(350);
 791              		.loc 1 321 0
 792 001c 4FF4AF70 		mov	r0, #350
 793 0020 FFF7FEFF 		bl	CyDelay
 322:.\Protocolo.c **** 	if((version[1]!=7)&&(Surtidor_GetRxBufferSize()==33)){
 794              		.loc 1 322 0
 795 0024 A54B     		ldr	r3, .L108
 796 0026 5B78     		ldrb	r3, [r3, #1]
 797 0028 DBB2     		uxtb	r3, r3
 798 002a 072B     		cmp	r3, #7
 799 002c 00F07081 		beq	.L47
 800              		.loc 1 322 0 is_stmt 0 discriminator 1
 801 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 802 0034 0346     		mov	r3, r0
 803 0036 212B     		cmp	r3, #33
 804 0038 40F06A81 		bne	.L47
 323:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[32]==0xF0)){
 805              		.loc 1 323 0 is_stmt 1
 806 003c A04B     		ldr	r3, .L108+4
 807 003e 1B78     		ldrb	r3, [r3]
 808 0040 DBB2     		uxtb	r3, r3
 809 0042 FF2B     		cmp	r3, #255
 810 0044 40F06281 		bne	.L48
 811              		.loc 1 323 0 is_stmt 0 discriminator 1
 812 0048 9D4B     		ldr	r3, .L108+4
 813 004a 9B78     		ldrb	r3, [r3, #2]
 814 004c DBB2     		uxtb	r3, r3
 815 004e F82B     		cmp	r3, #248
 816 0050 40F05C81 		bne	.L48
 817 0054 9A4B     		ldr	r3, .L108+4
 818 0056 93F82030 		ldrb	r3, [r3, #32]
 819 005a DBB2     		uxtb	r3, r3
 820 005c F02B     		cmp	r3, #240
 821 005e 40F05581 		bne	.L48
 324:.\Protocolo.c **** 			if(dir==lado1.dir){
 822              		.loc 1 324 0 is_stmt 1
 823 0062 984B     		ldr	r3, .L108+8
 824 0064 1B78     		ldrb	r3, [r3]
 825 0066 DBB2     		uxtb	r3, r3
 826 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 827 006a 9A42     		cmp	r2, r3
 828 006c 49D1     		bne	.L49
 325:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 829              		.loc 1 325 0
 830 006e 944B     		ldr	r3, .L108+4
 831 0070 5B7A     		ldrb	r3, [r3, #9]
 832 0072 DBB2     		uxtb	r3, r3
 833 0074 03F00F03 		and	r3, r3, #15
 834 0078 DBB2     		uxtb	r3, r3
 835 007a 0133     		adds	r3, r3, #1
 836 007c DAB2     		uxtb	r2, r3
 837 007e 924B     		ldr	r3, .L108+12
 838 0080 5A76     		strb	r2, [r3, #25]
 326:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 839              		.loc 1 326 0
 840 0082 0023     		movs	r3, #0
 841 0084 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 22


 842 0086 0EE0     		b	.L50
 843              	.L51:
 327:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 844              		.loc 1 327 0 discriminator 2
 845 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 846 008a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 847 008c 0C32     		adds	r2, r2, #12
 848 008e 8C49     		ldr	r1, .L108+4
 849 0090 8A5C     		ldrb	r2, [r1, r2]
 850 0092 D2B2     		uxtb	r2, r2
 851 0094 02F00F02 		and	r2, r2, #15
 852 0098 D2B2     		uxtb	r2, r2
 853 009a 8B49     		ldr	r1, .L108+12
 854 009c 0B44     		add	r3, r3, r1
 855 009e 9A70     		strb	r2, [r3, #2]
 326:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 856              		.loc 1 326 0 discriminator 2
 857 00a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 858 00a2 0133     		adds	r3, r3, #1
 859 00a4 FB73     		strb	r3, [r7, #15]
 860              	.L50:
 326:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 861              		.loc 1 326 0 is_stmt 0 discriminator 1
 862 00a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 863 00a8 032B     		cmp	r3, #3
 864 00aa EDD9     		bls	.L51
 328:.\Protocolo.c **** 				}
 329:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 865              		.loc 1 329 0 is_stmt 1
 866 00ac 0023     		movs	r3, #0
 867 00ae FB73     		strb	r3, [r7, #15]
 868 00b0 0EE0     		b	.L52
 869              	.L53:
 330:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 870              		.loc 1 330 0 discriminator 2
 871 00b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 872 00b4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 873 00b6 1132     		adds	r2, r2, #17
 874 00b8 8149     		ldr	r1, .L108+4
 875 00ba 8A5C     		ldrb	r2, [r1, r2]
 876 00bc D2B2     		uxtb	r2, r2
 877 00be 02F00F02 		and	r2, r2, #15
 878 00c2 D2B2     		uxtb	r2, r2
 879 00c4 8049     		ldr	r1, .L108+12
 880 00c6 0B44     		add	r3, r3, r1
 881 00c8 1A74     		strb	r2, [r3, #16]
 329:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 882              		.loc 1 329 0 discriminator 2
 883 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 884 00cc 0133     		adds	r3, r3, #1
 885 00ce FB73     		strb	r3, [r7, #15]
 886              	.L52:
 329:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 887              		.loc 1 329 0 is_stmt 0 discriminator 1
 888 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 889 00d2 052B     		cmp	r3, #5
 890 00d4 EDD9     		bls	.L53
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 23


 331:.\Protocolo.c **** 				}			
 332:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 891              		.loc 1 332 0 is_stmt 1
 892 00d6 0023     		movs	r3, #0
 893 00d8 FB73     		strb	r3, [r7, #15]
 894 00da 0EE0     		b	.L54
 895              	.L55:
 333:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 896              		.loc 1 333 0 discriminator 2
 897 00dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 898 00de FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 899 00e0 1832     		adds	r2, r2, #24
 900 00e2 7749     		ldr	r1, .L108+4
 901 00e4 8A5C     		ldrb	r2, [r1, r2]
 902 00e6 D2B2     		uxtb	r2, r2
 903 00e8 02F00F02 		and	r2, r2, #15
 904 00ec D2B2     		uxtb	r2, r2
 905 00ee 7649     		ldr	r1, .L108+12
 906 00f0 0B44     		add	r3, r3, r1
 907 00f2 DA71     		strb	r2, [r3, #7]
 332:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 908              		.loc 1 332 0 discriminator 2
 909 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 910 00f6 0133     		adds	r3, r3, #1
 911 00f8 FB73     		strb	r3, [r7, #15]
 912              	.L54:
 332:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 913              		.loc 1 332 0 is_stmt 0 discriminator 1
 914 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 915 00fc 052B     		cmp	r3, #5
 916 00fe EDD9     		bls	.L55
 917 0100 02E1     		b	.L56
 918              	.L49:
 334:.\Protocolo.c **** 				}
 335:.\Protocolo.c **** 			}
 336:.\Protocolo.c **** 			else if(dir==lado2.dir){
 919              		.loc 1 336 0 is_stmt 1
 920 0102 724B     		ldr	r3, .L108+16
 921 0104 1B78     		ldrb	r3, [r3]
 922 0106 DBB2     		uxtb	r3, r3
 923 0108 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 924 010a 9A42     		cmp	r2, r3
 925 010c 49D1     		bne	.L57
 337:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 926              		.loc 1 337 0
 927 010e 6C4B     		ldr	r3, .L108+4
 928 0110 5B7A     		ldrb	r3, [r3, #9]
 929 0112 DBB2     		uxtb	r3, r3
 930 0114 03F00F03 		and	r3, r3, #15
 931 0118 DBB2     		uxtb	r3, r3
 932 011a 0133     		adds	r3, r3, #1
 933 011c DAB2     		uxtb	r2, r3
 934 011e 6C4B     		ldr	r3, .L108+20
 935 0120 5A76     		strb	r2, [r3, #25]
 338:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 936              		.loc 1 338 0
 937 0122 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 24


 938 0124 FB73     		strb	r3, [r7, #15]
 939 0126 0EE0     		b	.L58
 940              	.L59:
 339:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 941              		.loc 1 339 0 discriminator 2
 942 0128 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 943 012a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 944 012c 0C32     		adds	r2, r2, #12
 945 012e 6449     		ldr	r1, .L108+4
 946 0130 8A5C     		ldrb	r2, [r1, r2]
 947 0132 D2B2     		uxtb	r2, r2
 948 0134 02F00F02 		and	r2, r2, #15
 949 0138 D2B2     		uxtb	r2, r2
 950 013a 6549     		ldr	r1, .L108+20
 951 013c 0B44     		add	r3, r3, r1
 952 013e 9A70     		strb	r2, [r3, #2]
 338:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 953              		.loc 1 338 0 discriminator 2
 954 0140 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 955 0142 0133     		adds	r3, r3, #1
 956 0144 FB73     		strb	r3, [r7, #15]
 957              	.L58:
 338:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 958              		.loc 1 338 0 is_stmt 0 discriminator 1
 959 0146 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 960 0148 032B     		cmp	r3, #3
 961 014a EDD9     		bls	.L59
 340:.\Protocolo.c **** 				}
 341:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 962              		.loc 1 341 0 is_stmt 1
 963 014c 0023     		movs	r3, #0
 964 014e FB73     		strb	r3, [r7, #15]
 965 0150 0EE0     		b	.L60
 966              	.L61:
 342:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 967              		.loc 1 342 0 discriminator 2
 968 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 969 0154 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 970 0156 1132     		adds	r2, r2, #17
 971 0158 5949     		ldr	r1, .L108+4
 972 015a 8A5C     		ldrb	r2, [r1, r2]
 973 015c D2B2     		uxtb	r2, r2
 974 015e 02F00F02 		and	r2, r2, #15
 975 0162 D2B2     		uxtb	r2, r2
 976 0164 5A49     		ldr	r1, .L108+20
 977 0166 0B44     		add	r3, r3, r1
 978 0168 1A74     		strb	r2, [r3, #16]
 341:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 979              		.loc 1 341 0 discriminator 2
 980 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 981 016c 0133     		adds	r3, r3, #1
 982 016e FB73     		strb	r3, [r7, #15]
 983              	.L60:
 341:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 984              		.loc 1 341 0 is_stmt 0 discriminator 1
 985 0170 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 986 0172 052B     		cmp	r3, #5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 25


 987 0174 EDD9     		bls	.L61
 343:.\Protocolo.c **** 				}			
 344:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 988              		.loc 1 344 0 is_stmt 1
 989 0176 0023     		movs	r3, #0
 990 0178 FB73     		strb	r3, [r7, #15]
 991 017a 0EE0     		b	.L62
 992              	.L63:
 345:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 993              		.loc 1 345 0 discriminator 2
 994 017c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 995 017e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 996 0180 1832     		adds	r2, r2, #24
 997 0182 4F49     		ldr	r1, .L108+4
 998 0184 8A5C     		ldrb	r2, [r1, r2]
 999 0186 D2B2     		uxtb	r2, r2
 1000 0188 02F00F02 		and	r2, r2, #15
 1001 018c D2B2     		uxtb	r2, r2
 1002 018e 5049     		ldr	r1, .L108+20
 1003 0190 0B44     		add	r3, r3, r1
 1004 0192 DA71     		strb	r2, [r3, #7]
 344:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1005              		.loc 1 344 0 discriminator 2
 1006 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1007 0196 0133     		adds	r3, r3, #1
 1008 0198 FB73     		strb	r3, [r7, #15]
 1009              	.L62:
 344:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1010              		.loc 1 344 0 is_stmt 0 discriminator 1
 1011 019a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1012 019c 052B     		cmp	r3, #5
 1013 019e EDD9     		bls	.L63
 1014 01a0 B2E0     		b	.L56
 1015              	.L57:
 346:.\Protocolo.c **** 				}			
 347:.\Protocolo.c **** 			}
 348:.\Protocolo.c **** 			else if(dir==lado3.dir){
 1016              		.loc 1 348 0 is_stmt 1
 1017 01a2 4C4B     		ldr	r3, .L108+24
 1018 01a4 1B78     		ldrb	r3, [r3]
 1019 01a6 DBB2     		uxtb	r3, r3
 1020 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1021 01aa 9A42     		cmp	r2, r3
 1022 01ac 49D1     		bne	.L64
 349:.\Protocolo.c **** 				rventa3.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1023              		.loc 1 349 0
 1024 01ae 444B     		ldr	r3, .L108+4
 1025 01b0 5B7A     		ldrb	r3, [r3, #9]
 1026 01b2 DBB2     		uxtb	r3, r3
 1027 01b4 03F00F03 		and	r3, r3, #15
 1028 01b8 DBB2     		uxtb	r3, r3
 1029 01ba 0133     		adds	r3, r3, #1
 1030 01bc DAB2     		uxtb	r2, r3
 1031 01be 464B     		ldr	r3, .L108+28
 1032 01c0 5A76     		strb	r2, [r3, #25]
 350:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 1033              		.loc 1 350 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 26


 1034 01c2 0023     		movs	r3, #0
 1035 01c4 FB73     		strb	r3, [r7, #15]
 1036 01c6 0EE0     		b	.L65
 1037              	.L66:
 351:.\Protocolo.c **** 					rventa3.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1038              		.loc 1 351 0 discriminator 2
 1039 01c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1040 01ca FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1041 01cc 0C32     		adds	r2, r2, #12
 1042 01ce 3C49     		ldr	r1, .L108+4
 1043 01d0 8A5C     		ldrb	r2, [r1, r2]
 1044 01d2 D2B2     		uxtb	r2, r2
 1045 01d4 02F00F02 		and	r2, r2, #15
 1046 01d8 D2B2     		uxtb	r2, r2
 1047 01da 3F49     		ldr	r1, .L108+28
 1048 01dc 0B44     		add	r3, r3, r1
 1049 01de 9A70     		strb	r2, [r3, #2]
 350:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 1050              		.loc 1 350 0 discriminator 2
 1051 01e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1052 01e2 0133     		adds	r3, r3, #1
 1053 01e4 FB73     		strb	r3, [r7, #15]
 1054              	.L65:
 350:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 1055              		.loc 1 350 0 is_stmt 0 discriminator 1
 1056 01e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1057 01e8 032B     		cmp	r3, #3
 1058 01ea EDD9     		bls	.L66
 352:.\Protocolo.c **** 				}
 353:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1059              		.loc 1 353 0 is_stmt 1
 1060 01ec 0023     		movs	r3, #0
 1061 01ee FB73     		strb	r3, [r7, #15]
 1062 01f0 0EE0     		b	.L67
 1063              	.L68:
 354:.\Protocolo.c **** 					rventa3.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 1064              		.loc 1 354 0 discriminator 2
 1065 01f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1066 01f4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1067 01f6 1132     		adds	r2, r2, #17
 1068 01f8 3149     		ldr	r1, .L108+4
 1069 01fa 8A5C     		ldrb	r2, [r1, r2]
 1070 01fc D2B2     		uxtb	r2, r2
 1071 01fe 02F00F02 		and	r2, r2, #15
 1072 0202 D2B2     		uxtb	r2, r2
 1073 0204 3449     		ldr	r1, .L108+28
 1074 0206 0B44     		add	r3, r3, r1
 1075 0208 1A74     		strb	r2, [r3, #16]
 353:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1076              		.loc 1 353 0 discriminator 2
 1077 020a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1078 020c 0133     		adds	r3, r3, #1
 1079 020e FB73     		strb	r3, [r7, #15]
 1080              	.L67:
 353:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1081              		.loc 1 353 0 is_stmt 0 discriminator 1
 1082 0210 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 27


 1083 0212 052B     		cmp	r3, #5
 1084 0214 EDD9     		bls	.L68
 355:.\Protocolo.c **** 				}			
 356:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1085              		.loc 1 356 0 is_stmt 1
 1086 0216 0023     		movs	r3, #0
 1087 0218 FB73     		strb	r3, [r7, #15]
 1088 021a 0EE0     		b	.L69
 1089              	.L70:
 357:.\Protocolo.c **** 					rventa3.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 1090              		.loc 1 357 0 discriminator 2
 1091 021c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1092 021e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1093 0220 1832     		adds	r2, r2, #24
 1094 0222 2749     		ldr	r1, .L108+4
 1095 0224 8A5C     		ldrb	r2, [r1, r2]
 1096 0226 D2B2     		uxtb	r2, r2
 1097 0228 02F00F02 		and	r2, r2, #15
 1098 022c D2B2     		uxtb	r2, r2
 1099 022e 2A49     		ldr	r1, .L108+28
 1100 0230 0B44     		add	r3, r3, r1
 1101 0232 DA71     		strb	r2, [r3, #7]
 356:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1102              		.loc 1 356 0 discriminator 2
 1103 0234 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1104 0236 0133     		adds	r3, r3, #1
 1105 0238 FB73     		strb	r3, [r7, #15]
 1106              	.L69:
 356:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1107              		.loc 1 356 0 is_stmt 0 discriminator 1
 1108 023a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1109 023c 052B     		cmp	r3, #5
 1110 023e EDD9     		bls	.L70
 1111 0240 62E0     		b	.L56
 1112              	.L64:
 358:.\Protocolo.c **** 				}			
 359:.\Protocolo.c **** 			}
 360:.\Protocolo.c **** 			else if(dir==lado4.dir){
 1113              		.loc 1 360 0 is_stmt 1
 1114 0242 264B     		ldr	r3, .L108+32
 1115 0244 1B78     		ldrb	r3, [r3]
 1116 0246 DBB2     		uxtb	r3, r3
 1117 0248 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1118 024a 9A42     		cmp	r2, r3
 1119 024c 5CD1     		bne	.L56
 361:.\Protocolo.c **** 				rventa4.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1120              		.loc 1 361 0
 1121 024e 1C4B     		ldr	r3, .L108+4
 1122 0250 5B7A     		ldrb	r3, [r3, #9]
 1123 0252 DBB2     		uxtb	r3, r3
 1124 0254 03F00F03 		and	r3, r3, #15
 1125 0258 DBB2     		uxtb	r3, r3
 1126 025a 0133     		adds	r3, r3, #1
 1127 025c DAB2     		uxtb	r2, r3
 1128 025e 204B     		ldr	r3, .L108+36
 1129 0260 5A76     		strb	r2, [r3, #25]
 362:.\Protocolo.c **** 				for(x=0;x<=3;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 28


 1130              		.loc 1 362 0
 1131 0262 0023     		movs	r3, #0
 1132 0264 FB73     		strb	r3, [r7, #15]
 1133 0266 0EE0     		b	.L71
 1134              	.L72:
 363:.\Protocolo.c **** 					rventa4.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1135              		.loc 1 363 0 discriminator 2
 1136 0268 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1137 026a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1138 026c 0C32     		adds	r2, r2, #12
 1139 026e 1449     		ldr	r1, .L108+4
 1140 0270 8A5C     		ldrb	r2, [r1, r2]
 1141 0272 D2B2     		uxtb	r2, r2
 1142 0274 02F00F02 		and	r2, r2, #15
 1143 0278 D2B2     		uxtb	r2, r2
 1144 027a 1949     		ldr	r1, .L108+36
 1145 027c 0B44     		add	r3, r3, r1
 1146 027e 9A70     		strb	r2, [r3, #2]
 362:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 1147              		.loc 1 362 0 discriminator 2
 1148 0280 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1149 0282 0133     		adds	r3, r3, #1
 1150 0284 FB73     		strb	r3, [r7, #15]
 1151              	.L71:
 362:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 1152              		.loc 1 362 0 is_stmt 0 discriminator 1
 1153 0286 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1154 0288 032B     		cmp	r3, #3
 1155 028a EDD9     		bls	.L72
 364:.\Protocolo.c **** 				}
 365:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1156              		.loc 1 365 0 is_stmt 1
 1157 028c 0023     		movs	r3, #0
 1158 028e FB73     		strb	r3, [r7, #15]
 1159 0290 0EE0     		b	.L73
 1160              	.L74:
 366:.\Protocolo.c **** 					rventa4.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 1161              		.loc 1 366 0 discriminator 2
 1162 0292 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1163 0294 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1164 0296 1132     		adds	r2, r2, #17
 1165 0298 0949     		ldr	r1, .L108+4
 1166 029a 8A5C     		ldrb	r2, [r1, r2]
 1167 029c D2B2     		uxtb	r2, r2
 1168 029e 02F00F02 		and	r2, r2, #15
 1169 02a2 D2B2     		uxtb	r2, r2
 1170 02a4 0E49     		ldr	r1, .L108+36
 1171 02a6 0B44     		add	r3, r3, r1
 1172 02a8 1A74     		strb	r2, [r3, #16]
 365:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1173              		.loc 1 365 0 discriminator 2
 1174 02aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1175 02ac 0133     		adds	r3, r3, #1
 1176 02ae FB73     		strb	r3, [r7, #15]
 1177              	.L73:
 365:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1178              		.loc 1 365 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 29


 1179 02b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1180 02b2 052B     		cmp	r3, #5
 1181 02b4 EDD9     		bls	.L74
 367:.\Protocolo.c **** 				}			
 368:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1182              		.loc 1 368 0 is_stmt 1
 1183 02b6 0023     		movs	r3, #0
 1184 02b8 FB73     		strb	r3, [r7, #15]
 1185 02ba 22E0     		b	.L75
 1186              	.L109:
 1187              		.align	2
 1188              	.L108:
 1189 02bc 00000000 		.word	version
 1190 02c0 00000000 		.word	Surtidor_rxBuffer
 1191 02c4 00000000 		.word	lado1
 1192 02c8 00000000 		.word	rventa1
 1193 02cc 00000000 		.word	lado2
 1194 02d0 00000000 		.word	rventa2
 1195 02d4 00000000 		.word	lado3
 1196 02d8 00000000 		.word	rventa3
 1197 02dc 00000000 		.word	lado4
 1198 02e0 00000000 		.word	rventa4
 1199              	.L76:
 369:.\Protocolo.c **** 					rventa4.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 1200              		.loc 1 369 0 discriminator 2
 1201 02e4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1202 02e6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1203 02e8 1832     		adds	r2, r2, #24
 1204 02ea A549     		ldr	r1, .L110
 1205 02ec 8A5C     		ldrb	r2, [r1, r2]
 1206 02ee D2B2     		uxtb	r2, r2
 1207 02f0 02F00F02 		and	r2, r2, #15
 1208 02f4 D2B2     		uxtb	r2, r2
 1209 02f6 A349     		ldr	r1, .L110+4
 1210 02f8 0B44     		add	r3, r3, r1
 1211 02fa DA71     		strb	r2, [r3, #7]
 368:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1212              		.loc 1 368 0 discriminator 2
 1213 02fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1214 02fe 0133     		adds	r3, r3, #1
 1215 0300 FB73     		strb	r3, [r7, #15]
 1216              	.L75:
 368:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1217              		.loc 1 368 0 is_stmt 0 discriminator 1
 1218 0302 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1219 0304 052B     		cmp	r3, #5
 1220 0306 EDD9     		bls	.L76
 1221              	.L56:
 370:.\Protocolo.c **** 				}			
 371:.\Protocolo.c **** 			}			
 372:.\Protocolo.c **** 			return 1;
 1222              		.loc 1 372 0 is_stmt 1
 1223 0308 0123     		movs	r3, #1
 1224 030a 79E1     		b	.L77
 1225              	.L48:
 373:.\Protocolo.c **** 		}
 374:.\Protocolo.c **** 		else{
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 30


 375:.\Protocolo.c **** 			return 0;
 1226              		.loc 1 375 0
 1227 030c 0023     		movs	r3, #0
 1228 030e 77E1     		b	.L77
 1229              	.L47:
 376:.\Protocolo.c **** 		}
 377:.\Protocolo.c **** 	}
 378:.\Protocolo.c **** 	else if((version[1]==7)&&(Surtidor_GetRxBufferSize()==39)){
 1230              		.loc 1 378 0
 1231 0310 9D4B     		ldr	r3, .L110+8
 1232 0312 5B78     		ldrb	r3, [r3, #1]
 1233 0314 DBB2     		uxtb	r3, r3
 1234 0316 072B     		cmp	r3, #7
 1235 0318 40F07181 		bne	.L78
 1236              		.loc 1 378 0 is_stmt 0 discriminator 1
 1237 031c FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 1238 0320 0346     		mov	r3, r0
 1239 0322 272B     		cmp	r3, #39
 1240 0324 40F06B81 		bne	.L78
 379:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[38]==0xF0)){
 1241              		.loc 1 379 0 is_stmt 1
 1242 0328 954B     		ldr	r3, .L110
 1243 032a 1B78     		ldrb	r3, [r3]
 1244 032c DBB2     		uxtb	r3, r3
 1245 032e FF2B     		cmp	r3, #255
 1246 0330 40F06381 		bne	.L79
 1247              		.loc 1 379 0 is_stmt 0 discriminator 1
 1248 0334 924B     		ldr	r3, .L110
 1249 0336 9B78     		ldrb	r3, [r3, #2]
 1250 0338 DBB2     		uxtb	r3, r3
 1251 033a F82B     		cmp	r3, #248
 1252 033c 40F05D81 		bne	.L79
 1253 0340 8F4B     		ldr	r3, .L110
 1254 0342 93F82630 		ldrb	r3, [r3, #38]
 1255 0346 DBB2     		uxtb	r3, r3
 1256 0348 F02B     		cmp	r3, #240
 1257 034a 40F05681 		bne	.L79
 380:.\Protocolo.c **** 			if(dir==lado1.dir){
 1258              		.loc 1 380 0 is_stmt 1
 1259 034e 8F4B     		ldr	r3, .L110+12
 1260 0350 1B78     		ldrb	r3, [r3]
 1261 0352 DBB2     		uxtb	r3, r3
 1262 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1263 0356 9A42     		cmp	r2, r3
 1264 0358 49D1     		bne	.L80
 381:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1265              		.loc 1 381 0
 1266 035a 894B     		ldr	r3, .L110
 1267 035c 5B7A     		ldrb	r3, [r3, #9]
 1268 035e DBB2     		uxtb	r3, r3
 1269 0360 03F00F03 		and	r3, r3, #15
 1270 0364 DBB2     		uxtb	r3, r3
 1271 0366 0133     		adds	r3, r3, #1
 1272 0368 DAB2     		uxtb	r2, r3
 1273 036a 894B     		ldr	r3, .L110+16
 1274 036c 5A76     		strb	r2, [r3, #25]
 382:.\Protocolo.c **** 				for(x=0;x<=5;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 31


 1275              		.loc 1 382 0
 1276 036e 0023     		movs	r3, #0
 1277 0370 FB73     		strb	r3, [r7, #15]
 1278 0372 0EE0     		b	.L81
 1279              	.L82:
 383:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1280              		.loc 1 383 0 discriminator 2
 1281 0374 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1282 0376 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1283 0378 0C32     		adds	r2, r2, #12
 1284 037a 8149     		ldr	r1, .L110
 1285 037c 8A5C     		ldrb	r2, [r1, r2]
 1286 037e D2B2     		uxtb	r2, r2
 1287 0380 02F00F02 		and	r2, r2, #15
 1288 0384 D2B2     		uxtb	r2, r2
 1289 0386 8249     		ldr	r1, .L110+16
 1290 0388 0B44     		add	r3, r3, r1
 1291 038a 9A70     		strb	r2, [r3, #2]
 382:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1292              		.loc 1 382 0 discriminator 2
 1293 038c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1294 038e 0133     		adds	r3, r3, #1
 1295 0390 FB73     		strb	r3, [r7, #15]
 1296              	.L81:
 382:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1297              		.loc 1 382 0 is_stmt 0 discriminator 1
 1298 0392 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1299 0394 052B     		cmp	r3, #5
 1300 0396 EDD9     		bls	.L82
 384:.\Protocolo.c **** 				}
 385:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1301              		.loc 1 385 0 is_stmt 1
 1302 0398 0023     		movs	r3, #0
 1303 039a FB73     		strb	r3, [r7, #15]
 1304 039c 0EE0     		b	.L83
 1305              	.L84:
 386:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1306              		.loc 1 386 0 discriminator 2
 1307 039e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1308 03a0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1309 03a2 1332     		adds	r2, r2, #19
 1310 03a4 7649     		ldr	r1, .L110
 1311 03a6 8A5C     		ldrb	r2, [r1, r2]
 1312 03a8 D2B2     		uxtb	r2, r2
 1313 03aa 02F00F02 		and	r2, r2, #15
 1314 03ae D2B2     		uxtb	r2, r2
 1315 03b0 7749     		ldr	r1, .L110+16
 1316 03b2 0B44     		add	r3, r3, r1
 1317 03b4 1A74     		strb	r2, [r3, #16]
 385:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1318              		.loc 1 385 0 discriminator 2
 1319 03b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1320 03b8 0133     		adds	r3, r3, #1
 1321 03ba FB73     		strb	r3, [r7, #15]
 1322              	.L83:
 385:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1323              		.loc 1 385 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 32


 1324 03bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1325 03be 072B     		cmp	r3, #7
 1326 03c0 EDD9     		bls	.L84
 387:.\Protocolo.c **** 				}			
 388:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1327              		.loc 1 388 0 is_stmt 1
 1328 03c2 0023     		movs	r3, #0
 1329 03c4 FB73     		strb	r3, [r7, #15]
 1330 03c6 0EE0     		b	.L85
 1331              	.L86:
 389:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1332              		.loc 1 389 0 discriminator 2
 1333 03c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1334 03ca FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1335 03cc 1C32     		adds	r2, r2, #28
 1336 03ce 6C49     		ldr	r1, .L110
 1337 03d0 8A5C     		ldrb	r2, [r1, r2]
 1338 03d2 D2B2     		uxtb	r2, r2
 1339 03d4 02F00F02 		and	r2, r2, #15
 1340 03d8 D2B2     		uxtb	r2, r2
 1341 03da 6D49     		ldr	r1, .L110+16
 1342 03dc 0B44     		add	r3, r3, r1
 1343 03de DA71     		strb	r2, [r3, #7]
 388:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1344              		.loc 1 388 0 discriminator 2
 1345 03e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1346 03e2 0133     		adds	r3, r3, #1
 1347 03e4 FB73     		strb	r3, [r7, #15]
 1348              	.L85:
 388:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1349              		.loc 1 388 0 is_stmt 0 discriminator 1
 1350 03e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1351 03e8 072B     		cmp	r3, #7
 1352 03ea EDD9     		bls	.L86
 1353 03ec 03E1     		b	.L87
 1354              	.L80:
 390:.\Protocolo.c **** 				}
 391:.\Protocolo.c **** 			}
 392:.\Protocolo.c **** 			else if(dir==lado2.dir){
 1355              		.loc 1 392 0 is_stmt 1
 1356 03ee 694B     		ldr	r3, .L110+20
 1357 03f0 1B78     		ldrb	r3, [r3]
 1358 03f2 DBB2     		uxtb	r3, r3
 1359 03f4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1360 03f6 9A42     		cmp	r2, r3
 1361 03f8 49D1     		bne	.L88
 393:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1362              		.loc 1 393 0
 1363 03fa 614B     		ldr	r3, .L110
 1364 03fc 5B7A     		ldrb	r3, [r3, #9]
 1365 03fe DBB2     		uxtb	r3, r3
 1366 0400 03F00F03 		and	r3, r3, #15
 1367 0404 DBB2     		uxtb	r3, r3
 1368 0406 0133     		adds	r3, r3, #1
 1369 0408 DAB2     		uxtb	r2, r3
 1370 040a 634B     		ldr	r3, .L110+24
 1371 040c 5A76     		strb	r2, [r3, #25]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 33


 394:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1372              		.loc 1 394 0
 1373 040e 0023     		movs	r3, #0
 1374 0410 FB73     		strb	r3, [r7, #15]
 1375 0412 0EE0     		b	.L89
 1376              	.L90:
 395:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1377              		.loc 1 395 0 discriminator 2
 1378 0414 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1379 0416 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1380 0418 0C32     		adds	r2, r2, #12
 1381 041a 5949     		ldr	r1, .L110
 1382 041c 8A5C     		ldrb	r2, [r1, r2]
 1383 041e D2B2     		uxtb	r2, r2
 1384 0420 02F00F02 		and	r2, r2, #15
 1385 0424 D2B2     		uxtb	r2, r2
 1386 0426 5C49     		ldr	r1, .L110+24
 1387 0428 0B44     		add	r3, r3, r1
 1388 042a 9A70     		strb	r2, [r3, #2]
 394:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1389              		.loc 1 394 0 discriminator 2
 1390 042c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1391 042e 0133     		adds	r3, r3, #1
 1392 0430 FB73     		strb	r3, [r7, #15]
 1393              	.L89:
 394:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1394              		.loc 1 394 0 is_stmt 0 discriminator 1
 1395 0432 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1396 0434 052B     		cmp	r3, #5
 1397 0436 EDD9     		bls	.L90
 396:.\Protocolo.c **** 				}
 397:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1398              		.loc 1 397 0 is_stmt 1
 1399 0438 0023     		movs	r3, #0
 1400 043a FB73     		strb	r3, [r7, #15]
 1401 043c 0EE0     		b	.L91
 1402              	.L92:
 398:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1403              		.loc 1 398 0 discriminator 2
 1404 043e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1405 0440 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1406 0442 1332     		adds	r2, r2, #19
 1407 0444 4E49     		ldr	r1, .L110
 1408 0446 8A5C     		ldrb	r2, [r1, r2]
 1409 0448 D2B2     		uxtb	r2, r2
 1410 044a 02F00F02 		and	r2, r2, #15
 1411 044e D2B2     		uxtb	r2, r2
 1412 0450 5149     		ldr	r1, .L110+24
 1413 0452 0B44     		add	r3, r3, r1
 1414 0454 1A74     		strb	r2, [r3, #16]
 397:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1415              		.loc 1 397 0 discriminator 2
 1416 0456 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1417 0458 0133     		adds	r3, r3, #1
 1418 045a FB73     		strb	r3, [r7, #15]
 1419              	.L91:
 397:.\Protocolo.c **** 				for(x=0;x<=7;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 34


 1420              		.loc 1 397 0 is_stmt 0 discriminator 1
 1421 045c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1422 045e 072B     		cmp	r3, #7
 1423 0460 EDD9     		bls	.L92
 399:.\Protocolo.c **** 				}			
 400:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1424              		.loc 1 400 0 is_stmt 1
 1425 0462 0023     		movs	r3, #0
 1426 0464 FB73     		strb	r3, [r7, #15]
 1427 0466 0EE0     		b	.L93
 1428              	.L94:
 401:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1429              		.loc 1 401 0 discriminator 2
 1430 0468 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1431 046a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1432 046c 1C32     		adds	r2, r2, #28
 1433 046e 4449     		ldr	r1, .L110
 1434 0470 8A5C     		ldrb	r2, [r1, r2]
 1435 0472 D2B2     		uxtb	r2, r2
 1436 0474 02F00F02 		and	r2, r2, #15
 1437 0478 D2B2     		uxtb	r2, r2
 1438 047a 4749     		ldr	r1, .L110+24
 1439 047c 0B44     		add	r3, r3, r1
 1440 047e DA71     		strb	r2, [r3, #7]
 400:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1441              		.loc 1 400 0 discriminator 2
 1442 0480 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1443 0482 0133     		adds	r3, r3, #1
 1444 0484 FB73     		strb	r3, [r7, #15]
 1445              	.L93:
 400:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1446              		.loc 1 400 0 is_stmt 0 discriminator 1
 1447 0486 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1448 0488 072B     		cmp	r3, #7
 1449 048a EDD9     		bls	.L94
 1450 048c B3E0     		b	.L87
 1451              	.L88:
 402:.\Protocolo.c **** 				}			
 403:.\Protocolo.c **** 			}
 404:.\Protocolo.c **** 			else if(dir==lado3.dir){
 1452              		.loc 1 404 0 is_stmt 1
 1453 048e 434B     		ldr	r3, .L110+28
 1454 0490 1B78     		ldrb	r3, [r3]
 1455 0492 DBB2     		uxtb	r3, r3
 1456 0494 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1457 0496 9A42     		cmp	r2, r3
 1458 0498 49D1     		bne	.L95
 405:.\Protocolo.c **** 				rventa3.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1459              		.loc 1 405 0
 1460 049a 394B     		ldr	r3, .L110
 1461 049c 5B7A     		ldrb	r3, [r3, #9]
 1462 049e DBB2     		uxtb	r3, r3
 1463 04a0 03F00F03 		and	r3, r3, #15
 1464 04a4 DBB2     		uxtb	r3, r3
 1465 04a6 0133     		adds	r3, r3, #1
 1466 04a8 DAB2     		uxtb	r2, r3
 1467 04aa 3D4B     		ldr	r3, .L110+32
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 35


 1468 04ac 5A76     		strb	r2, [r3, #25]
 406:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1469              		.loc 1 406 0
 1470 04ae 0023     		movs	r3, #0
 1471 04b0 FB73     		strb	r3, [r7, #15]
 1472 04b2 0EE0     		b	.L96
 1473              	.L97:
 407:.\Protocolo.c **** 					rventa3.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1474              		.loc 1 407 0 discriminator 2
 1475 04b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1476 04b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1477 04b8 0C32     		adds	r2, r2, #12
 1478 04ba 3149     		ldr	r1, .L110
 1479 04bc 8A5C     		ldrb	r2, [r1, r2]
 1480 04be D2B2     		uxtb	r2, r2
 1481 04c0 02F00F02 		and	r2, r2, #15
 1482 04c4 D2B2     		uxtb	r2, r2
 1483 04c6 3649     		ldr	r1, .L110+32
 1484 04c8 0B44     		add	r3, r3, r1
 1485 04ca 9A70     		strb	r2, [r3, #2]
 406:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1486              		.loc 1 406 0 discriminator 2
 1487 04cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1488 04ce 0133     		adds	r3, r3, #1
 1489 04d0 FB73     		strb	r3, [r7, #15]
 1490              	.L96:
 406:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1491              		.loc 1 406 0 is_stmt 0 discriminator 1
 1492 04d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1493 04d4 052B     		cmp	r3, #5
 1494 04d6 EDD9     		bls	.L97
 408:.\Protocolo.c **** 				}
 409:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1495              		.loc 1 409 0 is_stmt 1
 1496 04d8 0023     		movs	r3, #0
 1497 04da FB73     		strb	r3, [r7, #15]
 1498 04dc 0EE0     		b	.L98
 1499              	.L99:
 410:.\Protocolo.c **** 					rventa3.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1500              		.loc 1 410 0 discriminator 2
 1501 04de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1502 04e0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1503 04e2 1332     		adds	r2, r2, #19
 1504 04e4 2649     		ldr	r1, .L110
 1505 04e6 8A5C     		ldrb	r2, [r1, r2]
 1506 04e8 D2B2     		uxtb	r2, r2
 1507 04ea 02F00F02 		and	r2, r2, #15
 1508 04ee D2B2     		uxtb	r2, r2
 1509 04f0 2B49     		ldr	r1, .L110+32
 1510 04f2 0B44     		add	r3, r3, r1
 1511 04f4 1A74     		strb	r2, [r3, #16]
 409:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1512              		.loc 1 409 0 discriminator 2
 1513 04f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1514 04f8 0133     		adds	r3, r3, #1
 1515 04fa FB73     		strb	r3, [r7, #15]
 1516              	.L98:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 36


 409:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1517              		.loc 1 409 0 is_stmt 0 discriminator 1
 1518 04fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1519 04fe 072B     		cmp	r3, #7
 1520 0500 EDD9     		bls	.L99
 411:.\Protocolo.c **** 				}			
 412:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1521              		.loc 1 412 0 is_stmt 1
 1522 0502 0023     		movs	r3, #0
 1523 0504 FB73     		strb	r3, [r7, #15]
 1524 0506 0EE0     		b	.L100
 1525              	.L101:
 413:.\Protocolo.c **** 					rventa3.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1526              		.loc 1 413 0 discriminator 2
 1527 0508 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1528 050a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1529 050c 1C32     		adds	r2, r2, #28
 1530 050e 1C49     		ldr	r1, .L110
 1531 0510 8A5C     		ldrb	r2, [r1, r2]
 1532 0512 D2B2     		uxtb	r2, r2
 1533 0514 02F00F02 		and	r2, r2, #15
 1534 0518 D2B2     		uxtb	r2, r2
 1535 051a 2149     		ldr	r1, .L110+32
 1536 051c 0B44     		add	r3, r3, r1
 1537 051e DA71     		strb	r2, [r3, #7]
 412:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1538              		.loc 1 412 0 discriminator 2
 1539 0520 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1540 0522 0133     		adds	r3, r3, #1
 1541 0524 FB73     		strb	r3, [r7, #15]
 1542              	.L100:
 412:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1543              		.loc 1 412 0 is_stmt 0 discriminator 1
 1544 0526 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1545 0528 072B     		cmp	r3, #7
 1546 052a EDD9     		bls	.L101
 1547 052c 63E0     		b	.L87
 1548              	.L95:
 414:.\Protocolo.c **** 				}			
 415:.\Protocolo.c **** 			}
 416:.\Protocolo.c **** 			else if(dir==lado4.dir){
 1549              		.loc 1 416 0 is_stmt 1
 1550 052e 1D4B     		ldr	r3, .L110+36
 1551 0530 1B78     		ldrb	r3, [r3]
 1552 0532 DBB2     		uxtb	r3, r3
 1553 0534 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1554 0536 9A42     		cmp	r2, r3
 1555 0538 5DD1     		bne	.L87
 417:.\Protocolo.c **** 				rventa4.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1556              		.loc 1 417 0
 1557 053a 114B     		ldr	r3, .L110
 1558 053c 5B7A     		ldrb	r3, [r3, #9]
 1559 053e DBB2     		uxtb	r3, r3
 1560 0540 03F00F03 		and	r3, r3, #15
 1561 0544 DBB2     		uxtb	r3, r3
 1562 0546 0133     		adds	r3, r3, #1
 1563 0548 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 37


 1564 054a 0E4B     		ldr	r3, .L110+4
 1565 054c 5A76     		strb	r2, [r3, #25]
 418:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1566              		.loc 1 418 0
 1567 054e 0023     		movs	r3, #0
 1568 0550 FB73     		strb	r3, [r7, #15]
 1569 0552 0EE0     		b	.L102
 1570              	.L103:
 419:.\Protocolo.c **** 					rventa4.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1571              		.loc 1 419 0 discriminator 2
 1572 0554 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1573 0556 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1574 0558 0C32     		adds	r2, r2, #12
 1575 055a 0949     		ldr	r1, .L110
 1576 055c 8A5C     		ldrb	r2, [r1, r2]
 1577 055e D2B2     		uxtb	r2, r2
 1578 0560 02F00F02 		and	r2, r2, #15
 1579 0564 D2B2     		uxtb	r2, r2
 1580 0566 0749     		ldr	r1, .L110+4
 1581 0568 0B44     		add	r3, r3, r1
 1582 056a 9A70     		strb	r2, [r3, #2]
 418:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1583              		.loc 1 418 0 discriminator 2
 1584 056c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1585 056e 0133     		adds	r3, r3, #1
 1586 0570 FB73     		strb	r3, [r7, #15]
 1587              	.L102:
 418:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1588              		.loc 1 418 0 is_stmt 0 discriminator 1
 1589 0572 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1590 0574 052B     		cmp	r3, #5
 1591 0576 EDD9     		bls	.L103
 420:.\Protocolo.c **** 				}
 421:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1592              		.loc 1 421 0 is_stmt 1
 1593 0578 0023     		movs	r3, #0
 1594 057a FB73     		strb	r3, [r7, #15]
 1595 057c 23E0     		b	.L104
 1596              	.L111:
 1597 057e 00BF     		.align	2
 1598              	.L110:
 1599 0580 00000000 		.word	Surtidor_rxBuffer
 1600 0584 00000000 		.word	rventa4
 1601 0588 00000000 		.word	version
 1602 058c 00000000 		.word	lado1
 1603 0590 00000000 		.word	rventa1
 1604 0594 00000000 		.word	lado2
 1605 0598 00000000 		.word	rventa2
 1606 059c 00000000 		.word	lado3
 1607 05a0 00000000 		.word	rventa3
 1608 05a4 00000000 		.word	lado4
 1609              	.L105:
 422:.\Protocolo.c **** 					rventa4.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1610              		.loc 1 422 0 discriminator 2
 1611 05a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1612 05aa FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1613 05ac 1332     		adds	r2, r2, #19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 38


 1614 05ae 1649     		ldr	r1, .L112
 1615 05b0 8A5C     		ldrb	r2, [r1, r2]
 1616 05b2 D2B2     		uxtb	r2, r2
 1617 05b4 02F00F02 		and	r2, r2, #15
 1618 05b8 D2B2     		uxtb	r2, r2
 1619 05ba 1449     		ldr	r1, .L112+4
 1620 05bc 0B44     		add	r3, r3, r1
 1621 05be 1A74     		strb	r2, [r3, #16]
 421:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1622              		.loc 1 421 0 discriminator 2
 1623 05c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1624 05c2 0133     		adds	r3, r3, #1
 1625 05c4 FB73     		strb	r3, [r7, #15]
 1626              	.L104:
 421:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1627              		.loc 1 421 0 is_stmt 0 discriminator 1
 1628 05c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1629 05c8 072B     		cmp	r3, #7
 1630 05ca EDD9     		bls	.L105
 423:.\Protocolo.c **** 				}			
 424:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1631              		.loc 1 424 0 is_stmt 1
 1632 05cc 0023     		movs	r3, #0
 1633 05ce FB73     		strb	r3, [r7, #15]
 1634 05d0 0EE0     		b	.L106
 1635              	.L107:
 425:.\Protocolo.c **** 					rventa4.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1636              		.loc 1 425 0 discriminator 2
 1637 05d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1638 05d4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1639 05d6 1C32     		adds	r2, r2, #28
 1640 05d8 0B49     		ldr	r1, .L112
 1641 05da 8A5C     		ldrb	r2, [r1, r2]
 1642 05dc D2B2     		uxtb	r2, r2
 1643 05de 02F00F02 		and	r2, r2, #15
 1644 05e2 D2B2     		uxtb	r2, r2
 1645 05e4 0949     		ldr	r1, .L112+4
 1646 05e6 0B44     		add	r3, r3, r1
 1647 05e8 DA71     		strb	r2, [r3, #7]
 424:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1648              		.loc 1 424 0 discriminator 2
 1649 05ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1650 05ec 0133     		adds	r3, r3, #1
 1651 05ee FB73     		strb	r3, [r7, #15]
 1652              	.L106:
 424:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1653              		.loc 1 424 0 is_stmt 0 discriminator 1
 1654 05f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1655 05f2 072B     		cmp	r3, #7
 1656 05f4 EDD9     		bls	.L107
 1657              	.L87:
 426:.\Protocolo.c **** 				}			
 427:.\Protocolo.c **** 			}			
 428:.\Protocolo.c **** 			return 1;
 1658              		.loc 1 428 0 is_stmt 1
 1659 05f6 0123     		movs	r3, #1
 1660 05f8 02E0     		b	.L77
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 39


 1661              	.L79:
 429:.\Protocolo.c **** 		}
 430:.\Protocolo.c **** 		else{
 431:.\Protocolo.c **** 			return 0;
 1662              		.loc 1 431 0
 1663 05fa 0023     		movs	r3, #0
 1664 05fc 00E0     		b	.L77
 1665              	.L78:
 432:.\Protocolo.c **** 		}
 433:.\Protocolo.c **** 	}
 434:.\Protocolo.c **** 	return 0;
 1666              		.loc 1 434 0
 1667 05fe 0023     		movs	r3, #0
 1668              	.L77:
 435:.\Protocolo.c **** }
 1669              		.loc 1 435 0
 1670 0600 1846     		mov	r0, r3
 1671 0602 1037     		adds	r7, r7, #16
 1672 0604 BD46     		mov	sp, r7
 1673              		@ sp needed
 1674 0606 80BD     		pop	{r7, pc}
 1675              	.L113:
 1676              		.align	2
 1677              	.L112:
 1678 0608 00000000 		.word	Surtidor_rxBuffer
 1679 060c 00000000 		.word	rventa4
 1680              		.cfi_endproc
 1681              	.LFE69:
 1682              		.size	venta, .-venta
 1683              		.section	.text.programar,"ax",%progbits
 1684              		.align	2
 1685              		.global	programar
 1686              		.thumb
 1687              		.thumb_func
 1688              		.type	programar, %function
 1689              	programar:
 1690              	.LFB70:
 436:.\Protocolo.c **** 
 437:.\Protocolo.c **** /*
 438:.\Protocolo.c **** ***************************************************************************************************
 439:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 440:.\Protocolo.c **** *
 441:.\Protocolo.c **** * Description : 
 442:.\Protocolo.c **** *               
 443:.\Protocolo.c **** *
 444:.\Protocolo.c **** * Argument(s) : none
 445:.\Protocolo.c **** *
 446:.\Protocolo.c **** * Return(s)   : none
 447:.\Protocolo.c **** *
 448:.\Protocolo.c **** * Caller(s)   : 
 449:.\Protocolo.c **** *
 450:.\Protocolo.c **** * Note(s)     : none.
 451:.\Protocolo.c **** ***************************************************************************************************
 452:.\Protocolo.c **** */
 453:.\Protocolo.c **** uint8 programar(uint8 dir, uint8 grado, uint8 *valor, uint8 preset){
 1691              		.loc 1 453 0
 1692              		.cfi_startproc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 40


 1693              		@ args = 0, pretend = 0, frame = 32
 1694              		@ frame_needed = 1, uses_anonymous_args = 0
 1695 0000 80B5     		push	{r7, lr}
 1696              		.cfi_def_cfa_offset 8
 1697              		.cfi_offset 7, -8
 1698              		.cfi_offset 14, -4
 1699 0002 88B0     		sub	sp, sp, #32
 1700              		.cfi_def_cfa_offset 40
 1701 0004 00AF     		add	r7, sp, #0
 1702              		.cfi_def_cfa_register 7
 1703 0006 3A60     		str	r2, [r7]
 1704 0008 0246     		mov	r2, r0
 1705 000a FA71     		strb	r2, [r7, #7]
 1706 000c 0A46     		mov	r2, r1
 1707 000e BA71     		strb	r2, [r7, #6]
 1708 0010 7B71     		strb	r3, [r7, #5]
 454:.\Protocolo.c **** 	uint8 buffer[18]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,temp,i,decimal;
 1709              		.loc 1 454 0
 1710 0012 07F10803 		add	r3, r7, #8
 1711 0016 0022     		movs	r2, #0
 1712 0018 1A60     		str	r2, [r3]
 1713 001a 0433     		adds	r3, r3, #4
 1714 001c 0022     		movs	r2, #0
 1715 001e 1A60     		str	r2, [r3]
 1716 0020 0433     		adds	r3, r3, #4
 1717 0022 0022     		movs	r2, #0
 1718 0024 1A60     		str	r2, [r3]
 1719 0026 0433     		adds	r3, r3, #4
 1720 0028 0022     		movs	r2, #0
 1721 002a 1A60     		str	r2, [r3]
 1722 002c 0433     		adds	r3, r3, #4
 1723 002e 0022     		movs	r2, #0
 1724 0030 1A80     		strh	r2, [r3]	@ movhi
 1725 0032 0233     		adds	r3, r3, #2
 455:.\Protocolo.c **** 	temp=4;
 1726              		.loc 1 455 0
 1727 0034 0423     		movs	r3, #4
 1728 0036 BB77     		strb	r3, [r7, #30]
 456:.\Protocolo.c **** 	if(preset==3){
 1729              		.loc 1 456 0
 1730 0038 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1731 003a 032B     		cmp	r3, #3
 1732 003c 01D1     		bne	.L115
 457:.\Protocolo.c **** 		preset=2;
 1733              		.loc 1 457 0
 1734 003e 0223     		movs	r3, #2
 1735 0040 7B71     		strb	r3, [r7, #5]
 1736              	.L115:
 458:.\Protocolo.c **** 	}
 459:.\Protocolo.c **** 	if(((version[1]==5)||(version[1]==6))&&(preset==1)){
 1737              		.loc 1 459 0
 1738 0042 B34B     		ldr	r3, .L158
 1739 0044 5B78     		ldrb	r3, [r3, #1]
 1740 0046 DBB2     		uxtb	r3, r3
 1741 0048 052B     		cmp	r3, #5
 1742 004a 04D0     		beq	.L116
 1743              		.loc 1 459 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 41


 1744 004c B04B     		ldr	r3, .L158
 1745 004e 5B78     		ldrb	r3, [r3, #1]
 1746 0050 DBB2     		uxtb	r3, r3
 1747 0052 062B     		cmp	r3, #6
 1748 0054 04D1     		bne	.L117
 1749              	.L116:
 1750              		.loc 1 459 0 discriminator 1
 1751 0056 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1752 0058 012B     		cmp	r3, #1
 1753 005a 01D1     		bne	.L117
 460:.\Protocolo.c **** 		temp=3;
 1754              		.loc 1 460 0 is_stmt 1
 1755 005c 0323     		movs	r3, #3
 1756 005e BB77     		strb	r3, [r7, #30]
 1757              	.L117:
 461:.\Protocolo.c **** 	}
 462:.\Protocolo.c **** 	if((version[1]==5)&&(preset==2)){
 1758              		.loc 1 462 0
 1759 0060 AB4B     		ldr	r3, .L158
 1760 0062 5B78     		ldrb	r3, [r3, #1]
 1761 0064 DBB2     		uxtb	r3, r3
 1762 0066 052B     		cmp	r3, #5
 1763 0068 04D1     		bne	.L118
 1764              		.loc 1 462 0 is_stmt 0 discriminator 1
 1765 006a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1766 006c 022B     		cmp	r3, #2
 1767 006e 01D1     		bne	.L118
 463:.\Protocolo.c **** 		temp=5;
 1768              		.loc 1 463 0 is_stmt 1
 1769 0070 0523     		movs	r3, #5
 1770 0072 BB77     		strb	r3, [r7, #30]
 1771              	.L118:
 464:.\Protocolo.c **** 	}
 465:.\Protocolo.c **** 	if((version[1]==7)&&(preset==1)){
 1772              		.loc 1 465 0
 1773 0074 A64B     		ldr	r3, .L158
 1774 0076 5B78     		ldrb	r3, [r3, #1]
 1775 0078 DBB2     		uxtb	r3, r3
 1776 007a 072B     		cmp	r3, #7
 1777 007c 04D1     		bne	.L119
 1778              		.loc 1 465 0 is_stmt 0 discriminator 1
 1779 007e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1780 0080 012B     		cmp	r3, #1
 1781 0082 01D1     		bne	.L119
 466:.\Protocolo.c **** 		temp=0;
 1782              		.loc 1 466 0 is_stmt 1
 1783 0084 0023     		movs	r3, #0
 1784 0086 BB77     		strb	r3, [r7, #30]
 1785              	.L119:
 467:.\Protocolo.c **** 	}
 468:.\Protocolo.c **** 	if((version[1]==7)&&(preset==2)){
 1786              		.loc 1 468 0
 1787 0088 A14B     		ldr	r3, .L158
 1788 008a 5B78     		ldrb	r3, [r3, #1]
 1789 008c DBB2     		uxtb	r3, r3
 1790 008e 072B     		cmp	r3, #7
 1791 0090 04D1     		bne	.L120
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 42


 1792              		.loc 1 468 0 is_stmt 0 discriminator 1
 1793 0092 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1794 0094 022B     		cmp	r3, #2
 1795 0096 01D1     		bne	.L120
 469:.\Protocolo.c **** 		temp=2;
 1796              		.loc 1 469 0 is_stmt 1
 1797 0098 0223     		movs	r3, #2
 1798 009a BB77     		strb	r3, [r7, #30]
 1799              	.L120:
 470:.\Protocolo.c **** 	}	
 471:.\Protocolo.c **** 	decimal=0;
 1800              		.loc 1 471 0
 1801 009c 0023     		movs	r3, #0
 1802 009e 3B77     		strb	r3, [r7, #28]
 472:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1803              		.loc 1 472 0
 1804 00a0 0123     		movs	r3, #1
 1805 00a2 7B77     		strb	r3, [r7, #29]
 1806 00a4 0AE0     		b	.L121
 1807              	.L123:
 473:.\Protocolo.c **** 		if(valor[i]=='.'){
 1808              		.loc 1 473 0
 1809 00a6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1810 00a8 3A68     		ldr	r2, [r7]
 1811 00aa 1344     		add	r3, r3, r2
 1812 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1813 00ae 2E2B     		cmp	r3, #46
 1814 00b0 01D1     		bne	.L122
 474:.\Protocolo.c **** 			decimal=i;	
 1815              		.loc 1 474 0
 1816 00b2 7B7F     		ldrb	r3, [r7, #29]
 1817 00b4 3B77     		strb	r3, [r7, #28]
 1818              	.L122:
 472:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1819              		.loc 1 472 0
 1820 00b6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1821 00b8 0133     		adds	r3, r3, #1
 1822 00ba 7B77     		strb	r3, [r7, #29]
 1823              	.L121:
 472:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1824              		.loc 1 472 0 is_stmt 0 discriminator 1
 1825 00bc 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1826 00be 072B     		cmp	r3, #7
 1827 00c0 F1D9     		bls	.L123
 475:.\Protocolo.c **** 		}
 476:.\Protocolo.c **** 	}
 477:.\Protocolo.c **** 	if(decimal>4){
 1828              		.loc 1 477 0 is_stmt 1
 1829 00c2 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1830 00c4 042B     		cmp	r3, #4
 1831 00c6 01D9     		bls	.L124
 478:.\Protocolo.c **** 		return 0;
 1832              		.loc 1 478 0
 1833 00c8 0023     		movs	r3, #0
 1834 00ca CFE3     		b	.L157
 1835              	.L124:
 479:.\Protocolo.c **** 	}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 43


 480:.\Protocolo.c **** 	if(version[1]!=7){		
 1836              		.loc 1 480 0
 1837 00cc 904B     		ldr	r3, .L158
 1838 00ce 5B78     		ldrb	r3, [r3, #1]
 1839 00d0 DBB2     		uxtb	r3, r3
 1840 00d2 072B     		cmp	r3, #7
 1841 00d4 00F00582 		beq	.L126
 481:.\Protocolo.c **** 		buffer[0]=0xFF;
 1842              		.loc 1 481 0
 1843 00d8 FF23     		movs	r3, #255
 1844 00da 3B72     		strb	r3, [r7, #8]
 482:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1845              		.loc 1 482 0
 1846 00dc BB7F     		ldrb	r3, [r7, #30]
 1847 00de 63F01F03 		orn	r3, r3, #31
 1848 00e2 DBB2     		uxtb	r3, r3
 1849 00e4 7B72     		strb	r3, [r7, #9]
 483:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1850              		.loc 1 483 0
 1851 00e6 7B79     		ldrb	r3, [r7, #5]
 1852 00e8 63F00F03 		orn	r3, r3, #15
 1853 00ec DBB2     		uxtb	r3, r3
 1854 00ee BB72     		strb	r3, [r7, #10]
 484:.\Protocolo.c **** 		buffer[3]=0xF4;
 1855              		.loc 1 484 0
 1856 00f0 F423     		movs	r3, #244
 1857 00f2 FB72     		strb	r3, [r7, #11]
 485:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1858              		.loc 1 485 0
 1859 00f4 F823     		movs	r3, #248
 1860 00f6 3B73     		strb	r3, [r7, #12]
 486:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1861              		.loc 1 486 0
 1862 00f8 3B68     		ldr	r3, [r7]
 1863 00fa 0133     		adds	r3, r3, #1
 1864 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1865 00fe 63F01F03 		orn	r3, r3, #31
 1866 0102 DBB2     		uxtb	r3, r3
 1867 0104 7B73     		strb	r3, [r7, #13]
 487:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 1868              		.loc 1 487 0
 1869 0106 3B68     		ldr	r3, [r7]
 1870 0108 0233     		adds	r3, r3, #2
 1871 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1872 010c 63F01F03 		orn	r3, r3, #31
 1873 0110 DBB2     		uxtb	r3, r3
 1874 0112 BB73     		strb	r3, [r7, #14]
 488:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 1875              		.loc 1 488 0
 1876 0114 3B68     		ldr	r3, [r7]
 1877 0116 0333     		adds	r3, r3, #3
 1878 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1879 011a 63F01F03 		orn	r3, r3, #31
 1880 011e DBB2     		uxtb	r3, r3
 1881 0120 FB73     		strb	r3, [r7, #15]
 489:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 1882              		.loc 1 489 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 44


 1883 0122 3B68     		ldr	r3, [r7]
 1884 0124 0433     		adds	r3, r3, #4
 1885 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1886 0128 63F01F03 		orn	r3, r3, #31
 1887 012c DBB2     		uxtb	r3, r3
 1888 012e 3B74     		strb	r3, [r7, #16]
 490:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 1889              		.loc 1 490 0
 1890 0130 3B68     		ldr	r3, [r7]
 1891 0132 0533     		adds	r3, r3, #5
 1892 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1893 0136 63F01F03 		orn	r3, r3, #31
 1894 013a DBB2     		uxtb	r3, r3
 1895 013c 7B74     		strb	r3, [r7, #17]
 491:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);
 1896              		.loc 1 491 0
 1897 013e 3B68     		ldr	r3, [r7]
 1898 0140 0633     		adds	r3, r3, #6
 1899 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1900 0144 63F01F03 		orn	r3, r3, #31
 1901 0148 DBB2     		uxtb	r3, r3
 1902 014a BB74     		strb	r3, [r7, #18]
 492:.\Protocolo.c **** 		if(version[2]==2){
 1903              		.loc 1 492 0
 1904 014c 704B     		ldr	r3, .L158
 1905 014e 9B78     		ldrb	r3, [r3, #2]
 1906 0150 DBB2     		uxtb	r3, r3
 1907 0152 022B     		cmp	r3, #2
 1908 0154 40F0A580 		bne	.L127
 493:.\Protocolo.c **** 			if(decimal==4){
 1909              		.loc 1 493 0
 1910 0158 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1911 015a 042B     		cmp	r3, #4
 1912 015c 29D1     		bne	.L128
 494:.\Protocolo.c **** 				buffer[5]=(valor[2]|0xE0);
 1913              		.loc 1 494 0
 1914 015e 3B68     		ldr	r3, [r7]
 1915 0160 0233     		adds	r3, r3, #2
 1916 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1917 0164 63F01F03 		orn	r3, r3, #31
 1918 0168 DBB2     		uxtb	r3, r3
 1919 016a 7B73     		strb	r3, [r7, #13]
 495:.\Protocolo.c **** 				buffer[6]=(valor[3]|0xE0);
 1920              		.loc 1 495 0
 1921 016c 3B68     		ldr	r3, [r7]
 1922 016e 0333     		adds	r3, r3, #3
 1923 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1924 0172 63F01F03 		orn	r3, r3, #31
 1925 0176 DBB2     		uxtb	r3, r3
 1926 0178 BB73     		strb	r3, [r7, #14]
 496:.\Protocolo.c **** 				buffer[7]=(valor[5]|0xE0);
 1927              		.loc 1 496 0
 1928 017a 3B68     		ldr	r3, [r7]
 1929 017c 0533     		adds	r3, r3, #5
 1930 017e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1931 0180 63F01F03 		orn	r3, r3, #31
 1932 0184 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 45


 1933 0186 FB73     		strb	r3, [r7, #15]
 497:.\Protocolo.c **** 				buffer[8]=(valor[6]|0xE0);
 1934              		.loc 1 497 0
 1935 0188 3B68     		ldr	r3, [r7]
 1936 018a 0633     		adds	r3, r3, #6
 1937 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1938 018e 63F01F03 		orn	r3, r3, #31
 1939 0192 DBB2     		uxtb	r3, r3
 1940 0194 3B74     		strb	r3, [r7, #16]
 498:.\Protocolo.c **** 				buffer[9]=(valor[7]|0xE0);
 1941              		.loc 1 498 0
 1942 0196 3B68     		ldr	r3, [r7]
 1943 0198 0733     		adds	r3, r3, #7
 1944 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1945 019c 63F01F03 		orn	r3, r3, #31
 1946 01a0 DBB2     		uxtb	r3, r3
 1947 01a2 7B74     		strb	r3, [r7, #17]
 499:.\Protocolo.c **** 				buffer[10]=(valor[8]|0xE0);
 1948              		.loc 1 499 0
 1949 01a4 3B68     		ldr	r3, [r7]
 1950 01a6 0833     		adds	r3, r3, #8
 1951 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1952 01aa 63F01F03 		orn	r3, r3, #31
 1953 01ae DBB2     		uxtb	r3, r3
 1954 01b0 BB74     		strb	r3, [r7, #18]
 1955              	.L128:
 500:.\Protocolo.c **** 			}
 501:.\Protocolo.c **** 			if(decimal==3){
 1956              		.loc 1 501 0
 1957 01b2 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1958 01b4 032B     		cmp	r3, #3
 1959 01b6 29D1     		bne	.L129
 502:.\Protocolo.c **** 				buffer[5]=(valor[1]|0xE0);
 1960              		.loc 1 502 0
 1961 01b8 3B68     		ldr	r3, [r7]
 1962 01ba 0133     		adds	r3, r3, #1
 1963 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1964 01be 63F01F03 		orn	r3, r3, #31
 1965 01c2 DBB2     		uxtb	r3, r3
 1966 01c4 7B73     		strb	r3, [r7, #13]
 503:.\Protocolo.c **** 				buffer[6]=(valor[2]|0xE0);
 1967              		.loc 1 503 0
 1968 01c6 3B68     		ldr	r3, [r7]
 1969 01c8 0233     		adds	r3, r3, #2
 1970 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1971 01cc 63F01F03 		orn	r3, r3, #31
 1972 01d0 DBB2     		uxtb	r3, r3
 1973 01d2 BB73     		strb	r3, [r7, #14]
 504:.\Protocolo.c **** 				buffer[7]=(valor[4]|0xE0);
 1974              		.loc 1 504 0
 1975 01d4 3B68     		ldr	r3, [r7]
 1976 01d6 0433     		adds	r3, r3, #4
 1977 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1978 01da 63F01F03 		orn	r3, r3, #31
 1979 01de DBB2     		uxtb	r3, r3
 1980 01e0 FB73     		strb	r3, [r7, #15]
 505:.\Protocolo.c **** 				buffer[8]=(valor[5]|0xE0);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 46


 1981              		.loc 1 505 0
 1982 01e2 3B68     		ldr	r3, [r7]
 1983 01e4 0533     		adds	r3, r3, #5
 1984 01e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1985 01e8 63F01F03 		orn	r3, r3, #31
 1986 01ec DBB2     		uxtb	r3, r3
 1987 01ee 3B74     		strb	r3, [r7, #16]
 506:.\Protocolo.c **** 				buffer[9]=(valor[6]|0xE0);
 1988              		.loc 1 506 0
 1989 01f0 3B68     		ldr	r3, [r7]
 1990 01f2 0633     		adds	r3, r3, #6
 1991 01f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1992 01f6 63F01F03 		orn	r3, r3, #31
 1993 01fa DBB2     		uxtb	r3, r3
 1994 01fc 7B74     		strb	r3, [r7, #17]
 507:.\Protocolo.c **** 				buffer[10]=(valor[7]|0xE0);
 1995              		.loc 1 507 0
 1996 01fe 3B68     		ldr	r3, [r7]
 1997 0200 0733     		adds	r3, r3, #7
 1998 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1999 0204 63F01F03 		orn	r3, r3, #31
 2000 0208 DBB2     		uxtb	r3, r3
 2001 020a BB74     		strb	r3, [r7, #18]
 2002              	.L129:
 508:.\Protocolo.c **** 			}
 509:.\Protocolo.c **** 			if(decimal==2){
 2003              		.loc 1 509 0
 2004 020c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2005 020e 022B     		cmp	r3, #2
 2006 0210 24D1     		bne	.L130
 510:.\Protocolo.c **** 				buffer[5]=0xE0;
 2007              		.loc 1 510 0
 2008 0212 E023     		movs	r3, #224
 2009 0214 7B73     		strb	r3, [r7, #13]
 511:.\Protocolo.c **** 				buffer[6]=(valor[1]|0xE0);
 2010              		.loc 1 511 0
 2011 0216 3B68     		ldr	r3, [r7]
 2012 0218 0133     		adds	r3, r3, #1
 2013 021a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2014 021c 63F01F03 		orn	r3, r3, #31
 2015 0220 DBB2     		uxtb	r3, r3
 2016 0222 BB73     		strb	r3, [r7, #14]
 512:.\Protocolo.c **** 				buffer[7]=(valor[3]|0xE0);
 2017              		.loc 1 512 0
 2018 0224 3B68     		ldr	r3, [r7]
 2019 0226 0333     		adds	r3, r3, #3
 2020 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2021 022a 63F01F03 		orn	r3, r3, #31
 2022 022e DBB2     		uxtb	r3, r3
 2023 0230 FB73     		strb	r3, [r7, #15]
 513:.\Protocolo.c **** 				buffer[8]=(valor[4]|0xE0);
 2024              		.loc 1 513 0
 2025 0232 3B68     		ldr	r3, [r7]
 2026 0234 0433     		adds	r3, r3, #4
 2027 0236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2028 0238 63F01F03 		orn	r3, r3, #31
 2029 023c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 47


 2030 023e 3B74     		strb	r3, [r7, #16]
 514:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);	
 2031              		.loc 1 514 0
 2032 0240 3B68     		ldr	r3, [r7]
 2033 0242 0533     		adds	r3, r3, #5
 2034 0244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2035 0246 63F01F03 		orn	r3, r3, #31
 2036 024a DBB2     		uxtb	r3, r3
 2037 024c 7B74     		strb	r3, [r7, #17]
 515:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 2038              		.loc 1 515 0
 2039 024e 3B68     		ldr	r3, [r7]
 2040 0250 0633     		adds	r3, r3, #6
 2041 0252 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2042 0254 63F01F03 		orn	r3, r3, #31
 2043 0258 DBB2     		uxtb	r3, r3
 2044 025a BB74     		strb	r3, [r7, #18]
 2045              	.L130:
 516:.\Protocolo.c **** 			}
 517:.\Protocolo.c **** 			if(decimal==0){
 2046              		.loc 1 517 0
 2047 025c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2048 025e 002B     		cmp	r3, #0
 2049 0260 1FD1     		bne	.L127
 518:.\Protocolo.c **** 				buffer[5]=0xE0;
 2050              		.loc 1 518 0
 2051 0262 E023     		movs	r3, #224
 2052 0264 7B73     		strb	r3, [r7, #13]
 519:.\Protocolo.c **** 				buffer[6]=0xE0;
 2053              		.loc 1 519 0
 2054 0266 E023     		movs	r3, #224
 2055 0268 BB73     		strb	r3, [r7, #14]
 520:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2056              		.loc 1 520 0
 2057 026a 3B68     		ldr	r3, [r7]
 2058 026c 0133     		adds	r3, r3, #1
 2059 026e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2060 0270 63F01F03 		orn	r3, r3, #31
 2061 0274 DBB2     		uxtb	r3, r3
 2062 0276 FB73     		strb	r3, [r7, #15]
 521:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2063              		.loc 1 521 0
 2064 0278 3B68     		ldr	r3, [r7]
 2065 027a 0233     		adds	r3, r3, #2
 2066 027c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2067 027e 63F01F03 		orn	r3, r3, #31
 2068 0282 DBB2     		uxtb	r3, r3
 2069 0284 3B74     		strb	r3, [r7, #16]
 522:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2070              		.loc 1 522 0
 2071 0286 3B68     		ldr	r3, [r7]
 2072 0288 0333     		adds	r3, r3, #3
 2073 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2074 028c 63F01F03 		orn	r3, r3, #31
 2075 0290 DBB2     		uxtb	r3, r3
 2076 0292 7B74     		strb	r3, [r7, #17]
 523:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 48


 2077              		.loc 1 523 0
 2078 0294 3B68     		ldr	r3, [r7]
 2079 0296 0433     		adds	r3, r3, #4
 2080 0298 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2081 029a 63F01F03 		orn	r3, r3, #31
 2082 029e DBB2     		uxtb	r3, r3
 2083 02a0 BB74     		strb	r3, [r7, #18]
 2084              	.L127:
 524:.\Protocolo.c **** 			}			
 525:.\Protocolo.c **** 		}
 526:.\Protocolo.c **** 		buffer[11]=0xFB;
 2085              		.loc 1 526 0
 2086 02a2 FB23     		movs	r3, #251
 2087 02a4 FB74     		strb	r3, [r7, #19]
 527:.\Protocolo.c **** 		buffer[12]=0;
 2088              		.loc 1 527 0
 2089 02a6 0023     		movs	r3, #0
 2090 02a8 3B75     		strb	r3, [r7, #20]
 528:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 2091              		.loc 1 528 0
 2092 02aa 0023     		movs	r3, #0
 2093 02ac 7B77     		strb	r3, [r7, #29]
 2094 02ae 0FE0     		b	.L131
 2095              	.L132:
 529:.\Protocolo.c **** 			buffer[12]+=(buffer[i]&0x0F);	
 2096              		.loc 1 529 0 discriminator 2
 2097 02b0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 2098 02b2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2099 02b4 07F12001 		add	r1, r7, #32
 2100 02b8 0B44     		add	r3, r3, r1
 2101 02ba 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2102 02be 03F00F03 		and	r3, r3, #15
 2103 02c2 DBB2     		uxtb	r3, r3
 2104 02c4 1344     		add	r3, r3, r2
 2105 02c6 DBB2     		uxtb	r3, r3
 2106 02c8 3B75     		strb	r3, [r7, #20]
 528:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 2107              		.loc 1 528 0 discriminator 2
 2108 02ca 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2109 02cc 0133     		adds	r3, r3, #1
 2110 02ce 7B77     		strb	r3, [r7, #29]
 2111              	.L131:
 528:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 2112              		.loc 1 528 0 is_stmt 0 discriminator 1
 2113 02d0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2114 02d2 0B2B     		cmp	r3, #11
 2115 02d4 ECD9     		bls	.L132
 530:.\Protocolo.c **** 		}
 531:.\Protocolo.c **** 		buffer[12]=(((~buffer[12])+1)&0x0F)|0xE0;
 2116              		.loc 1 531 0 is_stmt 1
 2117 02d6 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 2118 02d8 5B42     		negs	r3, r3
 2119 02da DBB2     		uxtb	r3, r3
 2120 02dc DBB2     		uxtb	r3, r3
 2121 02de 03F00F03 		and	r3, r3, #15
 2122 02e2 DBB2     		uxtb	r3, r3
 2123 02e4 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 49


 2124 02e8 DBB2     		uxtb	r3, r3
 2125 02ea DBB2     		uxtb	r3, r3
 2126 02ec 3B75     		strb	r3, [r7, #20]
 532:.\Protocolo.c **** 		buffer[13]=0xF0;
 2127              		.loc 1 532 0
 2128 02ee F023     		movs	r3, #240
 2129 02f0 7B75     		strb	r3, [r7, #21]
 533:.\Protocolo.c **** 		size=13;
 2130              		.loc 1 533 0
 2131 02f2 0D23     		movs	r3, #13
 2132 02f4 FB77     		strb	r3, [r7, #31]
 534:.\Protocolo.c **** 		if(version[1]==5){
 2133              		.loc 1 534 0
 2134 02f6 064B     		ldr	r3, .L158
 2135 02f8 5B78     		ldrb	r3, [r3, #1]
 2136 02fa DBB2     		uxtb	r3, r3
 2137 02fc 052B     		cmp	r3, #5
 2138 02fe 2CD1     		bne	.L133
 535:.\Protocolo.c **** 			buffer[10]=0xFB;
 2139              		.loc 1 535 0
 2140 0300 FB23     		movs	r3, #251
 2141 0302 BB74     		strb	r3, [r7, #18]
 536:.\Protocolo.c **** 			buffer[11]=0;
 2142              		.loc 1 536 0
 2143 0304 0023     		movs	r3, #0
 2144 0306 FB74     		strb	r3, [r7, #19]
 537:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 2145              		.loc 1 537 0
 2146 0308 0023     		movs	r3, #0
 2147 030a 7B77     		strb	r3, [r7, #29]
 2148 030c 12E0     		b	.L134
 2149              	.L159:
 2150 030e 00BF     		.align	2
 2151              	.L158:
 2152 0310 00000000 		.word	version
 2153              	.L135:
 538:.\Protocolo.c **** 				buffer[11]+=(buffer[i]&0x0F);	
 2154              		.loc 1 538 0 discriminator 2
 2155 0314 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 2156 0316 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2157 0318 07F12001 		add	r1, r7, #32
 2158 031c 0B44     		add	r3, r3, r1
 2159 031e 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2160 0322 03F00F03 		and	r3, r3, #15
 2161 0326 DBB2     		uxtb	r3, r3
 2162 0328 1344     		add	r3, r3, r2
 2163 032a DBB2     		uxtb	r3, r3
 2164 032c FB74     		strb	r3, [r7, #19]
 537:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 2165              		.loc 1 537 0 discriminator 2
 2166 032e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2167 0330 0133     		adds	r3, r3, #1
 2168 0332 7B77     		strb	r3, [r7, #29]
 2169              	.L134:
 537:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 2170              		.loc 1 537 0 is_stmt 0 discriminator 1
 2171 0334 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 50


 2172 0336 0A2B     		cmp	r3, #10
 2173 0338 ECD9     		bls	.L135
 539:.\Protocolo.c **** 			}
 540:.\Protocolo.c **** 			buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 2174              		.loc 1 540 0 is_stmt 1
 2175 033a FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2176 033c 5B42     		negs	r3, r3
 2177 033e DBB2     		uxtb	r3, r3
 2178 0340 DBB2     		uxtb	r3, r3
 2179 0342 03F00F03 		and	r3, r3, #15
 2180 0346 DBB2     		uxtb	r3, r3
 2181 0348 63F01F03 		orn	r3, r3, #31
 2182 034c DBB2     		uxtb	r3, r3
 2183 034e DBB2     		uxtb	r3, r3
 2184 0350 FB74     		strb	r3, [r7, #19]
 541:.\Protocolo.c **** 			buffer[12]=0xF0;
 2185              		.loc 1 541 0
 2186 0352 F023     		movs	r3, #240
 2187 0354 3B75     		strb	r3, [r7, #20]
 542:.\Protocolo.c **** 			size=12;		
 2188              		.loc 1 542 0
 2189 0356 0C23     		movs	r3, #12
 2190 0358 FB77     		strb	r3, [r7, #31]
 2191              	.L133:
 543:.\Protocolo.c **** 		}
 544:.\Protocolo.c **** 		if(preset==1){
 2192              		.loc 1 544 0
 2193 035a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2194 035c 012B     		cmp	r3, #1
 2195 035e 40F0C080 		bne	.L126
 545:.\Protocolo.c **** 			buffer[4]=0xF6;
 2196              		.loc 1 545 0
 2197 0362 F623     		movs	r3, #246
 2198 0364 3B73     		strb	r3, [r7, #12]
 546:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 2199              		.loc 1 546 0
 2200 0366 BB79     		ldrb	r3, [r7, #6]
 2201 0368 013B     		subs	r3, r3, #1
 2202 036a DBB2     		uxtb	r3, r3
 2203 036c DBB2     		uxtb	r3, r3
 2204 036e 63F01F03 		orn	r3, r3, #31
 2205 0372 DBB2     		uxtb	r3, r3
 2206 0374 DBB2     		uxtb	r3, r3
 2207 0376 7B73     		strb	r3, [r7, #13]
 547:.\Protocolo.c **** 			buffer[6]=0xF8;
 2208              		.loc 1 547 0
 2209 0378 F823     		movs	r3, #248
 2210 037a BB73     		strb	r3, [r7, #14]
 548:.\Protocolo.c **** 			if(decimal==4){
 2211              		.loc 1 548 0
 2212 037c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2213 037e 042B     		cmp	r3, #4
 2214 0380 22D1     		bne	.L136
 549:.\Protocolo.c **** 				buffer[7]=(valor[2]|0xE0);
 2215              		.loc 1 549 0
 2216 0382 3B68     		ldr	r3, [r7]
 2217 0384 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 51


 2218 0386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2219 0388 63F01F03 		orn	r3, r3, #31
 2220 038c DBB2     		uxtb	r3, r3
 2221 038e FB73     		strb	r3, [r7, #15]
 550:.\Protocolo.c **** 				buffer[8]=(valor[3]|0xE0);
 2222              		.loc 1 550 0
 2223 0390 3B68     		ldr	r3, [r7]
 2224 0392 0333     		adds	r3, r3, #3
 2225 0394 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2226 0396 63F01F03 		orn	r3, r3, #31
 2227 039a DBB2     		uxtb	r3, r3
 2228 039c 3B74     		strb	r3, [r7, #16]
 551:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);
 2229              		.loc 1 551 0
 2230 039e 3B68     		ldr	r3, [r7]
 2231 03a0 0533     		adds	r3, r3, #5
 2232 03a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2233 03a4 63F01F03 		orn	r3, r3, #31
 2234 03a8 DBB2     		uxtb	r3, r3
 2235 03aa 7B74     		strb	r3, [r7, #17]
 552:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 2236              		.loc 1 552 0
 2237 03ac 3B68     		ldr	r3, [r7]
 2238 03ae 0633     		adds	r3, r3, #6
 2239 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2240 03b2 63F01F03 		orn	r3, r3, #31
 2241 03b6 DBB2     		uxtb	r3, r3
 2242 03b8 BB74     		strb	r3, [r7, #18]
 553:.\Protocolo.c **** 				buffer[11]=(valor[7]|0xE0);
 2243              		.loc 1 553 0
 2244 03ba 3B68     		ldr	r3, [r7]
 2245 03bc 0733     		adds	r3, r3, #7
 2246 03be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2247 03c0 63F01F03 		orn	r3, r3, #31
 2248 03c4 DBB2     		uxtb	r3, r3
 2249 03c6 FB74     		strb	r3, [r7, #19]
 2250              	.L136:
 554:.\Protocolo.c **** 			}
 555:.\Protocolo.c **** 			if(decimal==3){
 2251              		.loc 1 555 0
 2252 03c8 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2253 03ca 032B     		cmp	r3, #3
 2254 03cc 22D1     		bne	.L137
 556:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2255              		.loc 1 556 0
 2256 03ce 3B68     		ldr	r3, [r7]
 2257 03d0 0133     		adds	r3, r3, #1
 2258 03d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2259 03d4 63F01F03 		orn	r3, r3, #31
 2260 03d8 DBB2     		uxtb	r3, r3
 2261 03da FB73     		strb	r3, [r7, #15]
 557:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2262              		.loc 1 557 0
 2263 03dc 3B68     		ldr	r3, [r7]
 2264 03de 0233     		adds	r3, r3, #2
 2265 03e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2266 03e2 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 52


 2267 03e6 DBB2     		uxtb	r3, r3
 2268 03e8 3B74     		strb	r3, [r7, #16]
 558:.\Protocolo.c **** 				buffer[9]=(valor[4]|0xE0);
 2269              		.loc 1 558 0
 2270 03ea 3B68     		ldr	r3, [r7]
 2271 03ec 0433     		adds	r3, r3, #4
 2272 03ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2273 03f0 63F01F03 		orn	r3, r3, #31
 2274 03f4 DBB2     		uxtb	r3, r3
 2275 03f6 7B74     		strb	r3, [r7, #17]
 559:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 2276              		.loc 1 559 0
 2277 03f8 3B68     		ldr	r3, [r7]
 2278 03fa 0533     		adds	r3, r3, #5
 2279 03fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2280 03fe 63F01F03 		orn	r3, r3, #31
 2281 0402 DBB2     		uxtb	r3, r3
 2282 0404 BB74     		strb	r3, [r7, #18]
 560:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);		
 2283              		.loc 1 560 0
 2284 0406 3B68     		ldr	r3, [r7]
 2285 0408 0633     		adds	r3, r3, #6
 2286 040a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2287 040c 63F01F03 		orn	r3, r3, #31
 2288 0410 DBB2     		uxtb	r3, r3
 2289 0412 FB74     		strb	r3, [r7, #19]
 2290              	.L137:
 561:.\Protocolo.c **** 			}
 562:.\Protocolo.c **** 			if(decimal==2){
 2291              		.loc 1 562 0
 2292 0414 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2293 0416 022B     		cmp	r3, #2
 2294 0418 1DD1     		bne	.L138
 563:.\Protocolo.c **** 				buffer[7]=0xE0;
 2295              		.loc 1 563 0
 2296 041a E023     		movs	r3, #224
 2297 041c FB73     		strb	r3, [r7, #15]
 564:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 2298              		.loc 1 564 0
 2299 041e 3B68     		ldr	r3, [r7]
 2300 0420 0133     		adds	r3, r3, #1
 2301 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2302 0424 63F01F03 		orn	r3, r3, #31
 2303 0428 DBB2     		uxtb	r3, r3
 2304 042a 3B74     		strb	r3, [r7, #16]
 565:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2305              		.loc 1 565 0
 2306 042c 3B68     		ldr	r3, [r7]
 2307 042e 0333     		adds	r3, r3, #3
 2308 0430 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2309 0432 63F01F03 		orn	r3, r3, #31
 2310 0436 DBB2     		uxtb	r3, r3
 2311 0438 7B74     		strb	r3, [r7, #17]
 566:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 2312              		.loc 1 566 0
 2313 043a 3B68     		ldr	r3, [r7]
 2314 043c 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 53


 2315 043e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2316 0440 63F01F03 		orn	r3, r3, #31
 2317 0444 DBB2     		uxtb	r3, r3
 2318 0446 BB74     		strb	r3, [r7, #18]
 567:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);		
 2319              		.loc 1 567 0
 2320 0448 3B68     		ldr	r3, [r7]
 2321 044a 0533     		adds	r3, r3, #5
 2322 044c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2323 044e 63F01F03 		orn	r3, r3, #31
 2324 0452 DBB2     		uxtb	r3, r3
 2325 0454 FB74     		strb	r3, [r7, #19]
 2326              	.L138:
 568:.\Protocolo.c **** 			}
 569:.\Protocolo.c **** 			if(decimal==0){
 2327              		.loc 1 569 0
 2328 0456 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2329 0458 002B     		cmp	r3, #0
 2330 045a 18D1     		bne	.L139
 570:.\Protocolo.c **** 				buffer[7]=0xE0;
 2331              		.loc 1 570 0
 2332 045c E023     		movs	r3, #224
 2333 045e FB73     		strb	r3, [r7, #15]
 571:.\Protocolo.c **** 				buffer[8]=0xE0;
 2334              		.loc 1 571 0
 2335 0460 E023     		movs	r3, #224
 2336 0462 3B74     		strb	r3, [r7, #16]
 572:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 2337              		.loc 1 572 0
 2338 0464 3B68     		ldr	r3, [r7]
 2339 0466 0133     		adds	r3, r3, #1
 2340 0468 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2341 046a 63F01F03 		orn	r3, r3, #31
 2342 046e DBB2     		uxtb	r3, r3
 2343 0470 7B74     		strb	r3, [r7, #17]
 573:.\Protocolo.c **** 				buffer[10]=(valor[2]|0xE0);
 2344              		.loc 1 573 0
 2345 0472 3B68     		ldr	r3, [r7]
 2346 0474 0233     		adds	r3, r3, #2
 2347 0476 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2348 0478 63F01F03 		orn	r3, r3, #31
 2349 047c DBB2     		uxtb	r3, r3
 2350 047e BB74     		strb	r3, [r7, #18]
 574:.\Protocolo.c **** 				buffer[11]=(valor[3]|0xE0);		
 2351              		.loc 1 574 0
 2352 0480 3B68     		ldr	r3, [r7]
 2353 0482 0333     		adds	r3, r3, #3
 2354 0484 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2355 0486 63F01F03 		orn	r3, r3, #31
 2356 048a DBB2     		uxtb	r3, r3
 2357 048c FB74     		strb	r3, [r7, #19]
 2358              	.L139:
 575:.\Protocolo.c **** 			}			
 576:.\Protocolo.c **** 			buffer[12]=0xFB;
 2359              		.loc 1 576 0
 2360 048e FB23     		movs	r3, #251
 2361 0490 3B75     		strb	r3, [r7, #20]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 54


 577:.\Protocolo.c **** 			buffer[13]=0;
 2362              		.loc 1 577 0
 2363 0492 0023     		movs	r3, #0
 2364 0494 7B75     		strb	r3, [r7, #21]
 578:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 2365              		.loc 1 578 0
 2366 0496 0023     		movs	r3, #0
 2367 0498 7B77     		strb	r3, [r7, #29]
 2368 049a 0FE0     		b	.L140
 2369              	.L141:
 579:.\Protocolo.c **** 				buffer[13]+=(buffer[i]&0x0F);	
 2370              		.loc 1 579 0 discriminator 2
 2371 049c 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 2372 049e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2373 04a0 07F12001 		add	r1, r7, #32
 2374 04a4 0B44     		add	r3, r3, r1
 2375 04a6 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2376 04aa 03F00F03 		and	r3, r3, #15
 2377 04ae DBB2     		uxtb	r3, r3
 2378 04b0 1344     		add	r3, r3, r2
 2379 04b2 DBB2     		uxtb	r3, r3
 2380 04b4 7B75     		strb	r3, [r7, #21]
 578:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 2381              		.loc 1 578 0 discriminator 2
 2382 04b6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2383 04b8 0133     		adds	r3, r3, #1
 2384 04ba 7B77     		strb	r3, [r7, #29]
 2385              	.L140:
 578:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 2386              		.loc 1 578 0 is_stmt 0 discriminator 1
 2387 04bc 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2388 04be 0C2B     		cmp	r3, #12
 2389 04c0 ECD9     		bls	.L141
 580:.\Protocolo.c **** 			}
 581:.\Protocolo.c **** 			buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;			
 2390              		.loc 1 581 0 is_stmt 1
 2391 04c2 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 2392 04c4 5B42     		negs	r3, r3
 2393 04c6 DBB2     		uxtb	r3, r3
 2394 04c8 DBB2     		uxtb	r3, r3
 2395 04ca 03F00F03 		and	r3, r3, #15
 2396 04ce DBB2     		uxtb	r3, r3
 2397 04d0 63F01F03 		orn	r3, r3, #31
 2398 04d4 DBB2     		uxtb	r3, r3
 2399 04d6 DBB2     		uxtb	r3, r3
 2400 04d8 7B75     		strb	r3, [r7, #21]
 582:.\Protocolo.c **** 			buffer[14]=0xF0;
 2401              		.loc 1 582 0
 2402 04da F023     		movs	r3, #240
 2403 04dc BB75     		strb	r3, [r7, #22]
 583:.\Protocolo.c **** 			size=14;
 2404              		.loc 1 583 0
 2405 04de 0E23     		movs	r3, #14
 2406 04e0 FB77     		strb	r3, [r7, #31]
 2407              	.L126:
 584:.\Protocolo.c **** 		}	
 585:.\Protocolo.c **** 	}	
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 55


 586:.\Protocolo.c **** 	if(version[1]==7){
 2408              		.loc 1 586 0
 2409 04e2 A24B     		ldr	r3, .L160
 2410 04e4 5B78     		ldrb	r3, [r3, #1]
 2411 04e6 DBB2     		uxtb	r3, r3
 2412 04e8 072B     		cmp	r3, #7
 2413 04ea 40F06481 		bne	.L142
 587:.\Protocolo.c **** 		buffer[0]=0xFF;
 2414              		.loc 1 587 0
 2415 04ee FF23     		movs	r3, #255
 2416 04f0 3B72     		strb	r3, [r7, #8]
 588:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 2417              		.loc 1 588 0
 2418 04f2 BB7F     		ldrb	r3, [r7, #30]
 2419 04f4 63F01F03 		orn	r3, r3, #31
 2420 04f8 DBB2     		uxtb	r3, r3
 2421 04fa 7B72     		strb	r3, [r7, #9]
 589:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 2422              		.loc 1 589 0
 2423 04fc 7B79     		ldrb	r3, [r7, #5]
 2424 04fe 63F00F03 		orn	r3, r3, #15
 2425 0502 DBB2     		uxtb	r3, r3
 2426 0504 BB72     		strb	r3, [r7, #10]
 590:.\Protocolo.c **** 		buffer[3]=0xF4;
 2427              		.loc 1 590 0
 2428 0506 F423     		movs	r3, #244
 2429 0508 FB72     		strb	r3, [r7, #11]
 591:.\Protocolo.c **** 		buffer[4]=0xF8;	
 2430              		.loc 1 591 0
 2431 050a F823     		movs	r3, #248
 2432 050c 3B73     		strb	r3, [r7, #12]
 592:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 2433              		.loc 1 592 0
 2434 050e 3B68     		ldr	r3, [r7]
 2435 0510 0133     		adds	r3, r3, #1
 2436 0512 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2437 0514 63F01F03 		orn	r3, r3, #31
 2438 0518 DBB2     		uxtb	r3, r3
 2439 051a 7B73     		strb	r3, [r7, #13]
 593:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 2440              		.loc 1 593 0
 2441 051c 3B68     		ldr	r3, [r7]
 2442 051e 0233     		adds	r3, r3, #2
 2443 0520 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2444 0522 63F01F03 		orn	r3, r3, #31
 2445 0526 DBB2     		uxtb	r3, r3
 2446 0528 BB73     		strb	r3, [r7, #14]
 594:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 2447              		.loc 1 594 0
 2448 052a 3B68     		ldr	r3, [r7]
 2449 052c 0333     		adds	r3, r3, #3
 2450 052e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2451 0530 63F01F03 		orn	r3, r3, #31
 2452 0534 DBB2     		uxtb	r3, r3
 2453 0536 FB73     		strb	r3, [r7, #15]
 595:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 2454              		.loc 1 595 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 56


 2455 0538 3B68     		ldr	r3, [r7]
 2456 053a 0433     		adds	r3, r3, #4
 2457 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2458 053e 63F01F03 		orn	r3, r3, #31
 2459 0542 DBB2     		uxtb	r3, r3
 2460 0544 3B74     		strb	r3, [r7, #16]
 596:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 2461              		.loc 1 596 0
 2462 0546 3B68     		ldr	r3, [r7]
 2463 0548 0533     		adds	r3, r3, #5
 2464 054a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2465 054c 63F01F03 		orn	r3, r3, #31
 2466 0550 DBB2     		uxtb	r3, r3
 2467 0552 7B74     		strb	r3, [r7, #17]
 597:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);	
 2468              		.loc 1 597 0
 2469 0554 3B68     		ldr	r3, [r7]
 2470 0556 0633     		adds	r3, r3, #6
 2471 0558 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2472 055a 63F01F03 		orn	r3, r3, #31
 2473 055e DBB2     		uxtb	r3, r3
 2474 0560 BB74     		strb	r3, [r7, #18]
 598:.\Protocolo.c **** 		buffer[11]=(valor[7]|0xE0);
 2475              		.loc 1 598 0
 2476 0562 3B68     		ldr	r3, [r7]
 2477 0564 0733     		adds	r3, r3, #7
 2478 0566 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2479 0568 63F01F03 		orn	r3, r3, #31
 2480 056c DBB2     		uxtb	r3, r3
 2481 056e FB74     		strb	r3, [r7, #19]
 599:.\Protocolo.c **** 		buffer[12]=0xE0;
 2482              		.loc 1 599 0
 2483 0570 E023     		movs	r3, #224
 2484 0572 3B75     		strb	r3, [r7, #20]
 600:.\Protocolo.c **** 		buffer[13]=0xFB;
 2485              		.loc 1 600 0
 2486 0574 FB23     		movs	r3, #251
 2487 0576 7B75     		strb	r3, [r7, #21]
 601:.\Protocolo.c **** 		buffer[14]=0;
 2488              		.loc 1 601 0
 2489 0578 0023     		movs	r3, #0
 2490 057a BB75     		strb	r3, [r7, #22]
 602:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2491              		.loc 1 602 0
 2492 057c 0023     		movs	r3, #0
 2493 057e 7B77     		strb	r3, [r7, #29]
 2494 0580 0FE0     		b	.L143
 2495              	.L144:
 603:.\Protocolo.c **** 			buffer[14]+=(buffer[i]&0x0F);	
 2496              		.loc 1 603 0 discriminator 2
 2497 0582 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 2498 0584 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2499 0586 07F12001 		add	r1, r7, #32
 2500 058a 0B44     		add	r3, r3, r1
 2501 058c 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2502 0590 03F00F03 		and	r3, r3, #15
 2503 0594 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 57


 2504 0596 1344     		add	r3, r3, r2
 2505 0598 DBB2     		uxtb	r3, r3
 2506 059a BB75     		strb	r3, [r7, #22]
 602:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2507              		.loc 1 602 0 discriminator 2
 2508 059c 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2509 059e 0133     		adds	r3, r3, #1
 2510 05a0 7B77     		strb	r3, [r7, #29]
 2511              	.L143:
 602:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2512              		.loc 1 602 0 is_stmt 0 discriminator 1
 2513 05a2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2514 05a4 0D2B     		cmp	r3, #13
 2515 05a6 ECD9     		bls	.L144
 604:.\Protocolo.c **** 		}
 605:.\Protocolo.c **** 		buffer[14]=(((~buffer[14])+1)&0x0F)|0xE0;
 2516              		.loc 1 605 0 is_stmt 1
 2517 05a8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2518 05aa 5B42     		negs	r3, r3
 2519 05ac DBB2     		uxtb	r3, r3
 2520 05ae DBB2     		uxtb	r3, r3
 2521 05b0 03F00F03 		and	r3, r3, #15
 2522 05b4 DBB2     		uxtb	r3, r3
 2523 05b6 63F01F03 		orn	r3, r3, #31
 2524 05ba DBB2     		uxtb	r3, r3
 2525 05bc DBB2     		uxtb	r3, r3
 2526 05be BB75     		strb	r3, [r7, #22]
 606:.\Protocolo.c **** 		buffer[15]=0xF0;
 2527              		.loc 1 606 0
 2528 05c0 F023     		movs	r3, #240
 2529 05c2 FB75     		strb	r3, [r7, #23]
 607:.\Protocolo.c **** 		size=15;
 2530              		.loc 1 607 0
 2531 05c4 0F23     		movs	r3, #15
 2532 05c6 FB77     		strb	r3, [r7, #31]
 608:.\Protocolo.c **** 		if(preset==1){
 2533              		.loc 1 608 0
 2534 05c8 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2535 05ca 012B     		cmp	r3, #1
 2536 05cc 40F0F380 		bne	.L142
 609:.\Protocolo.c **** 			buffer[4]=0xF6;
 2537              		.loc 1 609 0
 2538 05d0 F623     		movs	r3, #246
 2539 05d2 3B73     		strb	r3, [r7, #12]
 610:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 2540              		.loc 1 610 0
 2541 05d4 BB79     		ldrb	r3, [r7, #6]
 2542 05d6 013B     		subs	r3, r3, #1
 2543 05d8 DBB2     		uxtb	r3, r3
 2544 05da DBB2     		uxtb	r3, r3
 2545 05dc 63F01F03 		orn	r3, r3, #31
 2546 05e0 DBB2     		uxtb	r3, r3
 2547 05e2 DBB2     		uxtb	r3, r3
 2548 05e4 7B73     		strb	r3, [r7, #13]
 611:.\Protocolo.c **** 			buffer[6]=0xF8;
 2549              		.loc 1 611 0
 2550 05e6 F823     		movs	r3, #248
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 58


 2551 05e8 BB73     		strb	r3, [r7, #14]
 612:.\Protocolo.c **** 			if(decimal==4){
 2552              		.loc 1 612 0
 2553 05ea 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2554 05ec 042B     		cmp	r3, #4
 2555 05ee 2DD1     		bne	.L145
 613:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2556              		.loc 1 613 0
 2557 05f0 3B68     		ldr	r3, [r7]
 2558 05f2 0133     		adds	r3, r3, #1
 2559 05f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2560 05f6 63F01F03 		orn	r3, r3, #31
 2561 05fa DBB2     		uxtb	r3, r3
 2562 05fc FB73     		strb	r3, [r7, #15]
 614:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2563              		.loc 1 614 0
 2564 05fe 3B68     		ldr	r3, [r7]
 2565 0600 0233     		adds	r3, r3, #2
 2566 0602 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2567 0604 63F01F03 		orn	r3, r3, #31
 2568 0608 DBB2     		uxtb	r3, r3
 2569 060a 3B74     		strb	r3, [r7, #16]
 615:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2570              		.loc 1 615 0
 2571 060c 3B68     		ldr	r3, [r7]
 2572 060e 0333     		adds	r3, r3, #3
 2573 0610 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2574 0612 63F01F03 		orn	r3, r3, #31
 2575 0616 DBB2     		uxtb	r3, r3
 2576 0618 7B74     		strb	r3, [r7, #17]
 616:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 2577              		.loc 1 616 0
 2578 061a 3B68     		ldr	r3, [r7]
 2579 061c 0533     		adds	r3, r3, #5
 2580 061e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2581 0620 63F01F03 		orn	r3, r3, #31
 2582 0624 DBB2     		uxtb	r3, r3
 2583 0626 BB74     		strb	r3, [r7, #18]
 617:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);
 2584              		.loc 1 617 0
 2585 0628 3B68     		ldr	r3, [r7]
 2586 062a 0633     		adds	r3, r3, #6
 2587 062c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2588 062e 63F01F03 		orn	r3, r3, #31
 2589 0632 DBB2     		uxtb	r3, r3
 2590 0634 FB74     		strb	r3, [r7, #19]
 618:.\Protocolo.c **** 				buffer[12]=(valor[7]|0xE0);	
 2591              		.loc 1 618 0
 2592 0636 3B68     		ldr	r3, [r7]
 2593 0638 0733     		adds	r3, r3, #7
 2594 063a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2595 063c 63F01F03 		orn	r3, r3, #31
 2596 0640 DBB2     		uxtb	r3, r3
 2597 0642 3B75     		strb	r3, [r7, #20]
 619:.\Protocolo.c **** 				buffer[13]=0xE0;	
 2598              		.loc 1 619 0
 2599 0644 E023     		movs	r3, #224
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 59


 2600 0646 7B75     		strb	r3, [r7, #21]
 620:.\Protocolo.c **** 				buffer[14]=0xE0;
 2601              		.loc 1 620 0
 2602 0648 E023     		movs	r3, #224
 2603 064a BB75     		strb	r3, [r7, #22]
 2604              	.L145:
 621:.\Protocolo.c **** 			}
 622:.\Protocolo.c **** 			if(decimal==3){
 2605              		.loc 1 622 0
 2606 064c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2607 064e 032B     		cmp	r3, #3
 2608 0650 2DD1     		bne	.L146
 623:.\Protocolo.c **** 				buffer[7]=0xE0;
 2609              		.loc 1 623 0
 2610 0652 E023     		movs	r3, #224
 2611 0654 FB73     		strb	r3, [r7, #15]
 624:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 2612              		.loc 1 624 0
 2613 0656 3B68     		ldr	r3, [r7]
 2614 0658 0133     		adds	r3, r3, #1
 2615 065a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2616 065c 63F01F03 		orn	r3, r3, #31
 2617 0660 DBB2     		uxtb	r3, r3
 2618 0662 3B74     		strb	r3, [r7, #16]
 625:.\Protocolo.c **** 				buffer[9]=(valor[2]|0xE0);
 2619              		.loc 1 625 0
 2620 0664 3B68     		ldr	r3, [r7]
 2621 0666 0233     		adds	r3, r3, #2
 2622 0668 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2623 066a 63F01F03 		orn	r3, r3, #31
 2624 066e DBB2     		uxtb	r3, r3
 2625 0670 7B74     		strb	r3, [r7, #17]
 626:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 2626              		.loc 1 626 0
 2627 0672 3B68     		ldr	r3, [r7]
 2628 0674 0433     		adds	r3, r3, #4
 2629 0676 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2630 0678 63F01F03 		orn	r3, r3, #31
 2631 067c DBB2     		uxtb	r3, r3
 2632 067e BB74     		strb	r3, [r7, #18]
 627:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);
 2633              		.loc 1 627 0
 2634 0680 3B68     		ldr	r3, [r7]
 2635 0682 0533     		adds	r3, r3, #5
 2636 0684 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2637 0686 63F01F03 		orn	r3, r3, #31
 2638 068a DBB2     		uxtb	r3, r3
 2639 068c FB74     		strb	r3, [r7, #19]
 628:.\Protocolo.c **** 				buffer[12]=(valor[6]|0xE0);
 2640              		.loc 1 628 0
 2641 068e 3B68     		ldr	r3, [r7]
 2642 0690 0633     		adds	r3, r3, #6
 2643 0692 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2644 0694 63F01F03 		orn	r3, r3, #31
 2645 0698 DBB2     		uxtb	r3, r3
 2646 069a 3B75     		strb	r3, [r7, #20]
 629:.\Protocolo.c **** 				buffer[13]=(valor[7]|0xE0);	
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 60


 2647              		.loc 1 629 0
 2648 069c 3B68     		ldr	r3, [r7]
 2649 069e 0733     		adds	r3, r3, #7
 2650 06a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2651 06a2 63F01F03 		orn	r3, r3, #31
 2652 06a6 DBB2     		uxtb	r3, r3
 2653 06a8 7B75     		strb	r3, [r7, #21]
 630:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2654              		.loc 1 630 0
 2655 06aa E023     		movs	r3, #224
 2656 06ac BB75     		strb	r3, [r7, #22]
 2657              	.L146:
 631:.\Protocolo.c **** 			}
 632:.\Protocolo.c **** 			if(decimal==2){
 2658              		.loc 1 632 0
 2659 06ae 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2660 06b0 022B     		cmp	r3, #2
 2661 06b2 2DD1     		bne	.L147
 633:.\Protocolo.c **** 				buffer[7]=0xE0;
 2662              		.loc 1 633 0
 2663 06b4 E023     		movs	r3, #224
 2664 06b6 FB73     		strb	r3, [r7, #15]
 634:.\Protocolo.c **** 				buffer[8]=0xE0;
 2665              		.loc 1 634 0
 2666 06b8 E023     		movs	r3, #224
 2667 06ba 3B74     		strb	r3, [r7, #16]
 635:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 2668              		.loc 1 635 0
 2669 06bc 3B68     		ldr	r3, [r7]
 2670 06be 0133     		adds	r3, r3, #1
 2671 06c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2672 06c2 63F01F03 		orn	r3, r3, #31
 2673 06c6 DBB2     		uxtb	r3, r3
 2674 06c8 7B74     		strb	r3, [r7, #17]
 636:.\Protocolo.c **** 				buffer[10]=(valor[3]|0xE0);
 2675              		.loc 1 636 0
 2676 06ca 3B68     		ldr	r3, [r7]
 2677 06cc 0333     		adds	r3, r3, #3
 2678 06ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2679 06d0 63F01F03 		orn	r3, r3, #31
 2680 06d4 DBB2     		uxtb	r3, r3
 2681 06d6 BB74     		strb	r3, [r7, #18]
 637:.\Protocolo.c **** 				buffer[11]=(valor[4]|0xE0);
 2682              		.loc 1 637 0
 2683 06d8 3B68     		ldr	r3, [r7]
 2684 06da 0433     		adds	r3, r3, #4
 2685 06dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2686 06de 63F01F03 		orn	r3, r3, #31
 2687 06e2 DBB2     		uxtb	r3, r3
 2688 06e4 FB74     		strb	r3, [r7, #19]
 638:.\Protocolo.c **** 				buffer[12]=(valor[5]|0xE0);
 2689              		.loc 1 638 0
 2690 06e6 3B68     		ldr	r3, [r7]
 2691 06e8 0533     		adds	r3, r3, #5
 2692 06ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2693 06ec 63F01F03 		orn	r3, r3, #31
 2694 06f0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 61


 2695 06f2 3B75     		strb	r3, [r7, #20]
 639:.\Protocolo.c **** 				buffer[13]=(valor[6]|0xE0);	
 2696              		.loc 1 639 0
 2697 06f4 3B68     		ldr	r3, [r7]
 2698 06f6 0633     		adds	r3, r3, #6
 2699 06f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2700 06fa 63F01F03 		orn	r3, r3, #31
 2701 06fe DBB2     		uxtb	r3, r3
 2702 0700 7B75     		strb	r3, [r7, #21]
 640:.\Protocolo.c **** 				buffer[14]=(valor[7]|0xE0);	
 2703              		.loc 1 640 0
 2704 0702 3B68     		ldr	r3, [r7]
 2705 0704 0733     		adds	r3, r3, #7
 2706 0706 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2707 0708 63F01F03 		orn	r3, r3, #31
 2708 070c DBB2     		uxtb	r3, r3
 2709 070e BB75     		strb	r3, [r7, #22]
 2710              	.L147:
 641:.\Protocolo.c **** 			}
 642:.\Protocolo.c **** 			if(decimal==0){
 2711              		.loc 1 642 0
 2712 0710 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2713 0712 002B     		cmp	r3, #0
 2714 0714 23D1     		bne	.L148
 643:.\Protocolo.c **** 				buffer[7]=0xE0;
 2715              		.loc 1 643 0
 2716 0716 E023     		movs	r3, #224
 2717 0718 FB73     		strb	r3, [r7, #15]
 644:.\Protocolo.c **** 				buffer[8]=0xE0;
 2718              		.loc 1 644 0
 2719 071a E023     		movs	r3, #224
 2720 071c 3B74     		strb	r3, [r7, #16]
 645:.\Protocolo.c **** 				buffer[9]=0xE0;
 2721              		.loc 1 645 0
 2722 071e E023     		movs	r3, #224
 2723 0720 7B74     		strb	r3, [r7, #17]
 646:.\Protocolo.c **** 				buffer[10]=(valor[1]|0xE0);
 2724              		.loc 1 646 0
 2725 0722 3B68     		ldr	r3, [r7]
 2726 0724 0133     		adds	r3, r3, #1
 2727 0726 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2728 0728 63F01F03 		orn	r3, r3, #31
 2729 072c DBB2     		uxtb	r3, r3
 2730 072e BB74     		strb	r3, [r7, #18]
 647:.\Protocolo.c **** 				buffer[11]=(valor[2]|0xE0);
 2731              		.loc 1 647 0
 2732 0730 3B68     		ldr	r3, [r7]
 2733 0732 0233     		adds	r3, r3, #2
 2734 0734 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2735 0736 63F01F03 		orn	r3, r3, #31
 2736 073a DBB2     		uxtb	r3, r3
 2737 073c FB74     		strb	r3, [r7, #19]
 648:.\Protocolo.c **** 				buffer[12]=(valor[3]|0xE0);
 2738              		.loc 1 648 0
 2739 073e 3B68     		ldr	r3, [r7]
 2740 0740 0333     		adds	r3, r3, #3
 2741 0742 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 62


 2742 0744 63F01F03 		orn	r3, r3, #31
 2743 0748 DBB2     		uxtb	r3, r3
 2744 074a 3B75     		strb	r3, [r7, #20]
 649:.\Protocolo.c **** 				buffer[13]=(valor[4]|0xE0);	
 2745              		.loc 1 649 0
 2746 074c 3B68     		ldr	r3, [r7]
 2747 074e 0433     		adds	r3, r3, #4
 2748 0750 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2749 0752 63F01F03 		orn	r3, r3, #31
 2750 0756 DBB2     		uxtb	r3, r3
 2751 0758 7B75     		strb	r3, [r7, #21]
 650:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2752              		.loc 1 650 0
 2753 075a E023     		movs	r3, #224
 2754 075c BB75     		strb	r3, [r7, #22]
 2755              	.L148:
 651:.\Protocolo.c **** 			}			
 652:.\Protocolo.c **** 			buffer[15]=0xFB;
 2756              		.loc 1 652 0
 2757 075e FB23     		movs	r3, #251
 2758 0760 FB75     		strb	r3, [r7, #23]
 653:.\Protocolo.c **** 			buffer[16]=0;
 2759              		.loc 1 653 0
 2760 0762 0023     		movs	r3, #0
 2761 0764 3B76     		strb	r3, [r7, #24]
 654:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2762              		.loc 1 654 0
 2763 0766 0023     		movs	r3, #0
 2764 0768 7B77     		strb	r3, [r7, #29]
 2765 076a 11E0     		b	.L149
 2766              	.L161:
 2767              		.align	2
 2768              	.L160:
 2769 076c 00000000 		.word	version
 2770              	.L150:
 655:.\Protocolo.c **** 				buffer[16]+=(buffer[i]&0x0F);	
 2771              		.loc 1 655 0 discriminator 2
 2772 0770 3A7E     		ldrb	r2, [r7, #24]	@ zero_extendqisi2
 2773 0772 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2774 0774 07F12001 		add	r1, r7, #32
 2775 0778 0B44     		add	r3, r3, r1
 2776 077a 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2777 077e 03F00F03 		and	r3, r3, #15
 2778 0782 DBB2     		uxtb	r3, r3
 2779 0784 1344     		add	r3, r3, r2
 2780 0786 DBB2     		uxtb	r3, r3
 2781 0788 3B76     		strb	r3, [r7, #24]
 654:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2782              		.loc 1 654 0 discriminator 2
 2783 078a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2784 078c 0133     		adds	r3, r3, #1
 2785 078e 7B77     		strb	r3, [r7, #29]
 2786              	.L149:
 654:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2787              		.loc 1 654 0 is_stmt 0 discriminator 1
 2788 0790 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2789 0792 0F2B     		cmp	r3, #15
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 63


 2790 0794 ECD9     		bls	.L150
 656:.\Protocolo.c **** 			}
 657:.\Protocolo.c **** 			buffer[16]=(((~buffer[16])+1)&0x0F)|0xE0;			
 2791              		.loc 1 657 0 is_stmt 1
 2792 0796 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 2793 0798 5B42     		negs	r3, r3
 2794 079a DBB2     		uxtb	r3, r3
 2795 079c DBB2     		uxtb	r3, r3
 2796 079e 03F00F03 		and	r3, r3, #15
 2797 07a2 DBB2     		uxtb	r3, r3
 2798 07a4 63F01F03 		orn	r3, r3, #31
 2799 07a8 DBB2     		uxtb	r3, r3
 2800 07aa DBB2     		uxtb	r3, r3
 2801 07ac 3B76     		strb	r3, [r7, #24]
 658:.\Protocolo.c **** 			buffer[17]=0xF0;
 2802              		.loc 1 658 0
 2803 07ae F023     		movs	r3, #240
 2804 07b0 7B76     		strb	r3, [r7, #25]
 659:.\Protocolo.c **** 			size=17;
 2805              		.loc 1 659 0
 2806 07b2 1123     		movs	r3, #17
 2807 07b4 FB77     		strb	r3, [r7, #31]
 2808              	.L142:
 660:.\Protocolo.c **** 		}		
 661:.\Protocolo.c **** 	}
 662:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2809              		.loc 1 662 0
 2810 07b6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 663:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2811              		.loc 1 663 0
 2812 07ba FB79     		ldrb	r3, [r7, #7]
 2813 07bc 43F02003 		orr	r3, r3, #32
 2814 07c0 DBB2     		uxtb	r3, r3
 2815 07c2 1846     		mov	r0, r3
 2816 07c4 FFF7FEFF 		bl	Surtidor_PutChar
 664:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2817              		.loc 1 664 0
 2818 07c8 2A48     		ldr	r0, .L162
 2819 07ca FFF7FEFF 		bl	isr_1_StartEx
 665:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2820              		.loc 1 665 0
 2821 07ce FFF7FEFF 		bl	Timer_RxSurtidor_Start
 666:.\Protocolo.c ****     rx_timeout=0;
 2822              		.loc 1 666 0
 2823 07d2 294B     		ldr	r3, .L162+4
 2824 07d4 0022     		movs	r2, #0
 2825 07d6 1A70     		strb	r2, [r3]
 667:.\Protocolo.c ****     CyDelay(10);
 2826              		.loc 1 667 0
 2827 07d8 0A20     		movs	r0, #10
 2828 07da FFF7FEFF 		bl	CyDelay
 668:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2829              		.loc 1 668 0
 2830 07de 0BE0     		b	.L151
 2831              	.L152:
 669:.\Protocolo.c **** 		if(rx_timeout==1){
 2832              		.loc 1 669 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 64


 2833 07e0 254B     		ldr	r3, .L162+4
 2834 07e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2835 07e4 012B     		cmp	r3, #1
 2836 07e6 07D1     		bne	.L151
 670:.\Protocolo.c **** 			isr_1_Stop();
 2837              		.loc 1 670 0
 2838 07e8 FFF7FEFF 		bl	isr_1_Stop
 671:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2839              		.loc 1 671 0
 2840 07ec FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 672:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2841              		.loc 1 672 0
 2842 07f0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 673:.\Protocolo.c **** 			return 0;
 2843              		.loc 1 673 0
 2844 07f4 0023     		movs	r3, #0
 2845 07f6 39E0     		b	.L157
 2846              	.L151:
 668:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2847              		.loc 1 668 0 discriminator 1
 2848 07f8 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2849 07fc 0346     		mov	r3, r0
 2850 07fe 002B     		cmp	r3, #0
 2851 0800 EED0     		beq	.L152
 674:.\Protocolo.c **** 		}
 675:.\Protocolo.c **** 	}
 676:.\Protocolo.c **** 	isr_1_Stop();
 2852              		.loc 1 676 0
 2853 0802 FFF7FEFF 		bl	isr_1_Stop
 677:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 2854              		.loc 1 677 0
 2855 0806 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 678:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2856              		.loc 1 678 0
 2857 080a FFF7FEFF 		bl	Surtidor_ReadRxData
 2858 080e 0346     		mov	r3, r0
 2859 0810 1A46     		mov	r2, r3
 2860 0812 FB79     		ldrb	r3, [r7, #7]
 2861 0814 63F02F03 		orn	r3, r3, #47
 2862 0818 DBB2     		uxtb	r3, r3
 2863 081a 9A42     		cmp	r2, r3
 2864 081c 25D1     		bne	.L153
 679:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2865              		.loc 1 679 0
 2866 081e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 680:.\Protocolo.c **** 		CyDelay(10);
 2867              		.loc 1 680 0
 2868 0822 0A20     		movs	r0, #10
 2869 0824 FFF7FEFF 		bl	CyDelay
 681:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2870              		.loc 1 681 0
 2871 0828 0023     		movs	r3, #0
 2872 082a 7B77     		strb	r3, [r7, #29]
 2873 082c 0BE0     		b	.L154
 2874              	.L155:
 682:.\Protocolo.c ****            	Surtidor_PutChar(buffer[i]);
 2875              		.loc 1 682 0 discriminator 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 65


 2876 082e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2877 0830 07F12002 		add	r2, r7, #32
 2878 0834 1344     		add	r3, r3, r2
 2879 0836 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2880 083a 1846     		mov	r0, r3
 2881 083c FFF7FEFF 		bl	Surtidor_PutChar
 681:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2882              		.loc 1 681 0 discriminator 2
 2883 0840 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2884 0842 0133     		adds	r3, r3, #1
 2885 0844 7B77     		strb	r3, [r7, #29]
 2886              	.L154:
 681:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2887              		.loc 1 681 0 is_stmt 0 discriminator 1
 2888 0846 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2889 0848 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2890 084a 9A42     		cmp	r2, r3
 2891 084c EFD9     		bls	.L155
 683:.\Protocolo.c ****         }
 684:.\Protocolo.c **** 		CyDelay(50);		
 2892              		.loc 1 684 0 is_stmt 1
 2893 084e 3220     		movs	r0, #50
 2894 0850 FFF7FEFF 		bl	CyDelay
 685:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2895              		.loc 1 685 0
 2896 0854 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2897 0856 1846     		mov	r0, r3
 2898 0858 FFF7FEFF 		bl	get_estado
 2899 085c 0346     		mov	r3, r0
 2900 085e 002B     		cmp	r3, #0
 2901 0860 01D1     		bne	.L156
 686:.\Protocolo.c **** 			return 0;
 2902              		.loc 1 686 0
 2903 0862 0023     		movs	r3, #0
 2904 0864 02E0     		b	.L157
 2905              	.L156:
 687:.\Protocolo.c **** 		}
 688:.\Protocolo.c **** 		else{
 689:.\Protocolo.c **** 			return 1;
 2906              		.loc 1 689 0
 2907 0866 0123     		movs	r3, #1
 2908 0868 00E0     		b	.L157
 2909              	.L153:
 690:.\Protocolo.c **** 		}
 691:.\Protocolo.c **** 	}
 692:.\Protocolo.c **** 	else{
 693:.\Protocolo.c **** 		return 0;
 2910              		.loc 1 693 0
 2911 086a 0023     		movs	r3, #0
 2912              	.L157:
 694:.\Protocolo.c **** 	}
 695:.\Protocolo.c **** }
 2913              		.loc 1 695 0
 2914 086c 1846     		mov	r0, r3
 2915 086e 2037     		adds	r7, r7, #32
 2916 0870 BD46     		mov	sp, r7
 2917              		@ sp needed
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 66


 2918 0872 80BD     		pop	{r7, pc}
 2919              	.L163:
 2920              		.align	2
 2921              	.L162:
 2922 0874 00000000 		.word	Rx_Surtidor
 2923 0878 00000000 		.word	rx_timeout
 2924              		.cfi_endproc
 2925              	.LFE70:
 2926              		.size	programar, .-programar
 2927              		.section	.text.cambiar_precio,"ax",%progbits
 2928              		.align	2
 2929              		.global	cambiar_precio
 2930              		.thumb
 2931              		.thumb_func
 2932              		.type	cambiar_precio, %function
 2933              	cambiar_precio:
 2934              	.LFB71:
 696:.\Protocolo.c **** 
 697:.\Protocolo.c **** /*
 698:.\Protocolo.c **** ***************************************************************************************************
 699:.\Protocolo.c **** *                           cambiar_precio(uint8 dir, uint8 *precio, uint8 num_man)
 700:.\Protocolo.c **** *
 701:.\Protocolo.c **** * Description : 
 702:.\Protocolo.c **** *               
 703:.\Protocolo.c **** *
 704:.\Protocolo.c **** * Argument(s) : none
 705:.\Protocolo.c **** *
 706:.\Protocolo.c **** * Return(s)   : none
 707:.\Protocolo.c **** *
 708:.\Protocolo.c **** * Caller(s)   : 
 709:.\Protocolo.c **** *
 710:.\Protocolo.c **** * Note(s)     : none.
 711:.\Protocolo.c **** ***************************************************************************************************
 712:.\Protocolo.c **** */
 713:.\Protocolo.c **** uint8 cambiar_precio(uint8 dir, uint8 *precio, uint8 num_man){
 2935              		.loc 1 713 0
 2936              		.cfi_startproc
 2937              		@ args = 0, pretend = 0, frame = 32
 2938              		@ frame_needed = 1, uses_anonymous_args = 0
 2939 0000 80B5     		push	{r7, lr}
 2940              		.cfi_def_cfa_offset 8
 2941              		.cfi_offset 7, -8
 2942              		.cfi_offset 14, -4
 2943 0002 88B0     		sub	sp, sp, #32
 2944              		.cfi_def_cfa_offset 40
 2945 0004 00AF     		add	r7, sp, #0
 2946              		.cfi_def_cfa_register 7
 2947 0006 3960     		str	r1, [r7]
 2948 0008 1346     		mov	r3, r2
 2949 000a 0246     		mov	r2, r0
 2950 000c FA71     		strb	r2, [r7, #7]
 2951 000e BB71     		strb	r3, [r7, #6]
 714:.\Protocolo.c **** 	uint8 buffer[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,x;
 2952              		.loc 1 714 0
 2953 0010 0023     		movs	r3, #0
 2954 0012 3B73     		strb	r3, [r7, #12]
 2955 0014 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 67


 2956 0016 7B73     		strb	r3, [r7, #13]
 2957 0018 0023     		movs	r3, #0
 2958 001a BB73     		strb	r3, [r7, #14]
 2959 001c 0023     		movs	r3, #0
 2960 001e FB73     		strb	r3, [r7, #15]
 2961 0020 0023     		movs	r3, #0
 2962 0022 3B74     		strb	r3, [r7, #16]
 2963 0024 0023     		movs	r3, #0
 2964 0026 7B74     		strb	r3, [r7, #17]
 2965 0028 0023     		movs	r3, #0
 2966 002a BB74     		strb	r3, [r7, #18]
 2967 002c 0023     		movs	r3, #0
 2968 002e FB74     		strb	r3, [r7, #19]
 2969 0030 0023     		movs	r3, #0
 2970 0032 3B75     		strb	r3, [r7, #20]
 2971 0034 0023     		movs	r3, #0
 2972 0036 7B75     		strb	r3, [r7, #21]
 2973 0038 0023     		movs	r3, #0
 2974 003a BB75     		strb	r3, [r7, #22]
 2975 003c 0023     		movs	r3, #0
 2976 003e FB75     		strb	r3, [r7, #23]
 2977 0040 0023     		movs	r3, #0
 2978 0042 3B76     		strb	r3, [r7, #24]
 2979 0044 0023     		movs	r3, #0
 2980 0046 7B76     		strb	r3, [r7, #25]
 2981 0048 0023     		movs	r3, #0
 2982 004a BB76     		strb	r3, [r7, #26]
 715:.\Protocolo.c **** 	if(version[1]!=7){
 2983              		.loc 1 715 0
 2984 004c 804B     		ldr	r3, .L182
 2985 004e 5B78     		ldrb	r3, [r3, #1]
 2986 0050 DBB2     		uxtb	r3, r3
 2987 0052 072B     		cmp	r3, #7
 2988 0054 56D0     		beq	.L165
 716:.\Protocolo.c **** 		buffer[0]=0xFF;
 2989              		.loc 1 716 0
 2990 0056 FF23     		movs	r3, #255
 2991 0058 3B73     		strb	r3, [r7, #12]
 717:.\Protocolo.c **** 		buffer[1]=0xE5;
 2992              		.loc 1 717 0
 2993 005a E523     		movs	r3, #229
 2994 005c 7B73     		strb	r3, [r7, #13]
 718:.\Protocolo.c **** 		buffer[2]=0xF4;
 2995              		.loc 1 718 0
 2996 005e F423     		movs	r3, #244
 2997 0060 BB73     		strb	r3, [r7, #14]
 719:.\Protocolo.c **** 		buffer[3]=0xF6;
 2998              		.loc 1 719 0
 2999 0062 F623     		movs	r3, #246
 3000 0064 FB73     		strb	r3, [r7, #15]
 720:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 3001              		.loc 1 720 0
 3002 0066 BB79     		ldrb	r3, [r7, #6]
 3003 0068 013B     		subs	r3, r3, #1
 3004 006a DBB2     		uxtb	r3, r3
 3005 006c DBB2     		uxtb	r3, r3
 3006 006e 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 68


 3007 0072 DBB2     		uxtb	r3, r3
 3008 0074 DBB2     		uxtb	r3, r3
 3009 0076 3B74     		strb	r3, [r7, #16]
 721:.\Protocolo.c **** 		buffer[5]=0xF7;	
 3010              		.loc 1 721 0
 3011 0078 F723     		movs	r3, #247
 3012 007a 7B74     		strb	r3, [r7, #17]
 722:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 3013              		.loc 1 722 0
 3014 007c 0623     		movs	r3, #6
 3015 007e BB77     		strb	r3, [r7, #30]
 3016 0080 15E0     		b	.L166
 3017              	.L167:
 723:.\Protocolo.c **** 			buffer[x]=(0xE0|(precio[x-6]&0x0F));
 3018              		.loc 1 723 0 discriminator 2
 3019 0082 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3020 0084 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 3021 0086 063A     		subs	r2, r2, #6
 3022 0088 3968     		ldr	r1, [r7]
 3023 008a 0A44     		add	r2, r2, r1
 3024 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3025 008e D2B2     		uxtb	r2, r2
 3026 0090 02F00F02 		and	r2, r2, #15
 3027 0094 D2B2     		uxtb	r2, r2
 3028 0096 62F01F02 		orn	r2, r2, #31
 3029 009a D2B2     		uxtb	r2, r2
 3030 009c D2B2     		uxtb	r2, r2
 3031 009e 07F12001 		add	r1, r7, #32
 3032 00a2 0B44     		add	r3, r3, r1
 3033 00a4 03F8142C 		strb	r2, [r3, #-20]
 722:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 3034              		.loc 1 722 0 discriminator 2
 3035 00a8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3036 00aa 0133     		adds	r3, r3, #1
 3037 00ac BB77     		strb	r3, [r7, #30]
 3038              	.L166:
 722:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 3039              		.loc 1 722 0 is_stmt 0 discriminator 1
 3040 00ae BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3041 00b0 092B     		cmp	r3, #9
 3042 00b2 E6D9     		bls	.L167
 724:.\Protocolo.c **** 		}
 725:.\Protocolo.c **** 		buffer[10]=0xFB;
 3043              		.loc 1 725 0 is_stmt 1
 3044 00b4 FB23     		movs	r3, #251
 3045 00b6 BB75     		strb	r3, [r7, #22]
 726:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 3046              		.loc 1 726 0
 3047 00b8 0023     		movs	r3, #0
 3048 00ba BB77     		strb	r3, [r7, #30]
 3049 00bc 0FE0     		b	.L168
 3050              	.L169:
 727:.\Protocolo.c **** 			buffer[11]+=(buffer[x]&0x0F);	
 3051              		.loc 1 727 0 discriminator 2
 3052 00be FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 3053 00c0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3054 00c2 07F12001 		add	r1, r7, #32
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 69


 3055 00c6 0B44     		add	r3, r3, r1
 3056 00c8 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 3057 00cc 03F00F03 		and	r3, r3, #15
 3058 00d0 DBB2     		uxtb	r3, r3
 3059 00d2 1344     		add	r3, r3, r2
 3060 00d4 DBB2     		uxtb	r3, r3
 3061 00d6 FB75     		strb	r3, [r7, #23]
 726:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 3062              		.loc 1 726 0 discriminator 2
 3063 00d8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3064 00da 0133     		adds	r3, r3, #1
 3065 00dc BB77     		strb	r3, [r7, #30]
 3066              	.L168:
 726:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 3067              		.loc 1 726 0 is_stmt 0 discriminator 1
 3068 00de BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3069 00e0 0A2B     		cmp	r3, #10
 3070 00e2 ECD9     		bls	.L169
 728:.\Protocolo.c **** 		}
 729:.\Protocolo.c **** 		buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 3071              		.loc 1 729 0 is_stmt 1
 3072 00e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3073 00e6 5B42     		negs	r3, r3
 3074 00e8 DBB2     		uxtb	r3, r3
 3075 00ea DBB2     		uxtb	r3, r3
 3076 00ec 03F00F03 		and	r3, r3, #15
 3077 00f0 DBB2     		uxtb	r3, r3
 3078 00f2 63F01F03 		orn	r3, r3, #31
 3079 00f6 DBB2     		uxtb	r3, r3
 3080 00f8 DBB2     		uxtb	r3, r3
 3081 00fa FB75     		strb	r3, [r7, #23]
 730:.\Protocolo.c **** 		buffer[12]=0xF0;
 3082              		.loc 1 730 0
 3083 00fc F023     		movs	r3, #240
 3084 00fe 3B76     		strb	r3, [r7, #24]
 731:.\Protocolo.c **** 		size=12;
 3085              		.loc 1 731 0
 3086 0100 0C23     		movs	r3, #12
 3087 0102 FB77     		strb	r3, [r7, #31]
 3088              	.L165:
 732:.\Protocolo.c **** 	}
 733:.\Protocolo.c **** 	if(version[1]==7){
 3089              		.loc 1 733 0
 3090 0104 524B     		ldr	r3, .L182
 3091 0106 5B78     		ldrb	r3, [r3, #1]
 3092 0108 DBB2     		uxtb	r3, r3
 3093 010a 072B     		cmp	r3, #7
 3094 010c 58D1     		bne	.L170
 734:.\Protocolo.c **** 		buffer[0]=0xFF;
 3095              		.loc 1 734 0
 3096 010e FF23     		movs	r3, #255
 3097 0110 3B73     		strb	r3, [r7, #12]
 735:.\Protocolo.c **** 		buffer[1]=0xE3;
 3098              		.loc 1 735 0
 3099 0112 E323     		movs	r3, #227
 3100 0114 7B73     		strb	r3, [r7, #13]
 736:.\Protocolo.c **** 		buffer[2]=0xF4;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 70


 3101              		.loc 1 736 0
 3102 0116 F423     		movs	r3, #244
 3103 0118 BB73     		strb	r3, [r7, #14]
 737:.\Protocolo.c **** 		buffer[3]=0xF6;
 3104              		.loc 1 737 0
 3105 011a F623     		movs	r3, #246
 3106 011c FB73     		strb	r3, [r7, #15]
 738:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 3107              		.loc 1 738 0
 3108 011e BB79     		ldrb	r3, [r7, #6]
 3109 0120 013B     		subs	r3, r3, #1
 3110 0122 DBB2     		uxtb	r3, r3
 3111 0124 DBB2     		uxtb	r3, r3
 3112 0126 63F01F03 		orn	r3, r3, #31
 3113 012a DBB2     		uxtb	r3, r3
 3114 012c DBB2     		uxtb	r3, r3
 3115 012e 3B74     		strb	r3, [r7, #16]
 739:.\Protocolo.c **** 		buffer[5]=0xF7;		
 3116              		.loc 1 739 0
 3117 0130 F723     		movs	r3, #247
 3118 0132 7B74     		strb	r3, [r7, #17]
 740:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 3119              		.loc 1 740 0
 3120 0134 0623     		movs	r3, #6
 3121 0136 BB77     		strb	r3, [r7, #30]
 3122 0138 15E0     		b	.L171
 3123              	.L172:
 741:.\Protocolo.c **** 			buffer[x]=(0xE0|(precio[x-6]&0x0F));
 3124              		.loc 1 741 0 discriminator 2
 3125 013a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3126 013c BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 3127 013e 063A     		subs	r2, r2, #6
 3128 0140 3968     		ldr	r1, [r7]
 3129 0142 0A44     		add	r2, r2, r1
 3130 0144 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3131 0146 D2B2     		uxtb	r2, r2
 3132 0148 02F00F02 		and	r2, r2, #15
 3133 014c D2B2     		uxtb	r2, r2
 3134 014e 62F01F02 		orn	r2, r2, #31
 3135 0152 D2B2     		uxtb	r2, r2
 3136 0154 D2B2     		uxtb	r2, r2
 3137 0156 07F12001 		add	r1, r7, #32
 3138 015a 0B44     		add	r3, r3, r1
 3139 015c 03F8142C 		strb	r2, [r3, #-20]
 740:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 3140              		.loc 1 740 0 discriminator 2
 3141 0160 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3142 0162 0133     		adds	r3, r3, #1
 3143 0164 BB77     		strb	r3, [r7, #30]
 3144              	.L171:
 740:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 3145              		.loc 1 740 0 is_stmt 0 discriminator 1
 3146 0166 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3147 0168 0A2B     		cmp	r3, #10
 3148 016a E6D9     		bls	.L172
 742:.\Protocolo.c **** 		}
 743:.\Protocolo.c **** 		buffer[11]=0xE0;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 71


 3149              		.loc 1 743 0 is_stmt 1
 3150 016c E023     		movs	r3, #224
 3151 016e FB75     		strb	r3, [r7, #23]
 744:.\Protocolo.c **** 		buffer[12]=0xFB;
 3152              		.loc 1 744 0
 3153 0170 FB23     		movs	r3, #251
 3154 0172 3B76     		strb	r3, [r7, #24]
 745:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 3155              		.loc 1 745 0
 3156 0174 0023     		movs	r3, #0
 3157 0176 BB77     		strb	r3, [r7, #30]
 3158 0178 0FE0     		b	.L173
 3159              	.L174:
 746:.\Protocolo.c **** 			buffer[13]+=(buffer[x]&0x0F);	
 3160              		.loc 1 746 0 discriminator 2
 3161 017a 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 3162 017c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3163 017e 07F12001 		add	r1, r7, #32
 3164 0182 0B44     		add	r3, r3, r1
 3165 0184 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 3166 0188 03F00F03 		and	r3, r3, #15
 3167 018c DBB2     		uxtb	r3, r3
 3168 018e 1344     		add	r3, r3, r2
 3169 0190 DBB2     		uxtb	r3, r3
 3170 0192 7B76     		strb	r3, [r7, #25]
 745:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 3171              		.loc 1 745 0 discriminator 2
 3172 0194 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3173 0196 0133     		adds	r3, r3, #1
 3174 0198 BB77     		strb	r3, [r7, #30]
 3175              	.L173:
 745:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 3176              		.loc 1 745 0 is_stmt 0 discriminator 1
 3177 019a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3178 019c 0C2B     		cmp	r3, #12
 3179 019e ECD9     		bls	.L174
 747:.\Protocolo.c **** 		}
 748:.\Protocolo.c **** 		buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;
 3180              		.loc 1 748 0 is_stmt 1
 3181 01a0 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 3182 01a2 5B42     		negs	r3, r3
 3183 01a4 DBB2     		uxtb	r3, r3
 3184 01a6 DBB2     		uxtb	r3, r3
 3185 01a8 03F00F03 		and	r3, r3, #15
 3186 01ac DBB2     		uxtb	r3, r3
 3187 01ae 63F01F03 		orn	r3, r3, #31
 3188 01b2 DBB2     		uxtb	r3, r3
 3189 01b4 DBB2     		uxtb	r3, r3
 3190 01b6 7B76     		strb	r3, [r7, #25]
 749:.\Protocolo.c **** 		buffer[14]=0xF0;
 3191              		.loc 1 749 0
 3192 01b8 F023     		movs	r3, #240
 3193 01ba BB76     		strb	r3, [r7, #26]
 750:.\Protocolo.c **** 		size=14;
 3194              		.loc 1 750 0
 3195 01bc 0E23     		movs	r3, #14
 3196 01be FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 72


 3197              	.L170:
 751:.\Protocolo.c **** 	}
 752:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 3198              		.loc 1 752 0
 3199 01c0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 753:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 3200              		.loc 1 753 0
 3201 01c4 FB79     		ldrb	r3, [r7, #7]
 3202 01c6 43F02003 		orr	r3, r3, #32
 3203 01ca DBB2     		uxtb	r3, r3
 3204 01cc 1846     		mov	r0, r3
 3205 01ce FFF7FEFF 		bl	Surtidor_PutChar
 754:.\Protocolo.c **** 	CyDelay(150);
 3206              		.loc 1 754 0
 3207 01d2 9620     		movs	r0, #150
 3208 01d4 FFF7FEFF 		bl	CyDelay
 755:.\Protocolo.c **** 	if(Surtidor_GetRxBufferSize()>=1){
 3209              		.loc 1 755 0
 3210 01d8 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3211 01dc 0346     		mov	r3, r0
 3212 01de 002B     		cmp	r3, #0
 3213 01e0 31D0     		beq	.L175
 756:.\Protocolo.c **** 		if(Surtidor_ReadRxData()==(0xD0|dir)){
 3214              		.loc 1 756 0
 3215 01e2 FFF7FEFF 		bl	Surtidor_ReadRxData
 3216 01e6 0346     		mov	r3, r0
 3217 01e8 1A46     		mov	r2, r3
 3218 01ea FB79     		ldrb	r3, [r7, #7]
 3219 01ec 63F02F03 		orn	r3, r3, #47
 3220 01f0 DBB2     		uxtb	r3, r3
 3221 01f2 9A42     		cmp	r2, r3
 3222 01f4 25D1     		bne	.L176
 757:.\Protocolo.c **** 	        Surtidor_ClearRxBuffer();
 3223              		.loc 1 757 0
 3224 01f6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 758:.\Protocolo.c **** 			CyDelay(10);
 3225              		.loc 1 758 0
 3226 01fa 0A20     		movs	r0, #10
 3227 01fc FFF7FEFF 		bl	CyDelay
 759:.\Protocolo.c **** 	        for(x=0;x<=size;x++){
 3228              		.loc 1 759 0
 3229 0200 0023     		movs	r3, #0
 3230 0202 BB77     		strb	r3, [r7, #30]
 3231 0204 0BE0     		b	.L177
 3232              	.L178:
 760:.\Protocolo.c **** 	           	Surtidor_PutChar(buffer[x]);
 3233              		.loc 1 760 0 discriminator 2
 3234 0206 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3235 0208 07F12002 		add	r2, r7, #32
 3236 020c 1344     		add	r3, r3, r2
 3237 020e 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 3238 0212 1846     		mov	r0, r3
 3239 0214 FFF7FEFF 		bl	Surtidor_PutChar
 759:.\Protocolo.c **** 	        for(x=0;x<=size;x++){
 3240              		.loc 1 759 0 discriminator 2
 3241 0218 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3242 021a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 73


 3243 021c BB77     		strb	r3, [r7, #30]
 3244              	.L177:
 759:.\Protocolo.c **** 	        for(x=0;x<=size;x++){
 3245              		.loc 1 759 0 is_stmt 0 discriminator 1
 3246 021e BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 3247 0220 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3248 0222 9A42     		cmp	r2, r3
 3249 0224 EFD9     		bls	.L178
 761:.\Protocolo.c **** 	        }
 762:.\Protocolo.c **** 			CyDelay(50);		
 3250              		.loc 1 762 0 is_stmt 1
 3251 0226 3220     		movs	r0, #50
 3252 0228 FFF7FEFF 		bl	CyDelay
 763:.\Protocolo.c **** 			if(get_estado(dir)==0){
 3253              		.loc 1 763 0
 3254 022c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3255 022e 1846     		mov	r0, r3
 3256 0230 FFF7FEFF 		bl	get_estado
 3257 0234 0346     		mov	r3, r0
 3258 0236 002B     		cmp	r3, #0
 3259 0238 01D1     		bne	.L179
 764:.\Protocolo.c **** 				return 0;
 3260              		.loc 1 764 0
 3261 023a 0023     		movs	r3, #0
 3262 023c 04E0     		b	.L181
 3263              	.L179:
 765:.\Protocolo.c **** 			}
 766:.\Protocolo.c **** 			else{
 767:.\Protocolo.c **** 				return 1;
 3264              		.loc 1 767 0
 3265 023e 0123     		movs	r3, #1
 3266 0240 02E0     		b	.L181
 3267              	.L176:
 768:.\Protocolo.c **** 			}
 769:.\Protocolo.c **** 		}
 770:.\Protocolo.c **** 		else{
 771:.\Protocolo.c **** 			return 0;
 3268              		.loc 1 771 0
 3269 0242 0023     		movs	r3, #0
 3270 0244 00E0     		b	.L181
 3271              	.L175:
 772:.\Protocolo.c **** 		}
 773:.\Protocolo.c **** 	}
 774:.\Protocolo.c **** 	else{
 775:.\Protocolo.c **** 		return 0;
 3272              		.loc 1 775 0
 3273 0246 0023     		movs	r3, #0
 3274              	.L181:
 776:.\Protocolo.c **** 	}
 777:.\Protocolo.c **** }
 3275              		.loc 1 777 0
 3276 0248 1846     		mov	r0, r3
 3277 024a 2037     		adds	r7, r7, #32
 3278 024c BD46     		mov	sp, r7
 3279              		@ sp needed
 3280 024e 80BD     		pop	{r7, pc}
 3281              	.L183:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 74


 3282              		.align	2
 3283              	.L182:
 3284 0250 00000000 		.word	version
 3285              		.cfi_endproc
 3286              	.LFE71:
 3287              		.size	cambiar_precio, .-cambiar_precio
 3288              		.section	.text.totales,"ax",%progbits
 3289              		.align	2
 3290              		.global	totales
 3291              		.thumb
 3292              		.thumb_func
 3293              		.type	totales, %function
 3294              	totales:
 3295              	.LFB72:
 778:.\Protocolo.c **** 
 779:.\Protocolo.c **** /*
 780:.\Protocolo.c **** ***************************************************************************************************
 781:.\Protocolo.c **** *                                         uint8 totales(uint8 dir)
 782:.\Protocolo.c **** *
 783:.\Protocolo.c **** * Description : 
 784:.\Protocolo.c **** *               
 785:.\Protocolo.c **** *
 786:.\Protocolo.c **** * Argument(s) : none
 787:.\Protocolo.c **** *
 788:.\Protocolo.c **** * Return(s)   : none
 789:.\Protocolo.c **** *
 790:.\Protocolo.c **** * Caller(s)   : 
 791:.\Protocolo.c **** *
 792:.\Protocolo.c **** * Note(s)     : none.
 793:.\Protocolo.c **** ***************************************************************************************************
 794:.\Protocolo.c **** */
 795:.\Protocolo.c **** uint8 totales(uint8 dir, uint8 nmangueras){
 3296              		.loc 1 795 0
 3297              		.cfi_startproc
 3298              		@ args = 0, pretend = 0, frame = 16
 3299              		@ frame_needed = 1, uses_anonymous_args = 0
 3300 0000 80B5     		push	{r7, lr}
 3301              		.cfi_def_cfa_offset 8
 3302              		.cfi_offset 7, -8
 3303              		.cfi_offset 14, -4
 3304 0002 84B0     		sub	sp, sp, #16
 3305              		.cfi_def_cfa_offset 24
 3306 0004 00AF     		add	r7, sp, #0
 3307              		.cfi_def_cfa_register 7
 3308 0006 0246     		mov	r2, r0
 3309 0008 0B46     		mov	r3, r1
 3310 000a FA71     		strb	r2, [r7, #7]
 3311 000c BB71     		strb	r3, [r7, #6]
 796:.\Protocolo.c **** 	uint8 x,y;
 797:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 3312              		.loc 1 797 0
 3313 000e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 798:.\Protocolo.c ****     Surtidor_PutChar(0x50|dir);
 3314              		.loc 1 798 0
 3315 0012 FB79     		ldrb	r3, [r7, #7]
 3316 0014 43F05003 		orr	r3, r3, #80
 3317 0018 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 75


 3318 001a 1846     		mov	r0, r3
 3319 001c FFF7FEFF 		bl	Surtidor_PutChar
 799:.\Protocolo.c ****     rx_timeout=0;
 3320              		.loc 1 799 0
 3321 0020 AF4B     		ldr	r3, .L491
 3322 0022 0022     		movs	r2, #0
 3323 0024 1A70     		strb	r2, [r3]
 800:.\Protocolo.c **** 	CyDelay(100);
 3324              		.loc 1 800 0
 3325 0026 6420     		movs	r0, #100
 3326 0028 FFF7FEFF 		bl	CyDelay
 801:.\Protocolo.c **** 	if(Surtidor_GetRxBufferSize()>=1){
 3327              		.loc 1 801 0
 3328 002c FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3329 0030 0346     		mov	r3, r0
 3330 0032 002B     		cmp	r3, #0
 3331 0034 01F0A883 		beq	.L185
 802:.\Protocolo.c **** 		if(dir==lado1.dir){
 3332              		.loc 1 802 0
 3333 0038 AA4B     		ldr	r3, .L491+4
 3334 003a 1B78     		ldrb	r3, [r3]
 3335 003c DBB2     		uxtb	r3, r3
 3336 003e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3337 0040 9A42     		cmp	r2, r3
 3338 0042 40F0E982 		bne	.L186
 803:.\Protocolo.c **** 			if(version[1]!=7){
 3339              		.loc 1 803 0
 3340 0046 A84B     		ldr	r3, .L491+8
 3341 0048 5B78     		ldrb	r3, [r3, #1]
 3342 004a DBB2     		uxtb	r3, r3
 3343 004c 072B     		cmp	r3, #7
 3344 004e 00F07381 		beq	.L187
 804:.\Protocolo.c **** 				CyDelay(900);
 3345              		.loc 1 804 0
 3346 0052 4FF46170 		mov	r0, #900
 3347 0056 FFF7FEFF 		bl	CyDelay
 805:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 3348              		.loc 1 805 0
 3349 005a FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3350 005e 0346     		mov	r3, r0
 3351 0060 FB73     		strb	r3, [r7, #15]
 806:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 3352              		.loc 1 806 0
 3353 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3354 0064 222B     		cmp	r3, #34
 3355 0066 06D0     		beq	.L188
 3356              		.loc 1 806 0 is_stmt 0 discriminator 1
 3357 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3358 006a 402B     		cmp	r3, #64
 3359 006c 03D0     		beq	.L188
 3360 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3361 0070 5E2B     		cmp	r3, #94
 3362 0072 40F05C81 		bne	.L189
 3363              	.L188:
 807:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 3364              		.loc 1 807 0 is_stmt 1
 3365 0076 9D4B     		ldr	r3, .L491+12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 76


 3366 0078 1B78     		ldrb	r3, [r3]
 3367 007a DBB2     		uxtb	r3, r3
 3368 007c FF2B     		cmp	r3, #255
 3369 007e 40F05181 		bne	.L190
 3370              		.loc 1 807 0 is_stmt 0 discriminator 1
 3371 0082 9A4B     		ldr	r3, .L491+12
 3372 0084 5B78     		ldrb	r3, [r3, #1]
 3373 0086 DBB2     		uxtb	r3, r3
 3374 0088 F62B     		cmp	r3, #246
 3375 008a 40F04B81 		bne	.L190
 3376 008e 974B     		ldr	r3, .L491+12
 3377 0090 DB78     		ldrb	r3, [r3, #3]
 3378 0092 DBB2     		uxtb	r3, r3
 3379 0094 F92B     		cmp	r3, #249
 3380 0096 40F04581 		bne	.L190
 808:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3381              		.loc 1 808 0 is_stmt 1
 3382 009a 0023     		movs	r3, #0
 3383 009c BB73     		strb	r3, [r7, #14]
 3384 009e 16E0     		b	.L191
 3385              	.L194:
 809:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3386              		.loc 1 809 0
 3387 00a0 0023     		movs	r3, #0
 3388 00a2 FB73     		strb	r3, [r7, #15]
 3389 00a4 0DE0     		b	.L192
 3390              	.L193:
 810:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 3391              		.loc 1 810 0 discriminator 2
 3392 00a6 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3393 00a8 F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 3394 00aa 8E49     		ldr	r1, .L491+4
 3395 00ac 1346     		mov	r3, r2
 3396 00ae 5B00     		lsls	r3, r3, #1
 3397 00b0 1344     		add	r3, r3, r2
 3398 00b2 DB00     		lsls	r3, r3, #3
 3399 00b4 0344     		add	r3, r3, r0
 3400 00b6 0B44     		add	r3, r3, r1
 3401 00b8 0022     		movs	r2, #0
 3402 00ba 9A70     		strb	r2, [r3, #2]
 809:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3403              		.loc 1 809 0 discriminator 2
 3404 00bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3405 00be 0133     		adds	r3, r3, #1
 3406 00c0 FB73     		strb	r3, [r7, #15]
 3407              	.L192:
 809:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3408              		.loc 1 809 0 is_stmt 0 discriminator 1
 3409 00c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3410 00c4 172B     		cmp	r3, #23
 3411 00c6 EED9     		bls	.L193
 808:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3412              		.loc 1 808 0 is_stmt 1
 3413 00c8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3414 00ca 0133     		adds	r3, r3, #1
 3415 00cc BB73     		strb	r3, [r7, #14]
 3416              	.L191:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 77


 808:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3417              		.loc 1 808 0 is_stmt 0 discriminator 1
 3418 00ce BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3419 00d0 022B     		cmp	r3, #2
 3420 00d2 E5D9     		bls	.L194
 811:.\Protocolo.c ****                     		}
 812:.\Protocolo.c ****                     	}                        
 813:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 3421              		.loc 1 813 0 is_stmt 1
 3422 00d4 0023     		movs	r3, #0
 3423 00d6 FB73     		strb	r3, [r7, #15]
 3424 00d8 0BE0     		b	.L195
 3425              	.L196:
 814:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4]; 
 3426              		.loc 1 814 0 discriminator 2
 3427 00da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3428 00dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3429 00de 0432     		adds	r2, r2, #4
 3430 00e0 8249     		ldr	r1, .L491+12
 3431 00e2 8A5C     		ldrb	r2, [r1, r2]
 3432 00e4 D2B2     		uxtb	r2, r2
 3433 00e6 7F49     		ldr	r1, .L491+4
 3434 00e8 0B44     		add	r3, r3, r1
 3435 00ea 9A70     		strb	r2, [r3, #2]
 813:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 3436              		.loc 1 813 0 discriminator 2
 3437 00ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3438 00ee 0133     		adds	r3, r3, #1
 3439 00f0 FB73     		strb	r3, [r7, #15]
 3440              	.L195:
 813:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 3441              		.loc 1 813 0 is_stmt 0 discriminator 1
 3442 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3443 00f4 072B     		cmp	r3, #7
 3444 00f6 F0D9     		bls	.L196
 815:.\Protocolo.c **** 						}
 816:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3445              		.loc 1 816 0 is_stmt 1
 3446 00f8 0023     		movs	r3, #0
 3447 00fa FB73     		strb	r3, [r7, #15]
 3448 00fc 16E0     		b	.L197
 3449              	.L200:
 817:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 3450              		.loc 1 817 0
 3451 00fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3452 0100 0D33     		adds	r3, r3, #13
 3453 0102 7A4A     		ldr	r2, .L491+12
 3454 0104 D35C     		ldrb	r3, [r2, r3]
 3455 0106 DBB2     		uxtb	r3, r3
 3456 0108 002B     		cmp	r3, #0
 3457 010a 02D1     		bne	.L198
 818:.\Protocolo.c ****                                 return 0;
 3458              		.loc 1 818 0
 3459 010c 0023     		movs	r3, #0
 3460 010e 01F03CBB 		b	.L199
 3461              	.L198:
 819:.\Protocolo.c ****                             }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 78


 820:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3462              		.loc 1 820 0
 3463 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3464 0114 0C33     		adds	r3, r3, #12
 3465 0116 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3466 0118 0D32     		adds	r2, r2, #13
 3467 011a 7449     		ldr	r1, .L491+12
 3468 011c 8A5C     		ldrb	r2, [r1, r2]
 3469 011e D2B2     		uxtb	r2, r2
 3470 0120 7049     		ldr	r1, .L491+4
 3471 0122 0B44     		add	r3, r3, r1
 3472 0124 9A70     		strb	r2, [r3, #2]
 816:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3473              		.loc 1 816 0
 3474 0126 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3475 0128 0133     		adds	r3, r3, #1
 3476 012a FB73     		strb	r3, [r7, #15]
 3477              	.L197:
 816:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3478              		.loc 1 816 0 is_stmt 0 discriminator 1
 3479 012c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3480 012e 072B     		cmp	r3, #7
 3481 0130 E5D9     		bls	.L200
 821:.\Protocolo.c **** 						}
 822:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3482              		.loc 1 822 0 is_stmt 1
 3483 0132 0023     		movs	r3, #0
 3484 0134 FB73     		strb	r3, [r7, #15]
 3485 0136 0CE0     		b	.L201
 3486              	.L202:
 823:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];
 3487              		.loc 1 823 0 discriminator 2
 3488 0138 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3489 013a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3490 013c 1632     		adds	r2, r2, #22
 3491 013e 6B49     		ldr	r1, .L491+12
 3492 0140 8A5C     		ldrb	r2, [r1, r2]
 3493 0142 D2B2     		uxtb	r2, r2
 3494 0144 6749     		ldr	r1, .L491+4
 3495 0146 0B44     		add	r3, r3, r1
 3496 0148 83F84A20 		strb	r2, [r3, #74]
 822:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3497              		.loc 1 822 0 discriminator 2
 3498 014c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3499 014e 0133     		adds	r3, r3, #1
 3500 0150 FB73     		strb	r3, [r7, #15]
 3501              	.L201:
 822:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3502              		.loc 1 822 0 is_stmt 0 discriminator 1
 3503 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3504 0154 032B     		cmp	r3, #3
 3505 0156 EFD9     		bls	.L202
 824:.\Protocolo.c **** 						}				
 825:.\Protocolo.c **** 						if(nmangueras==2){
 3506              		.loc 1 825 0 is_stmt 1
 3507 0158 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3508 015a 022B     		cmp	r3, #2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 79


 3509 015c 46D1     		bne	.L203
 826:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3510              		.loc 1 826 0
 3511 015e 0023     		movs	r3, #0
 3512 0160 FB73     		strb	r3, [r7, #15]
 3513 0162 0BE0     		b	.L204
 3514              	.L205:
 827:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3515              		.loc 1 827 0 discriminator 2
 3516 0164 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3517 0166 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3518 0168 2232     		adds	r2, r2, #34
 3519 016a 6049     		ldr	r1, .L491+12
 3520 016c 8A5C     		ldrb	r2, [r1, r2]
 3521 016e D2B2     		uxtb	r2, r2
 3522 0170 5C49     		ldr	r1, .L491+4
 3523 0172 0B44     		add	r3, r3, r1
 3524 0174 9A76     		strb	r2, [r3, #26]
 826:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3525              		.loc 1 826 0 discriminator 2
 3526 0176 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3527 0178 0133     		adds	r3, r3, #1
 3528 017a FB73     		strb	r3, [r7, #15]
 3529              	.L204:
 826:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3530              		.loc 1 826 0 is_stmt 0 discriminator 1
 3531 017c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3532 017e 072B     		cmp	r3, #7
 3533 0180 F0D9     		bls	.L205
 828:.\Protocolo.c **** 							}
 829:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3534              		.loc 1 829 0 is_stmt 1
 3535 0182 0023     		movs	r3, #0
 3536 0184 FB73     		strb	r3, [r7, #15]
 3537 0186 16E0     		b	.L206
 3538              	.L208:
 830:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 3539              		.loc 1 830 0
 3540 0188 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3541 018a 2B33     		adds	r3, r3, #43
 3542 018c 574A     		ldr	r2, .L491+12
 3543 018e D35C     		ldrb	r3, [r2, r3]
 3544 0190 DBB2     		uxtb	r3, r3
 3545 0192 002B     		cmp	r3, #0
 3546 0194 02D1     		bne	.L207
 831:.\Protocolo.c ****                                     return 0;
 3547              		.loc 1 831 0
 3548 0196 0023     		movs	r3, #0
 3549 0198 01F0F7BA 		b	.L199
 3550              	.L207:
 832:.\Protocolo.c ****                                 }                                
 833:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3551              		.loc 1 833 0
 3552 019c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3553 019e 0C33     		adds	r3, r3, #12
 3554 01a0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3555 01a2 2B32     		adds	r2, r2, #43
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 80


 3556 01a4 5149     		ldr	r1, .L491+12
 3557 01a6 8A5C     		ldrb	r2, [r1, r2]
 3558 01a8 D2B2     		uxtb	r2, r2
 3559 01aa 4E49     		ldr	r1, .L491+4
 3560 01ac 0B44     		add	r3, r3, r1
 3561 01ae 9A76     		strb	r2, [r3, #26]
 829:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3562              		.loc 1 829 0
 3563 01b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3564 01b2 0133     		adds	r3, r3, #1
 3565 01b4 FB73     		strb	r3, [r7, #15]
 3566              	.L206:
 829:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3567              		.loc 1 829 0 is_stmt 0 discriminator 1
 3568 01b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3569 01b8 072B     		cmp	r3, #7
 3570 01ba E5D9     		bls	.L208
 834:.\Protocolo.c **** 							}
 835:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3571              		.loc 1 835 0 is_stmt 1
 3572 01bc 0023     		movs	r3, #0
 3573 01be FB73     		strb	r3, [r7, #15]
 3574 01c0 0CE0     		b	.L209
 3575              	.L210:
 836:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3576              		.loc 1 836 0 discriminator 2
 3577 01c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3578 01c4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3579 01c6 3432     		adds	r2, r2, #52
 3580 01c8 4849     		ldr	r1, .L491+12
 3581 01ca 8A5C     		ldrb	r2, [r1, r2]
 3582 01cc D2B2     		uxtb	r2, r2
 3583 01ce 4549     		ldr	r1, .L491+4
 3584 01d0 0B44     		add	r3, r3, r1
 3585 01d2 83F84F20 		strb	r2, [r3, #79]
 835:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3586              		.loc 1 835 0 discriminator 2
 3587 01d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3588 01d8 0133     		adds	r3, r3, #1
 3589 01da FB73     		strb	r3, [r7, #15]
 3590              	.L209:
 835:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3591              		.loc 1 835 0 is_stmt 0 discriminator 1
 3592 01dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3593 01de 032B     		cmp	r3, #3
 3594 01e0 EFD9     		bls	.L210
 837:.\Protocolo.c **** 							}	
 838:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3595              		.loc 1 838 0 is_stmt 1
 3596 01e2 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 839:.\Protocolo.c ****     						return 2;                            
 3597              		.loc 1 839 0
 3598 01e6 0223     		movs	r3, #2
 3599 01e8 01F0CFBA 		b	.L199
 3600              	.L203:
 840:.\Protocolo.c **** 						}
 841:.\Protocolo.c **** 						if(nmangueras==3){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 81


 3601              		.loc 1 841 0
 3602 01ec BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3603 01ee 032B     		cmp	r3, #3
 3604 01f0 40F09380 		bne	.L211
 842:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3605              		.loc 1 842 0
 3606 01f4 0023     		movs	r3, #0
 3607 01f6 FB73     		strb	r3, [r7, #15]
 3608 01f8 0BE0     		b	.L212
 3609              	.L213:
 843:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3610              		.loc 1 843 0 discriminator 2
 3611 01fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3612 01fc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3613 01fe 2232     		adds	r2, r2, #34
 3614 0200 3A49     		ldr	r1, .L491+12
 3615 0202 8A5C     		ldrb	r2, [r1, r2]
 3616 0204 D2B2     		uxtb	r2, r2
 3617 0206 3749     		ldr	r1, .L491+4
 3618 0208 0B44     		add	r3, r3, r1
 3619 020a 9A76     		strb	r2, [r3, #26]
 842:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3620              		.loc 1 842 0 discriminator 2
 3621 020c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3622 020e 0133     		adds	r3, r3, #1
 3623 0210 FB73     		strb	r3, [r7, #15]
 3624              	.L212:
 842:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3625              		.loc 1 842 0 is_stmt 0 discriminator 1
 3626 0212 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3627 0214 072B     		cmp	r3, #7
 3628 0216 F0D9     		bls	.L213
 844:.\Protocolo.c **** 							}
 845:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3629              		.loc 1 845 0 is_stmt 1
 3630 0218 0023     		movs	r3, #0
 3631 021a FB73     		strb	r3, [r7, #15]
 3632 021c 16E0     		b	.L214
 3633              	.L216:
 846:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 3634              		.loc 1 846 0
 3635 021e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3636 0220 2B33     		adds	r3, r3, #43
 3637 0222 324A     		ldr	r2, .L491+12
 3638 0224 D35C     		ldrb	r3, [r2, r3]
 3639 0226 DBB2     		uxtb	r3, r3
 3640 0228 002B     		cmp	r3, #0
 3641 022a 02D1     		bne	.L215
 847:.\Protocolo.c ****                                     return 0;
 3642              		.loc 1 847 0
 3643 022c 0023     		movs	r3, #0
 3644 022e 01F0ACBA 		b	.L199
 3645              	.L215:
 848:.\Protocolo.c ****                                 }                                 
 849:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3646              		.loc 1 849 0
 3647 0232 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 82


 3648 0234 0C33     		adds	r3, r3, #12
 3649 0236 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3650 0238 2B32     		adds	r2, r2, #43
 3651 023a 2C49     		ldr	r1, .L491+12
 3652 023c 8A5C     		ldrb	r2, [r1, r2]
 3653 023e D2B2     		uxtb	r2, r2
 3654 0240 2849     		ldr	r1, .L491+4
 3655 0242 0B44     		add	r3, r3, r1
 3656 0244 9A76     		strb	r2, [r3, #26]
 845:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3657              		.loc 1 845 0
 3658 0246 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3659 0248 0133     		adds	r3, r3, #1
 3660 024a FB73     		strb	r3, [r7, #15]
 3661              	.L214:
 845:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3662              		.loc 1 845 0 is_stmt 0 discriminator 1
 3663 024c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3664 024e 072B     		cmp	r3, #7
 3665 0250 E5D9     		bls	.L216
 850:.\Protocolo.c **** 							}
 851:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3666              		.loc 1 851 0 is_stmt 1
 3667 0252 0023     		movs	r3, #0
 3668 0254 FB73     		strb	r3, [r7, #15]
 3669 0256 0CE0     		b	.L217
 3670              	.L218:
 852:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3671              		.loc 1 852 0 discriminator 2
 3672 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3673 025a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3674 025c 3432     		adds	r2, r2, #52
 3675 025e 2349     		ldr	r1, .L491+12
 3676 0260 8A5C     		ldrb	r2, [r1, r2]
 3677 0262 D2B2     		uxtb	r2, r2
 3678 0264 1F49     		ldr	r1, .L491+4
 3679 0266 0B44     		add	r3, r3, r1
 3680 0268 83F84F20 		strb	r2, [r3, #79]
 851:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3681              		.loc 1 851 0 discriminator 2
 3682 026c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3683 026e 0133     		adds	r3, r3, #1
 3684 0270 FB73     		strb	r3, [r7, #15]
 3685              	.L217:
 851:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3686              		.loc 1 851 0 is_stmt 0 discriminator 1
 3687 0272 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3688 0274 032B     		cmp	r3, #3
 3689 0276 EFD9     		bls	.L218
 853:.\Protocolo.c **** 							}						
 854:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3690              		.loc 1 854 0 is_stmt 1
 3691 0278 0023     		movs	r3, #0
 3692 027a FB73     		strb	r3, [r7, #15]
 3693 027c 0CE0     		b	.L219
 3694              	.L220:
 855:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 83


 3695              		.loc 1 855 0 discriminator 2
 3696 027e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3697 0280 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3698 0282 4032     		adds	r2, r2, #64
 3699 0284 1949     		ldr	r1, .L491+12
 3700 0286 8A5C     		ldrb	r2, [r1, r2]
 3701 0288 D2B2     		uxtb	r2, r2
 3702 028a 1649     		ldr	r1, .L491+4
 3703 028c 0B44     		add	r3, r3, r1
 3704 028e 83F83220 		strb	r2, [r3, #50]
 854:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3705              		.loc 1 854 0 discriminator 2
 3706 0292 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3707 0294 0133     		adds	r3, r3, #1
 3708 0296 FB73     		strb	r3, [r7, #15]
 3709              	.L219:
 854:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3710              		.loc 1 854 0 is_stmt 0 discriminator 1
 3711 0298 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3712 029a 072B     		cmp	r3, #7
 3713 029c EFD9     		bls	.L220
 856:.\Protocolo.c **** 							}
 857:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3714              		.loc 1 857 0 is_stmt 1
 3715 029e 0023     		movs	r3, #0
 3716 02a0 FB73     		strb	r3, [r7, #15]
 3717 02a2 17E0     		b	.L221
 3718              	.L223:
 858:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 3719              		.loc 1 858 0
 3720 02a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3721 02a6 4933     		adds	r3, r3, #73
 3722 02a8 104A     		ldr	r2, .L491+12
 3723 02aa D35C     		ldrb	r3, [r2, r3]
 3724 02ac DBB2     		uxtb	r3, r3
 3725 02ae 002B     		cmp	r3, #0
 3726 02b0 02D1     		bne	.L222
 859:.\Protocolo.c ****                                     return 0;
 3727              		.loc 1 859 0
 3728 02b2 0023     		movs	r3, #0
 3729 02b4 01F069BA 		b	.L199
 3730              	.L222:
 860:.\Protocolo.c ****                                 }                                 
 861:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3731              		.loc 1 861 0
 3732 02b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3733 02ba 0C33     		adds	r3, r3, #12
 3734 02bc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3735 02be 4932     		adds	r2, r2, #73
 3736 02c0 0A49     		ldr	r1, .L491+12
 3737 02c2 8A5C     		ldrb	r2, [r1, r2]
 3738 02c4 D2B2     		uxtb	r2, r2
 3739 02c6 0749     		ldr	r1, .L491+4
 3740 02c8 0B44     		add	r3, r3, r1
 3741 02ca 83F83220 		strb	r2, [r3, #50]
 857:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3742              		.loc 1 857 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 84


 3743 02ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3744 02d0 0133     		adds	r3, r3, #1
 3745 02d2 FB73     		strb	r3, [r7, #15]
 3746              	.L221:
 857:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3747              		.loc 1 857 0 is_stmt 0 discriminator 1
 3748 02d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3749 02d6 072B     		cmp	r3, #7
 3750 02d8 E4D9     		bls	.L223
 862:.\Protocolo.c **** 							}
 863:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3751              		.loc 1 863 0 is_stmt 1
 3752 02da 0023     		movs	r3, #0
 3753 02dc FB73     		strb	r3, [r7, #15]
 3754 02de 14E0     		b	.L224
 3755              	.L492:
 3756              		.align	2
 3757              	.L491:
 3758 02e0 00000000 		.word	rx_timeout
 3759 02e4 00000000 		.word	lado1
 3760 02e8 00000000 		.word	version
 3761 02ec 00000000 		.word	Surtidor_rxBuffer
 3762              	.L225:
 864:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3763              		.loc 1 864 0 discriminator 2
 3764 02f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3765 02f2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3766 02f4 5232     		adds	r2, r2, #82
 3767 02f6 AA49     		ldr	r1, .L493
 3768 02f8 8A5C     		ldrb	r2, [r1, r2]
 3769 02fa D2B2     		uxtb	r2, r2
 3770 02fc A949     		ldr	r1, .L493+4
 3771 02fe 0B44     		add	r3, r3, r1
 3772 0300 83F85420 		strb	r2, [r3, #84]
 863:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3773              		.loc 1 863 0 discriminator 2
 3774 0304 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3775 0306 0133     		adds	r3, r3, #1
 3776 0308 FB73     		strb	r3, [r7, #15]
 3777              	.L224:
 863:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3778              		.loc 1 863 0 is_stmt 0 discriminator 1
 3779 030a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3780 030c 032B     		cmp	r3, #3
 3781 030e EFD9     		bls	.L225
 865:.\Protocolo.c **** 							}
 866:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3782              		.loc 1 866 0 is_stmt 1
 3783 0310 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 867:.\Protocolo.c ****     						return 3;                            
 3784              		.loc 1 867 0
 3785 0314 0323     		movs	r3, #3
 3786 0316 01F038BA 		b	.L199
 3787              	.L211:
 868:.\Protocolo.c **** 						}
 869:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3788              		.loc 1 869 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 85


 3789 031a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 870:.\Protocolo.c **** 						return 1;
 3790              		.loc 1 870 0
 3791 031e 0123     		movs	r3, #1
 3792 0320 01F033BA 		b	.L199
 3793              	.L190:
 871:.\Protocolo.c **** 					}
 872:.\Protocolo.c **** 					else{
 873:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3794              		.loc 1 873 0
 3795 0324 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 874:.\Protocolo.c **** 						return 0;
 3796              		.loc 1 874 0
 3797 0328 0023     		movs	r3, #0
 3798 032a 01F02EBA 		b	.L199
 3799              	.L189:
 875:.\Protocolo.c **** 					}					
 876:.\Protocolo.c **** 				}
 877:.\Protocolo.c **** 				else{
 878:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 3800              		.loc 1 878 0
 3801 032e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 879:.\Protocolo.c **** 					return 0;		
 3802              		.loc 1 879 0
 3803 0332 0023     		movs	r3, #0
 3804 0334 01F029BA 		b	.L199
 3805              	.L187:
 880:.\Protocolo.c **** 				}
 881:.\Protocolo.c **** 			}
 882:.\Protocolo.c **** 			else{
 883:.\Protocolo.c **** 				CyDelay(900);
 3806              		.loc 1 883 0
 3807 0338 4FF46170 		mov	r0, #900
 3808 033c FFF7FEFF 		bl	CyDelay
 884:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 3809              		.loc 1 884 0
 3810 0340 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3811 0344 0346     		mov	r3, r0
 3812 0346 FB73     		strb	r3, [r7, #15]
 885:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){				
 3813              		.loc 1 885 0
 3814 0348 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3815 034a 2E2B     		cmp	r3, #46
 3816 034c 06D0     		beq	.L226
 3817              		.loc 1 885 0 is_stmt 0 discriminator 1
 3818 034e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3819 0350 582B     		cmp	r3, #88
 3820 0352 03D0     		beq	.L226
 3821 0354 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3822 0356 822B     		cmp	r3, #130
 3823 0358 40F05981 		bne	.L227
 3824              	.L226:
 886:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 3825              		.loc 1 886 0 is_stmt 1
 3826 035c 904B     		ldr	r3, .L493
 3827 035e 1B78     		ldrb	r3, [r3]
 3828 0360 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 86


 3829 0362 FF2B     		cmp	r3, #255
 3830 0364 40F04E81 		bne	.L228
 3831              		.loc 1 886 0 is_stmt 0 discriminator 1
 3832 0368 8D4B     		ldr	r3, .L493
 3833 036a 5B78     		ldrb	r3, [r3, #1]
 3834 036c DBB2     		uxtb	r3, r3
 3835 036e F62B     		cmp	r3, #246
 3836 0370 40F04881 		bne	.L228
 3837 0374 8A4B     		ldr	r3, .L493
 3838 0376 DB78     		ldrb	r3, [r3, #3]
 3839 0378 DBB2     		uxtb	r3, r3
 3840 037a F92B     		cmp	r3, #249
 3841 037c 40F04281 		bne	.L228
 887:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3842              		.loc 1 887 0 is_stmt 1
 3843 0380 0023     		movs	r3, #0
 3844 0382 BB73     		strb	r3, [r7, #14]
 3845 0384 16E0     		b	.L229
 3846              	.L232:
 888:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3847              		.loc 1 888 0
 3848 0386 0023     		movs	r3, #0
 3849 0388 FB73     		strb	r3, [r7, #15]
 3850 038a 0DE0     		b	.L230
 3851              	.L231:
 889:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 3852              		.loc 1 889 0 discriminator 2
 3853 038c BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3854 038e F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 3855 0390 8449     		ldr	r1, .L493+4
 3856 0392 1346     		mov	r3, r2
 3857 0394 5B00     		lsls	r3, r3, #1
 3858 0396 1344     		add	r3, r3, r2
 3859 0398 DB00     		lsls	r3, r3, #3
 3860 039a 0344     		add	r3, r3, r0
 3861 039c 0B44     		add	r3, r3, r1
 3862 039e 0022     		movs	r2, #0
 3863 03a0 9A70     		strb	r2, [r3, #2]
 888:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3864              		.loc 1 888 0 discriminator 2
 3865 03a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3866 03a4 0133     		adds	r3, r3, #1
 3867 03a6 FB73     		strb	r3, [r7, #15]
 3868              	.L230:
 888:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3869              		.loc 1 888 0 is_stmt 0 discriminator 1
 3870 03a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3871 03aa 172B     		cmp	r3, #23
 3872 03ac EED9     		bls	.L231
 887:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3873              		.loc 1 887 0 is_stmt 1
 3874 03ae BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3875 03b0 0133     		adds	r3, r3, #1
 3876 03b2 BB73     		strb	r3, [r7, #14]
 3877              	.L229:
 887:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3878              		.loc 1 887 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 87


 3879 03b4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3880 03b6 022B     		cmp	r3, #2
 3881 03b8 E5D9     		bls	.L232
 890:.\Protocolo.c ****                     		}
 891:.\Protocolo.c ****                     	}                        
 892:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3882              		.loc 1 892 0 is_stmt 1
 3883 03ba 0023     		movs	r3, #0
 3884 03bc FB73     		strb	r3, [r7, #15]
 3885 03be 0BE0     		b	.L233
 3886              	.L234:
 893:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3887              		.loc 1 893 0 discriminator 2
 3888 03c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3889 03c2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3890 03c4 0432     		adds	r2, r2, #4
 3891 03c6 7649     		ldr	r1, .L493
 3892 03c8 8A5C     		ldrb	r2, [r1, r2]
 3893 03ca D2B2     		uxtb	r2, r2
 3894 03cc 7549     		ldr	r1, .L493+4
 3895 03ce 0B44     		add	r3, r3, r1
 3896 03d0 9A70     		strb	r2, [r3, #2]
 892:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3897              		.loc 1 892 0 discriminator 2
 3898 03d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3899 03d4 0133     		adds	r3, r3, #1
 3900 03d6 FB73     		strb	r3, [r7, #15]
 3901              	.L233:
 892:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3902              		.loc 1 892 0 is_stmt 0 discriminator 1
 3903 03d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3904 03da 0B2B     		cmp	r3, #11
 3905 03dc F0D9     		bls	.L234
 894:.\Protocolo.c **** 						}
 895:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3906              		.loc 1 895 0 is_stmt 1
 3907 03de 0023     		movs	r3, #0
 3908 03e0 FB73     		strb	r3, [r7, #15]
 3909 03e2 16E0     		b	.L235
 3910              	.L237:
 896:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 3911              		.loc 1 896 0
 3912 03e4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3913 03e6 1133     		adds	r3, r3, #17
 3914 03e8 6D4A     		ldr	r2, .L493
 3915 03ea D35C     		ldrb	r3, [r2, r3]
 3916 03ec DBB2     		uxtb	r3, r3
 3917 03ee 002B     		cmp	r3, #0
 3918 03f0 02D1     		bne	.L236
 897:.\Protocolo.c ****                                 return 0;
 3919              		.loc 1 897 0
 3920 03f2 0023     		movs	r3, #0
 3921 03f4 01F0C9B9 		b	.L199
 3922              	.L236:
 898:.\Protocolo.c ****                             }                             
 899:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3923              		.loc 1 899 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 88


 3924 03f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3925 03fa 0C33     		adds	r3, r3, #12
 3926 03fc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3927 03fe 1132     		adds	r2, r2, #17
 3928 0400 6749     		ldr	r1, .L493
 3929 0402 8A5C     		ldrb	r2, [r1, r2]
 3930 0404 D2B2     		uxtb	r2, r2
 3931 0406 6749     		ldr	r1, .L493+4
 3932 0408 0B44     		add	r3, r3, r1
 3933 040a 9A70     		strb	r2, [r3, #2]
 895:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3934              		.loc 1 895 0
 3935 040c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3936 040e 0133     		adds	r3, r3, #1
 3937 0410 FB73     		strb	r3, [r7, #15]
 3938              	.L235:
 895:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3939              		.loc 1 895 0 is_stmt 0 discriminator 1
 3940 0412 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3941 0414 0B2B     		cmp	r3, #11
 3942 0416 E5D9     		bls	.L237
 900:.\Protocolo.c **** 						}
 901:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 3943              		.loc 1 901 0 is_stmt 1
 3944 0418 0023     		movs	r3, #0
 3945 041a FB73     		strb	r3, [r7, #15]
 3946 041c 0CE0     		b	.L238
 3947              	.L239:
 902:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 3948              		.loc 1 902 0 discriminator 2
 3949 041e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3950 0420 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3951 0422 1E32     		adds	r2, r2, #30
 3952 0424 5E49     		ldr	r1, .L493
 3953 0426 8A5C     		ldrb	r2, [r1, r2]
 3954 0428 D2B2     		uxtb	r2, r2
 3955 042a 5E49     		ldr	r1, .L493+4
 3956 042c 0B44     		add	r3, r3, r1
 3957 042e 83F84A20 		strb	r2, [r3, #74]
 901:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 3958              		.loc 1 901 0 discriminator 2
 3959 0432 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3960 0434 0133     		adds	r3, r3, #1
 3961 0436 FB73     		strb	r3, [r7, #15]
 3962              	.L238:
 901:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 3963              		.loc 1 901 0 is_stmt 0 discriminator 1
 3964 0438 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3965 043a 042B     		cmp	r3, #4
 3966 043c EFD9     		bls	.L239
 903:.\Protocolo.c **** 						}				
 904:.\Protocolo.c **** 						if(nmangueras==2){
 3967              		.loc 1 904 0 is_stmt 1
 3968 043e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3969 0440 022B     		cmp	r3, #2
 3970 0442 46D1     		bne	.L240
 905:.\Protocolo.c **** 							for(x=0;x<=11;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 89


 3971              		.loc 1 905 0
 3972 0444 0023     		movs	r3, #0
 3973 0446 FB73     		strb	r3, [r7, #15]
 3974 0448 0BE0     		b	.L241
 3975              	.L242:
 906:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 3976              		.loc 1 906 0 discriminator 2
 3977 044a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3978 044c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3979 044e 2E32     		adds	r2, r2, #46
 3980 0450 5349     		ldr	r1, .L493
 3981 0452 8A5C     		ldrb	r2, [r1, r2]
 3982 0454 D2B2     		uxtb	r2, r2
 3983 0456 5349     		ldr	r1, .L493+4
 3984 0458 0B44     		add	r3, r3, r1
 3985 045a 9A76     		strb	r2, [r3, #26]
 905:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3986              		.loc 1 905 0 discriminator 2
 3987 045c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3988 045e 0133     		adds	r3, r3, #1
 3989 0460 FB73     		strb	r3, [r7, #15]
 3990              	.L241:
 905:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3991              		.loc 1 905 0 is_stmt 0 discriminator 1
 3992 0462 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3993 0464 0B2B     		cmp	r3, #11
 3994 0466 F0D9     		bls	.L242
 907:.\Protocolo.c **** 							}
 908:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 3995              		.loc 1 908 0 is_stmt 1
 3996 0468 0023     		movs	r3, #0
 3997 046a FB73     		strb	r3, [r7, #15]
 3998 046c 16E0     		b	.L243
 3999              	.L245:
 909:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 4000              		.loc 1 909 0
 4001 046e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4002 0470 3B33     		adds	r3, r3, #59
 4003 0472 4B4A     		ldr	r2, .L493
 4004 0474 D35C     		ldrb	r3, [r2, r3]
 4005 0476 DBB2     		uxtb	r3, r3
 4006 0478 002B     		cmp	r3, #0
 4007 047a 02D1     		bne	.L244
 910:.\Protocolo.c ****                                     return 0;
 4008              		.loc 1 910 0
 4009 047c 0023     		movs	r3, #0
 4010 047e 01F084B9 		b	.L199
 4011              	.L244:
 911:.\Protocolo.c ****                                 }                                 
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4012              		.loc 1 912 0
 4013 0482 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4014 0484 0C33     		adds	r3, r3, #12
 4015 0486 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4016 0488 3B32     		adds	r2, r2, #59
 4017 048a 4549     		ldr	r1, .L493
 4018 048c 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 90


 4019 048e D2B2     		uxtb	r2, r2
 4020 0490 4449     		ldr	r1, .L493+4
 4021 0492 0B44     		add	r3, r3, r1
 4022 0494 9A76     		strb	r2, [r3, #26]
 908:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4023              		.loc 1 908 0
 4024 0496 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4025 0498 0133     		adds	r3, r3, #1
 4026 049a FB73     		strb	r3, [r7, #15]
 4027              	.L243:
 908:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4028              		.loc 1 908 0 is_stmt 0 discriminator 1
 4029 049c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4030 049e 0B2B     		cmp	r3, #11
 4031 04a0 E5D9     		bls	.L245
 913:.\Protocolo.c **** 							}
 914:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4032              		.loc 1 914 0 is_stmt 1
 4033 04a2 0023     		movs	r3, #0
 4034 04a4 FB73     		strb	r3, [r7, #15]
 4035 04a6 0CE0     		b	.L246
 4036              	.L247:
 915:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4037              		.loc 1 915 0 discriminator 2
 4038 04a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4039 04aa FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4040 04ac 4832     		adds	r2, r2, #72
 4041 04ae 3C49     		ldr	r1, .L493
 4042 04b0 8A5C     		ldrb	r2, [r1, r2]
 4043 04b2 D2B2     		uxtb	r2, r2
 4044 04b4 3B49     		ldr	r1, .L493+4
 4045 04b6 0B44     		add	r3, r3, r1
 4046 04b8 83F84F20 		strb	r2, [r3, #79]
 914:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4047              		.loc 1 914 0 discriminator 2
 4048 04bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4049 04be 0133     		adds	r3, r3, #1
 4050 04c0 FB73     		strb	r3, [r7, #15]
 4051              	.L246:
 914:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4052              		.loc 1 914 0 is_stmt 0 discriminator 1
 4053 04c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4054 04c4 042B     		cmp	r3, #4
 4055 04c6 EFD9     		bls	.L247
 916:.\Protocolo.c **** 							}
 917:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4056              		.loc 1 917 0 is_stmt 1
 4057 04c8 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 918:.\Protocolo.c ****     						return 2;                            
 4058              		.loc 1 918 0
 4059 04cc 0223     		movs	r3, #2
 4060 04ce 01F05CB9 		b	.L199
 4061              	.L240:
 919:.\Protocolo.c **** 						}
 920:.\Protocolo.c **** 						if(nmangueras==3){
 4062              		.loc 1 920 0
 4063 04d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 91


 4064 04d4 032B     		cmp	r3, #3
 4065 04d6 40F09080 		bne	.L248
 921:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4066              		.loc 1 921 0
 4067 04da 0023     		movs	r3, #0
 4068 04dc FB73     		strb	r3, [r7, #15]
 4069 04de 0BE0     		b	.L249
 4070              	.L250:
 922:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 4071              		.loc 1 922 0 discriminator 2
 4072 04e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4073 04e2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4074 04e4 2E32     		adds	r2, r2, #46
 4075 04e6 2E49     		ldr	r1, .L493
 4076 04e8 8A5C     		ldrb	r2, [r1, r2]
 4077 04ea D2B2     		uxtb	r2, r2
 4078 04ec 2D49     		ldr	r1, .L493+4
 4079 04ee 0B44     		add	r3, r3, r1
 4080 04f0 9A76     		strb	r2, [r3, #26]
 921:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4081              		.loc 1 921 0 discriminator 2
 4082 04f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4083 04f4 0133     		adds	r3, r3, #1
 4084 04f6 FB73     		strb	r3, [r7, #15]
 4085              	.L249:
 921:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4086              		.loc 1 921 0 is_stmt 0 discriminator 1
 4087 04f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4088 04fa 0B2B     		cmp	r3, #11
 4089 04fc F0D9     		bls	.L250
 923:.\Protocolo.c **** 							}
 924:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4090              		.loc 1 924 0 is_stmt 1
 4091 04fe 0023     		movs	r3, #0
 4092 0500 FB73     		strb	r3, [r7, #15]
 4093 0502 16E0     		b	.L251
 4094              	.L253:
 925:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 4095              		.loc 1 925 0
 4096 0504 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4097 0506 3B33     		adds	r3, r3, #59
 4098 0508 254A     		ldr	r2, .L493
 4099 050a D35C     		ldrb	r3, [r2, r3]
 4100 050c DBB2     		uxtb	r3, r3
 4101 050e 002B     		cmp	r3, #0
 4102 0510 02D1     		bne	.L252
 926:.\Protocolo.c ****                                     return 0;
 4103              		.loc 1 926 0
 4104 0512 0023     		movs	r3, #0
 4105 0514 01F039B9 		b	.L199
 4106              	.L252:
 927:.\Protocolo.c ****                                 }                                 
 928:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4107              		.loc 1 928 0
 4108 0518 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4109 051a 0C33     		adds	r3, r3, #12
 4110 051c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 92


 4111 051e 3B32     		adds	r2, r2, #59
 4112 0520 1F49     		ldr	r1, .L493
 4113 0522 8A5C     		ldrb	r2, [r1, r2]
 4114 0524 D2B2     		uxtb	r2, r2
 4115 0526 1F49     		ldr	r1, .L493+4
 4116 0528 0B44     		add	r3, r3, r1
 4117 052a 9A76     		strb	r2, [r3, #26]
 924:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4118              		.loc 1 924 0
 4119 052c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4120 052e 0133     		adds	r3, r3, #1
 4121 0530 FB73     		strb	r3, [r7, #15]
 4122              	.L251:
 924:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4123              		.loc 1 924 0 is_stmt 0 discriminator 1
 4124 0532 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4125 0534 0B2B     		cmp	r3, #11
 4126 0536 E5D9     		bls	.L253
 929:.\Protocolo.c **** 							}
 930:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4127              		.loc 1 930 0 is_stmt 1
 4128 0538 0023     		movs	r3, #0
 4129 053a FB73     		strb	r3, [r7, #15]
 4130 053c 0CE0     		b	.L254
 4131              	.L255:
 931:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4132              		.loc 1 931 0 discriminator 2
 4133 053e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4134 0540 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4135 0542 4832     		adds	r2, r2, #72
 4136 0544 1649     		ldr	r1, .L493
 4137 0546 8A5C     		ldrb	r2, [r1, r2]
 4138 0548 D2B2     		uxtb	r2, r2
 4139 054a 1649     		ldr	r1, .L493+4
 4140 054c 0B44     		add	r3, r3, r1
 4141 054e 83F84F20 		strb	r2, [r3, #79]
 930:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4142              		.loc 1 930 0 discriminator 2
 4143 0552 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4144 0554 0133     		adds	r3, r3, #1
 4145 0556 FB73     		strb	r3, [r7, #15]
 4146              	.L254:
 930:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4147              		.loc 1 930 0 is_stmt 0 discriminator 1
 4148 0558 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4149 055a 042B     		cmp	r3, #4
 4150 055c EFD9     		bls	.L255
 932:.\Protocolo.c **** 							}					
 933:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4151              		.loc 1 933 0 is_stmt 1
 4152 055e 0023     		movs	r3, #0
 4153 0560 FB73     		strb	r3, [r7, #15]
 4154 0562 0CE0     		b	.L256
 4155              	.L257:
 934:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4156              		.loc 1 934 0 discriminator 2
 4157 0564 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 93


 4158 0566 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4159 0568 5832     		adds	r2, r2, #88
 4160 056a 0D49     		ldr	r1, .L493
 4161 056c 8A5C     		ldrb	r2, [r1, r2]
 4162 056e D2B2     		uxtb	r2, r2
 4163 0570 0C49     		ldr	r1, .L493+4
 4164 0572 0B44     		add	r3, r3, r1
 4165 0574 83F83220 		strb	r2, [r3, #50]
 933:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4166              		.loc 1 933 0 discriminator 2
 4167 0578 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4168 057a 0133     		adds	r3, r3, #1
 4169 057c FB73     		strb	r3, [r7, #15]
 4170              	.L256:
 933:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4171              		.loc 1 933 0 is_stmt 0 discriminator 1
 4172 057e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4173 0580 0B2B     		cmp	r3, #11
 4174 0582 EFD9     		bls	.L257
 935:.\Protocolo.c **** 							}
 936:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4175              		.loc 1 936 0 is_stmt 1
 4176 0584 0023     		movs	r3, #0
 4177 0586 FB73     		strb	r3, [r7, #15]
 4178 0588 1CE0     		b	.L258
 4179              	.L260:
 937:.\Protocolo.c ****                                  if(Surtidor_rxBuffer[x+101]==0){
 4180              		.loc 1 937 0
 4181 058a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4182 058c 6533     		adds	r3, r3, #101
 4183 058e 044A     		ldr	r2, .L493
 4184 0590 D35C     		ldrb	r3, [r2, r3]
 4185 0592 DBB2     		uxtb	r3, r3
 4186 0594 002B     		cmp	r3, #0
 4187 0596 07D1     		bne	.L259
 938:.\Protocolo.c ****                                     return 0;
 4188              		.loc 1 938 0
 4189 0598 0023     		movs	r3, #0
 4190 059a 01F0F6B8 		b	.L199
 4191              	.L494:
 4192 059e 00BF     		.align	2
 4193              	.L493:
 4194 05a0 00000000 		.word	Surtidor_rxBuffer
 4195 05a4 00000000 		.word	lado1
 4196              	.L259:
 939:.\Protocolo.c ****                                 }                                
 940:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4197              		.loc 1 940 0
 4198 05a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4199 05aa 0C33     		adds	r3, r3, #12
 4200 05ac FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4201 05ae 6532     		adds	r2, r2, #101
 4202 05b0 AB49     		ldr	r1, .L495
 4203 05b2 8A5C     		ldrb	r2, [r1, r2]
 4204 05b4 D2B2     		uxtb	r2, r2
 4205 05b6 AB49     		ldr	r1, .L495+4
 4206 05b8 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 94


 4207 05ba 83F83220 		strb	r2, [r3, #50]
 936:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4208              		.loc 1 936 0
 4209 05be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4210 05c0 0133     		adds	r3, r3, #1
 4211 05c2 FB73     		strb	r3, [r7, #15]
 4212              	.L258:
 936:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4213              		.loc 1 936 0 is_stmt 0 discriminator 1
 4214 05c4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4215 05c6 0B2B     		cmp	r3, #11
 4216 05c8 DFD9     		bls	.L260
 941:.\Protocolo.c **** 							}
 942:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4217              		.loc 1 942 0 is_stmt 1
 4218 05ca 0023     		movs	r3, #0
 4219 05cc FB73     		strb	r3, [r7, #15]
 4220 05ce 0CE0     		b	.L261
 4221              	.L262:
 943:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4222              		.loc 1 943 0 discriminator 2
 4223 05d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4224 05d2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4225 05d4 7232     		adds	r2, r2, #114
 4226 05d6 A249     		ldr	r1, .L495
 4227 05d8 8A5C     		ldrb	r2, [r1, r2]
 4228 05da D2B2     		uxtb	r2, r2
 4229 05dc A149     		ldr	r1, .L495+4
 4230 05de 0B44     		add	r3, r3, r1
 4231 05e0 83F85420 		strb	r2, [r3, #84]
 942:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4232              		.loc 1 942 0 discriminator 2
 4233 05e4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4234 05e6 0133     		adds	r3, r3, #1
 4235 05e8 FB73     		strb	r3, [r7, #15]
 4236              	.L261:
 942:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4237              		.loc 1 942 0 is_stmt 0 discriminator 1
 4238 05ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4239 05ec 042B     		cmp	r3, #4
 4240 05ee EFD9     		bls	.L262
 944:.\Protocolo.c **** 							}
 945:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4241              		.loc 1 945 0 is_stmt 1
 4242 05f0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 946:.\Protocolo.c ****     						return 3;                            
 4243              		.loc 1 946 0
 4244 05f4 0323     		movs	r3, #3
 4245 05f6 01F0C8B8 		b	.L199
 4246              	.L248:
 947:.\Protocolo.c **** 						}
 948:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4247              		.loc 1 948 0
 4248 05fa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 949:.\Protocolo.c **** 						return 1;			
 4249              		.loc 1 949 0
 4250 05fe 0123     		movs	r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 95


 4251 0600 01F0C3B8 		b	.L199
 4252              	.L228:
 950:.\Protocolo.c **** 					}
 951:.\Protocolo.c **** 					else{
 952:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4253              		.loc 1 952 0
 4254 0604 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 953:.\Protocolo.c **** 						return 0;					
 4255              		.loc 1 953 0
 4256 0608 0023     		movs	r3, #0
 4257 060a 01F0BEB8 		b	.L199
 4258              	.L227:
 954:.\Protocolo.c **** 					}
 955:.\Protocolo.c **** 				}
 956:.\Protocolo.c **** 				else{
 957:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4259              		.loc 1 957 0
 4260 060e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 958:.\Protocolo.c **** 					return 0;		
 4261              		.loc 1 958 0
 4262 0612 0023     		movs	r3, #0
 4263 0614 01F0B9B8 		b	.L199
 4264              	.L186:
 959:.\Protocolo.c **** 				}	
 960:.\Protocolo.c **** 			}
 961:.\Protocolo.c **** 		}
 962:.\Protocolo.c **** 		else if(dir==lado2.dir){
 4265              		.loc 1 962 0
 4266 0618 934B     		ldr	r3, .L495+8
 4267 061a 1B78     		ldrb	r3, [r3]
 4268 061c DBB2     		uxtb	r3, r3
 4269 061e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4270 0620 9A42     		cmp	r2, r3
 4271 0622 40F0E982 		bne	.L263
 963:.\Protocolo.c **** 			if(version[1]!=7){
 4272              		.loc 1 963 0
 4273 0626 914B     		ldr	r3, .L495+12
 4274 0628 5B78     		ldrb	r3, [r3, #1]
 4275 062a DBB2     		uxtb	r3, r3
 4276 062c 072B     		cmp	r3, #7
 4277 062e 00F07481 		beq	.L264
 964:.\Protocolo.c **** 				CyDelay(900);
 4278              		.loc 1 964 0
 4279 0632 4FF46170 		mov	r0, #900
 4280 0636 FFF7FEFF 		bl	CyDelay
 965:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4281              		.loc 1 965 0
 4282 063a FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4283 063e 0346     		mov	r3, r0
 4284 0640 FB73     		strb	r3, [r7, #15]
 966:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){				
 4285              		.loc 1 966 0
 4286 0642 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4287 0644 222B     		cmp	r3, #34
 4288 0646 06D0     		beq	.L265
 4289              		.loc 1 966 0 is_stmt 0 discriminator 1
 4290 0648 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 96


 4291 064a 402B     		cmp	r3, #64
 4292 064c 03D0     		beq	.L265
 4293 064e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4294 0650 5E2B     		cmp	r3, #94
 4295 0652 40F05D81 		bne	.L266
 4296              	.L265:
 967:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4297              		.loc 1 967 0 is_stmt 1
 4298 0656 824B     		ldr	r3, .L495
 4299 0658 1B78     		ldrb	r3, [r3]
 4300 065a DBB2     		uxtb	r3, r3
 4301 065c FF2B     		cmp	r3, #255
 4302 065e 40F05281 		bne	.L267
 4303              		.loc 1 967 0 is_stmt 0 discriminator 1
 4304 0662 7F4B     		ldr	r3, .L495
 4305 0664 5B78     		ldrb	r3, [r3, #1]
 4306 0666 DBB2     		uxtb	r3, r3
 4307 0668 F62B     		cmp	r3, #246
 4308 066a 40F04C81 		bne	.L267
 4309 066e 7C4B     		ldr	r3, .L495
 4310 0670 DB78     		ldrb	r3, [r3, #3]
 4311 0672 DBB2     		uxtb	r3, r3
 4312 0674 F92B     		cmp	r3, #249
 4313 0676 40F04681 		bne	.L267
 968:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4314              		.loc 1 968 0 is_stmt 1
 4315 067a 0023     		movs	r3, #0
 4316 067c BB73     		strb	r3, [r7, #14]
 4317 067e 16E0     		b	.L268
 4318              	.L271:
 969:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4319              		.loc 1 969 0
 4320 0680 0023     		movs	r3, #0
 4321 0682 FB73     		strb	r3, [r7, #15]
 4322 0684 0DE0     		b	.L269
 4323              	.L270:
 970:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4324              		.loc 1 970 0 discriminator 2
 4325 0686 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4326 0688 F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 4327 068a 7749     		ldr	r1, .L495+8
 4328 068c 1346     		mov	r3, r2
 4329 068e 5B00     		lsls	r3, r3, #1
 4330 0690 1344     		add	r3, r3, r2
 4331 0692 DB00     		lsls	r3, r3, #3
 4332 0694 0344     		add	r3, r3, r0
 4333 0696 0B44     		add	r3, r3, r1
 4334 0698 0022     		movs	r2, #0
 4335 069a 9A70     		strb	r2, [r3, #2]
 969:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4336              		.loc 1 969 0 discriminator 2
 4337 069c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4338 069e 0133     		adds	r3, r3, #1
 4339 06a0 FB73     		strb	r3, [r7, #15]
 4340              	.L269:
 969:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4341              		.loc 1 969 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 97


 4342 06a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4343 06a4 172B     		cmp	r3, #23
 4344 06a6 EED9     		bls	.L270
 968:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4345              		.loc 1 968 0 is_stmt 1
 4346 06a8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4347 06aa 0133     		adds	r3, r3, #1
 4348 06ac BB73     		strb	r3, [r7, #14]
 4349              	.L268:
 968:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4350              		.loc 1 968 0 is_stmt 0 discriminator 1
 4351 06ae BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4352 06b0 022B     		cmp	r3, #2
 4353 06b2 E5D9     		bls	.L271
 971:.\Protocolo.c ****                     		}
 972:.\Protocolo.c ****                     	}                        
 973:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4354              		.loc 1 973 0 is_stmt 1
 4355 06b4 0023     		movs	r3, #0
 4356 06b6 FB73     		strb	r3, [r7, #15]
 4357 06b8 0BE0     		b	.L272
 4358              	.L273:
 974:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4359              		.loc 1 974 0 discriminator 2
 4360 06ba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4361 06bc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4362 06be 0432     		adds	r2, r2, #4
 4363 06c0 6749     		ldr	r1, .L495
 4364 06c2 8A5C     		ldrb	r2, [r1, r2]
 4365 06c4 D2B2     		uxtb	r2, r2
 4366 06c6 6849     		ldr	r1, .L495+8
 4367 06c8 0B44     		add	r3, r3, r1
 4368 06ca 9A70     		strb	r2, [r3, #2]
 973:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4369              		.loc 1 973 0 discriminator 2
 4370 06cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4371 06ce 0133     		adds	r3, r3, #1
 4372 06d0 FB73     		strb	r3, [r7, #15]
 4373              	.L272:
 973:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4374              		.loc 1 973 0 is_stmt 0 discriminator 1
 4375 06d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4376 06d4 072B     		cmp	r3, #7
 4377 06d6 F0D9     		bls	.L273
 975:.\Protocolo.c **** 						}
 976:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4378              		.loc 1 976 0 is_stmt 1
 4379 06d8 0023     		movs	r3, #0
 4380 06da FB73     		strb	r3, [r7, #15]
 4381 06dc 16E0     		b	.L274
 4382              	.L276:
 977:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 4383              		.loc 1 977 0
 4384 06de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4385 06e0 0D33     		adds	r3, r3, #13
 4386 06e2 5F4A     		ldr	r2, .L495
 4387 06e4 D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 98


 4388 06e6 DBB2     		uxtb	r3, r3
 4389 06e8 002B     		cmp	r3, #0
 4390 06ea 02D1     		bne	.L275
 978:.\Protocolo.c ****                                 return 0;
 4391              		.loc 1 978 0
 4392 06ec 0023     		movs	r3, #0
 4393 06ee 01F04CB8 		b	.L199
 4394              	.L275:
 979:.\Protocolo.c ****                             }                             
 980:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4395              		.loc 1 980 0
 4396 06f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4397 06f4 0C33     		adds	r3, r3, #12
 4398 06f6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4399 06f8 0D32     		adds	r2, r2, #13
 4400 06fa 5949     		ldr	r1, .L495
 4401 06fc 8A5C     		ldrb	r2, [r1, r2]
 4402 06fe D2B2     		uxtb	r2, r2
 4403 0700 5949     		ldr	r1, .L495+8
 4404 0702 0B44     		add	r3, r3, r1
 4405 0704 9A70     		strb	r2, [r3, #2]
 976:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4406              		.loc 1 976 0
 4407 0706 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4408 0708 0133     		adds	r3, r3, #1
 4409 070a FB73     		strb	r3, [r7, #15]
 4410              	.L274:
 976:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4411              		.loc 1 976 0 is_stmt 0 discriminator 1
 4412 070c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4413 070e 072B     		cmp	r3, #7
 4414 0710 E5D9     		bls	.L276
 981:.\Protocolo.c **** 						}
 982:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 4415              		.loc 1 982 0 is_stmt 1
 4416 0712 0023     		movs	r3, #0
 4417 0714 FB73     		strb	r3, [r7, #15]
 4418 0716 0CE0     		b	.L277
 4419              	.L278:
 983:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4420              		.loc 1 983 0 discriminator 2
 4421 0718 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4422 071a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4423 071c 1632     		adds	r2, r2, #22
 4424 071e 5049     		ldr	r1, .L495
 4425 0720 8A5C     		ldrb	r2, [r1, r2]
 4426 0722 D2B2     		uxtb	r2, r2
 4427 0724 5049     		ldr	r1, .L495+8
 4428 0726 0B44     		add	r3, r3, r1
 4429 0728 83F84A20 		strb	r2, [r3, #74]
 982:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 4430              		.loc 1 982 0 discriminator 2
 4431 072c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4432 072e 0133     		adds	r3, r3, #1
 4433 0730 FB73     		strb	r3, [r7, #15]
 4434              	.L277:
 982:.\Protocolo.c **** 						for(x=0;x<=3;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 99


 4435              		.loc 1 982 0 is_stmt 0 discriminator 1
 4436 0732 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4437 0734 032B     		cmp	r3, #3
 4438 0736 EFD9     		bls	.L278
 984:.\Protocolo.c **** 						}				
 985:.\Protocolo.c **** 						if(nmangueras==2){
 4439              		.loc 1 985 0 is_stmt 1
 4440 0738 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4441 073a 022B     		cmp	r3, #2
 4442 073c 46D1     		bne	.L279
 986:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4443              		.loc 1 986 0
 4444 073e 0023     		movs	r3, #0
 4445 0740 FB73     		strb	r3, [r7, #15]
 4446 0742 0BE0     		b	.L280
 4447              	.L281:
 987:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4448              		.loc 1 987 0 discriminator 2
 4449 0744 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4450 0746 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4451 0748 2232     		adds	r2, r2, #34
 4452 074a 4549     		ldr	r1, .L495
 4453 074c 8A5C     		ldrb	r2, [r1, r2]
 4454 074e D2B2     		uxtb	r2, r2
 4455 0750 4549     		ldr	r1, .L495+8
 4456 0752 0B44     		add	r3, r3, r1
 4457 0754 9A76     		strb	r2, [r3, #26]
 986:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4458              		.loc 1 986 0 discriminator 2
 4459 0756 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4460 0758 0133     		adds	r3, r3, #1
 4461 075a FB73     		strb	r3, [r7, #15]
 4462              	.L280:
 986:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4463              		.loc 1 986 0 is_stmt 0 discriminator 1
 4464 075c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4465 075e 072B     		cmp	r3, #7
 4466 0760 F0D9     		bls	.L281
 988:.\Protocolo.c **** 							}
 989:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4467              		.loc 1 989 0 is_stmt 1
 4468 0762 0023     		movs	r3, #0
 4469 0764 FB73     		strb	r3, [r7, #15]
 4470 0766 16E0     		b	.L282
 4471              	.L284:
 990:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 4472              		.loc 1 990 0
 4473 0768 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4474 076a 2B33     		adds	r3, r3, #43
 4475 076c 3C4A     		ldr	r2, .L495
 4476 076e D35C     		ldrb	r3, [r2, r3]
 4477 0770 DBB2     		uxtb	r3, r3
 4478 0772 002B     		cmp	r3, #0
 4479 0774 02D1     		bne	.L283
 991:.\Protocolo.c ****                                     return 0;
 4480              		.loc 1 991 0
 4481 0776 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 100


 4482 0778 01F007B8 		b	.L199
 4483              	.L283:
 992:.\Protocolo.c ****                                 }                                 
 993:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4484              		.loc 1 993 0
 4485 077c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4486 077e 0C33     		adds	r3, r3, #12
 4487 0780 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4488 0782 2B32     		adds	r2, r2, #43
 4489 0784 3649     		ldr	r1, .L495
 4490 0786 8A5C     		ldrb	r2, [r1, r2]
 4491 0788 D2B2     		uxtb	r2, r2
 4492 078a 3749     		ldr	r1, .L495+8
 4493 078c 0B44     		add	r3, r3, r1
 4494 078e 9A76     		strb	r2, [r3, #26]
 989:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4495              		.loc 1 989 0
 4496 0790 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4497 0792 0133     		adds	r3, r3, #1
 4498 0794 FB73     		strb	r3, [r7, #15]
 4499              	.L282:
 989:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4500              		.loc 1 989 0 is_stmt 0 discriminator 1
 4501 0796 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4502 0798 072B     		cmp	r3, #7
 4503 079a E5D9     		bls	.L284
 994:.\Protocolo.c **** 							}
 995:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4504              		.loc 1 995 0 is_stmt 1
 4505 079c 0023     		movs	r3, #0
 4506 079e FB73     		strb	r3, [r7, #15]
 4507 07a0 0CE0     		b	.L285
 4508              	.L286:
 996:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4509              		.loc 1 996 0 discriminator 2
 4510 07a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4511 07a4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4512 07a6 3432     		adds	r2, r2, #52
 4513 07a8 2D49     		ldr	r1, .L495
 4514 07aa 8A5C     		ldrb	r2, [r1, r2]
 4515 07ac D2B2     		uxtb	r2, r2
 4516 07ae 2E49     		ldr	r1, .L495+8
 4517 07b0 0B44     		add	r3, r3, r1
 4518 07b2 83F84F20 		strb	r2, [r3, #79]
 995:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4519              		.loc 1 995 0 discriminator 2
 4520 07b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4521 07b8 0133     		adds	r3, r3, #1
 4522 07ba FB73     		strb	r3, [r7, #15]
 4523              	.L285:
 995:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4524              		.loc 1 995 0 is_stmt 0 discriminator 1
 4525 07bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4526 07be 032B     		cmp	r3, #3
 4527 07c0 EFD9     		bls	.L286
 997:.\Protocolo.c **** 							}
 998:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 101


 4528              		.loc 1 998 0 is_stmt 1
 4529 07c2 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 999:.\Protocolo.c ****     						return 2;                            
 4530              		.loc 1 999 0
 4531 07c6 0223     		movs	r3, #2
 4532 07c8 00F0DFBF 		b	.L199
 4533              	.L279:
1000:.\Protocolo.c **** 						}
1001:.\Protocolo.c **** 						if(nmangueras==3){
 4534              		.loc 1 1001 0
 4535 07cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4536 07ce 032B     		cmp	r3, #3
 4537 07d0 40F09480 		bne	.L287
1002:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4538              		.loc 1 1002 0
 4539 07d4 0023     		movs	r3, #0
 4540 07d6 FB73     		strb	r3, [r7, #15]
 4541 07d8 0BE0     		b	.L288
 4542              	.L289:
1003:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4543              		.loc 1 1003 0 discriminator 2
 4544 07da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4545 07dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4546 07de 2232     		adds	r2, r2, #34
 4547 07e0 1F49     		ldr	r1, .L495
 4548 07e2 8A5C     		ldrb	r2, [r1, r2]
 4549 07e4 D2B2     		uxtb	r2, r2
 4550 07e6 2049     		ldr	r1, .L495+8
 4551 07e8 0B44     		add	r3, r3, r1
 4552 07ea 9A76     		strb	r2, [r3, #26]
1002:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4553              		.loc 1 1002 0 discriminator 2
 4554 07ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4555 07ee 0133     		adds	r3, r3, #1
 4556 07f0 FB73     		strb	r3, [r7, #15]
 4557              	.L288:
1002:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4558              		.loc 1 1002 0 is_stmt 0 discriminator 1
 4559 07f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4560 07f4 072B     		cmp	r3, #7
 4561 07f6 F0D9     		bls	.L289
1004:.\Protocolo.c **** 							}
1005:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4562              		.loc 1 1005 0 is_stmt 1
 4563 07f8 0023     		movs	r3, #0
 4564 07fa FB73     		strb	r3, [r7, #15]
 4565 07fc 16E0     		b	.L290
 4566              	.L292:
1006:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 4567              		.loc 1 1006 0
 4568 07fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4569 0800 2B33     		adds	r3, r3, #43
 4570 0802 174A     		ldr	r2, .L495
 4571 0804 D35C     		ldrb	r3, [r2, r3]
 4572 0806 DBB2     		uxtb	r3, r3
 4573 0808 002B     		cmp	r3, #0
 4574 080a 02D1     		bne	.L291
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 102


1007:.\Protocolo.c ****                                     return 0;
 4575              		.loc 1 1007 0
 4576 080c 0023     		movs	r3, #0
 4577 080e 00F0BCBF 		b	.L199
 4578              	.L291:
1008:.\Protocolo.c ****                                 }                                 
1009:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4579              		.loc 1 1009 0
 4580 0812 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4581 0814 0C33     		adds	r3, r3, #12
 4582 0816 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4583 0818 2B32     		adds	r2, r2, #43
 4584 081a 1149     		ldr	r1, .L495
 4585 081c 8A5C     		ldrb	r2, [r1, r2]
 4586 081e D2B2     		uxtb	r2, r2
 4587 0820 1149     		ldr	r1, .L495+8
 4588 0822 0B44     		add	r3, r3, r1
 4589 0824 9A76     		strb	r2, [r3, #26]
1005:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4590              		.loc 1 1005 0
 4591 0826 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4592 0828 0133     		adds	r3, r3, #1
 4593 082a FB73     		strb	r3, [r7, #15]
 4594              	.L290:
1005:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4595              		.loc 1 1005 0 is_stmt 0 discriminator 1
 4596 082c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4597 082e 072B     		cmp	r3, #7
 4598 0830 E5D9     		bls	.L292
1010:.\Protocolo.c **** 							}
1011:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4599              		.loc 1 1011 0 is_stmt 1
 4600 0832 0023     		movs	r3, #0
 4601 0834 FB73     		strb	r3, [r7, #15]
 4602 0836 0CE0     		b	.L293
 4603              	.L294:
1012:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4604              		.loc 1 1012 0 discriminator 2
 4605 0838 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4606 083a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4607 083c 3432     		adds	r2, r2, #52
 4608 083e 0849     		ldr	r1, .L495
 4609 0840 8A5C     		ldrb	r2, [r1, r2]
 4610 0842 D2B2     		uxtb	r2, r2
 4611 0844 0849     		ldr	r1, .L495+8
 4612 0846 0B44     		add	r3, r3, r1
 4613 0848 83F84F20 		strb	r2, [r3, #79]
1011:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4614              		.loc 1 1011 0 discriminator 2
 4615 084c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4616 084e 0133     		adds	r3, r3, #1
 4617 0850 FB73     		strb	r3, [r7, #15]
 4618              	.L293:
1011:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4619              		.loc 1 1011 0 is_stmt 0 discriminator 1
 4620 0852 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4621 0854 032B     		cmp	r3, #3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 103


 4622 0856 EFD9     		bls	.L294
1013:.\Protocolo.c **** 							}						
1014:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4623              		.loc 1 1014 0 is_stmt 1
 4624 0858 0023     		movs	r3, #0
 4625 085a FB73     		strb	r3, [r7, #15]
 4626 085c 15E0     		b	.L295
 4627              	.L496:
 4628 085e 00BF     		.align	2
 4629              	.L495:
 4630 0860 00000000 		.word	Surtidor_rxBuffer
 4631 0864 00000000 		.word	lado1
 4632 0868 00000000 		.word	lado2
 4633 086c 00000000 		.word	version
 4634              	.L296:
1015:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4635              		.loc 1 1015 0 discriminator 2
 4636 0870 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4637 0872 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4638 0874 4032     		adds	r2, r2, #64
 4639 0876 AA49     		ldr	r1, .L497
 4640 0878 8A5C     		ldrb	r2, [r1, r2]
 4641 087a D2B2     		uxtb	r2, r2
 4642 087c A949     		ldr	r1, .L497+4
 4643 087e 0B44     		add	r3, r3, r1
 4644 0880 83F83220 		strb	r2, [r3, #50]
1014:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4645              		.loc 1 1014 0 discriminator 2
 4646 0884 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4647 0886 0133     		adds	r3, r3, #1
 4648 0888 FB73     		strb	r3, [r7, #15]
 4649              	.L295:
1014:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4650              		.loc 1 1014 0 is_stmt 0 discriminator 1
 4651 088a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4652 088c 072B     		cmp	r3, #7
 4653 088e EFD9     		bls	.L296
1016:.\Protocolo.c **** 							}
1017:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4654              		.loc 1 1017 0 is_stmt 1
 4655 0890 0023     		movs	r3, #0
 4656 0892 FB73     		strb	r3, [r7, #15]
 4657 0894 17E0     		b	.L297
 4658              	.L299:
1018:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 4659              		.loc 1 1018 0
 4660 0896 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4661 0898 4933     		adds	r3, r3, #73
 4662 089a A14A     		ldr	r2, .L497
 4663 089c D35C     		ldrb	r3, [r2, r3]
 4664 089e DBB2     		uxtb	r3, r3
 4665 08a0 002B     		cmp	r3, #0
 4666 08a2 02D1     		bne	.L298
1019:.\Protocolo.c ****                                     return 0;
 4667              		.loc 1 1019 0
 4668 08a4 0023     		movs	r3, #0
 4669 08a6 00F070BF 		b	.L199
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 104


 4670              	.L298:
1020:.\Protocolo.c ****                                 }                                 
1021:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4671              		.loc 1 1021 0
 4672 08aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4673 08ac 0C33     		adds	r3, r3, #12
 4674 08ae FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4675 08b0 4932     		adds	r2, r2, #73
 4676 08b2 9B49     		ldr	r1, .L497
 4677 08b4 8A5C     		ldrb	r2, [r1, r2]
 4678 08b6 D2B2     		uxtb	r2, r2
 4679 08b8 9A49     		ldr	r1, .L497+4
 4680 08ba 0B44     		add	r3, r3, r1
 4681 08bc 83F83220 		strb	r2, [r3, #50]
1017:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4682              		.loc 1 1017 0
 4683 08c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4684 08c2 0133     		adds	r3, r3, #1
 4685 08c4 FB73     		strb	r3, [r7, #15]
 4686              	.L297:
1017:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4687              		.loc 1 1017 0 is_stmt 0 discriminator 1
 4688 08c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4689 08c8 072B     		cmp	r3, #7
 4690 08ca E4D9     		bls	.L299
1022:.\Protocolo.c **** 							}
1023:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4691              		.loc 1 1023 0 is_stmt 1
 4692 08cc 0023     		movs	r3, #0
 4693 08ce FB73     		strb	r3, [r7, #15]
 4694 08d0 0CE0     		b	.L300
 4695              	.L301:
1024:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4696              		.loc 1 1024 0 discriminator 2
 4697 08d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4698 08d4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4699 08d6 5232     		adds	r2, r2, #82
 4700 08d8 9149     		ldr	r1, .L497
 4701 08da 8A5C     		ldrb	r2, [r1, r2]
 4702 08dc D2B2     		uxtb	r2, r2
 4703 08de 9149     		ldr	r1, .L497+4
 4704 08e0 0B44     		add	r3, r3, r1
 4705 08e2 83F85420 		strb	r2, [r3, #84]
1023:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4706              		.loc 1 1023 0 discriminator 2
 4707 08e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4708 08e8 0133     		adds	r3, r3, #1
 4709 08ea FB73     		strb	r3, [r7, #15]
 4710              	.L300:
1023:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4711              		.loc 1 1023 0 is_stmt 0 discriminator 1
 4712 08ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4713 08ee 032B     		cmp	r3, #3
 4714 08f0 EFD9     		bls	.L301
1025:.\Protocolo.c **** 							}
1026:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4715              		.loc 1 1026 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 105


 4716 08f2 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1027:.\Protocolo.c ****     						return 3;                            
 4717              		.loc 1 1027 0
 4718 08f6 0323     		movs	r3, #3
 4719 08f8 00F047BF 		b	.L199
 4720              	.L287:
1028:.\Protocolo.c **** 						}
1029:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4721              		.loc 1 1029 0
 4722 08fc FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1030:.\Protocolo.c **** 						return 1;			
 4723              		.loc 1 1030 0
 4724 0900 0123     		movs	r3, #1
 4725 0902 00F042BF 		b	.L199
 4726              	.L267:
1031:.\Protocolo.c **** 					}
1032:.\Protocolo.c **** 					else{
1033:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4727              		.loc 1 1033 0
 4728 0906 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1034:.\Protocolo.c **** 						return 0;		
 4729              		.loc 1 1034 0
 4730 090a 0023     		movs	r3, #0
 4731 090c 00F03DBF 		b	.L199
 4732              	.L266:
1035:.\Protocolo.c **** 					}
1036:.\Protocolo.c **** 				}
1037:.\Protocolo.c **** 				else{
1038:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4733              		.loc 1 1038 0
 4734 0910 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1039:.\Protocolo.c **** 					return 0;		
 4735              		.loc 1 1039 0
 4736 0914 0023     		movs	r3, #0
 4737 0916 00F038BF 		b	.L199
 4738              	.L264:
1040:.\Protocolo.c **** 				}				
1041:.\Protocolo.c **** 			}
1042:.\Protocolo.c **** 			else{
1043:.\Protocolo.c **** 				CyDelay(900);
 4739              		.loc 1 1043 0
 4740 091a 4FF46170 		mov	r0, #900
 4741 091e FFF7FEFF 		bl	CyDelay
1044:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4742              		.loc 1 1044 0
 4743 0922 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4744 0926 0346     		mov	r3, r0
 4745 0928 FB73     		strb	r3, [r7, #15]
1045:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){					
 4746              		.loc 1 1045 0
 4747 092a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4748 092c 2E2B     		cmp	r3, #46
 4749 092e 06D0     		beq	.L302
 4750              		.loc 1 1045 0 is_stmt 0 discriminator 1
 4751 0930 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4752 0932 582B     		cmp	r3, #88
 4753 0934 03D0     		beq	.L302
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 106


 4754 0936 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4755 0938 822B     		cmp	r3, #130
 4756 093a 40F05881 		bne	.L303
 4757              	.L302:
1046:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4758              		.loc 1 1046 0 is_stmt 1
 4759 093e 784B     		ldr	r3, .L497
 4760 0940 1B78     		ldrb	r3, [r3]
 4761 0942 DBB2     		uxtb	r3, r3
 4762 0944 FF2B     		cmp	r3, #255
 4763 0946 40F04D81 		bne	.L304
 4764              		.loc 1 1046 0 is_stmt 0 discriminator 1
 4765 094a 754B     		ldr	r3, .L497
 4766 094c 5B78     		ldrb	r3, [r3, #1]
 4767 094e DBB2     		uxtb	r3, r3
 4768 0950 F62B     		cmp	r3, #246
 4769 0952 40F04781 		bne	.L304
 4770 0956 724B     		ldr	r3, .L497
 4771 0958 DB78     		ldrb	r3, [r3, #3]
 4772 095a DBB2     		uxtb	r3, r3
 4773 095c F92B     		cmp	r3, #249
 4774 095e 40F04181 		bne	.L304
1047:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4775              		.loc 1 1047 0 is_stmt 1
 4776 0962 0023     		movs	r3, #0
 4777 0964 BB73     		strb	r3, [r7, #14]
 4778 0966 16E0     		b	.L305
 4779              	.L308:
1048:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4780              		.loc 1 1048 0
 4781 0968 0023     		movs	r3, #0
 4782 096a FB73     		strb	r3, [r7, #15]
 4783 096c 0DE0     		b	.L306
 4784              	.L307:
1049:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4785              		.loc 1 1049 0 discriminator 2
 4786 096e BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4787 0970 F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 4788 0972 6C49     		ldr	r1, .L497+4
 4789 0974 1346     		mov	r3, r2
 4790 0976 5B00     		lsls	r3, r3, #1
 4791 0978 1344     		add	r3, r3, r2
 4792 097a DB00     		lsls	r3, r3, #3
 4793 097c 0344     		add	r3, r3, r0
 4794 097e 0B44     		add	r3, r3, r1
 4795 0980 0022     		movs	r2, #0
 4796 0982 9A70     		strb	r2, [r3, #2]
1048:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4797              		.loc 1 1048 0 discriminator 2
 4798 0984 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4799 0986 0133     		adds	r3, r3, #1
 4800 0988 FB73     		strb	r3, [r7, #15]
 4801              	.L306:
1048:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4802              		.loc 1 1048 0 is_stmt 0 discriminator 1
 4803 098a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4804 098c 172B     		cmp	r3, #23
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 107


 4805 098e EED9     		bls	.L307
1047:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4806              		.loc 1 1047 0 is_stmt 1
 4807 0990 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4808 0992 0133     		adds	r3, r3, #1
 4809 0994 BB73     		strb	r3, [r7, #14]
 4810              	.L305:
1047:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4811              		.loc 1 1047 0 is_stmt 0 discriminator 1
 4812 0996 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4813 0998 022B     		cmp	r3, #2
 4814 099a E5D9     		bls	.L308
1050:.\Protocolo.c ****                     		}
1051:.\Protocolo.c ****                     	}                         
1052:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4815              		.loc 1 1052 0 is_stmt 1
 4816 099c 0023     		movs	r3, #0
 4817 099e FB73     		strb	r3, [r7, #15]
 4818 09a0 0BE0     		b	.L309
 4819              	.L310:
1053:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4820              		.loc 1 1053 0 discriminator 2
 4821 09a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4822 09a4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4823 09a6 0432     		adds	r2, r2, #4
 4824 09a8 5D49     		ldr	r1, .L497
 4825 09aa 8A5C     		ldrb	r2, [r1, r2]
 4826 09ac D2B2     		uxtb	r2, r2
 4827 09ae 5D49     		ldr	r1, .L497+4
 4828 09b0 0B44     		add	r3, r3, r1
 4829 09b2 9A70     		strb	r2, [r3, #2]
1052:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4830              		.loc 1 1052 0 discriminator 2
 4831 09b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4832 09b6 0133     		adds	r3, r3, #1
 4833 09b8 FB73     		strb	r3, [r7, #15]
 4834              	.L309:
1052:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4835              		.loc 1 1052 0 is_stmt 0 discriminator 1
 4836 09ba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4837 09bc 0B2B     		cmp	r3, #11
 4838 09be F0D9     		bls	.L310
1054:.\Protocolo.c **** 						}
1055:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4839              		.loc 1 1055 0 is_stmt 1
 4840 09c0 0023     		movs	r3, #0
 4841 09c2 FB73     		strb	r3, [r7, #15]
 4842 09c4 16E0     		b	.L311
 4843              	.L313:
1056:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 4844              		.loc 1 1056 0
 4845 09c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4846 09c8 1133     		adds	r3, r3, #17
 4847 09ca 554A     		ldr	r2, .L497
 4848 09cc D35C     		ldrb	r3, [r2, r3]
 4849 09ce DBB2     		uxtb	r3, r3
 4850 09d0 002B     		cmp	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 108


 4851 09d2 02D1     		bne	.L312
1057:.\Protocolo.c ****                                 return 0;
 4852              		.loc 1 1057 0
 4853 09d4 0023     		movs	r3, #0
 4854 09d6 00F0D8BE 		b	.L199
 4855              	.L312:
1058:.\Protocolo.c ****                             }                             
1059:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4856              		.loc 1 1059 0
 4857 09da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4858 09dc 0C33     		adds	r3, r3, #12
 4859 09de FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4860 09e0 1132     		adds	r2, r2, #17
 4861 09e2 4F49     		ldr	r1, .L497
 4862 09e4 8A5C     		ldrb	r2, [r1, r2]
 4863 09e6 D2B2     		uxtb	r2, r2
 4864 09e8 4E49     		ldr	r1, .L497+4
 4865 09ea 0B44     		add	r3, r3, r1
 4866 09ec 9A70     		strb	r2, [r3, #2]
1055:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4867              		.loc 1 1055 0
 4868 09ee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4869 09f0 0133     		adds	r3, r3, #1
 4870 09f2 FB73     		strb	r3, [r7, #15]
 4871              	.L311:
1055:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4872              		.loc 1 1055 0 is_stmt 0 discriminator 1
 4873 09f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4874 09f6 0B2B     		cmp	r3, #11
 4875 09f8 E5D9     		bls	.L313
1060:.\Protocolo.c **** 						}
1061:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 4876              		.loc 1 1061 0 is_stmt 1
 4877 09fa 0023     		movs	r3, #0
 4878 09fc FB73     		strb	r3, [r7, #15]
 4879 09fe 0CE0     		b	.L314
 4880              	.L315:
1062:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 4881              		.loc 1 1062 0 discriminator 2
 4882 0a00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4883 0a02 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4884 0a04 1E32     		adds	r2, r2, #30
 4885 0a06 4649     		ldr	r1, .L497
 4886 0a08 8A5C     		ldrb	r2, [r1, r2]
 4887 0a0a D2B2     		uxtb	r2, r2
 4888 0a0c 4549     		ldr	r1, .L497+4
 4889 0a0e 0B44     		add	r3, r3, r1
 4890 0a10 83F84A20 		strb	r2, [r3, #74]
1061:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 4891              		.loc 1 1061 0 discriminator 2
 4892 0a14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4893 0a16 0133     		adds	r3, r3, #1
 4894 0a18 FB73     		strb	r3, [r7, #15]
 4895              	.L314:
1061:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 4896              		.loc 1 1061 0 is_stmt 0 discriminator 1
 4897 0a1a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 109


 4898 0a1c 042B     		cmp	r3, #4
 4899 0a1e EFD9     		bls	.L315
1063:.\Protocolo.c **** 						}				
1064:.\Protocolo.c **** 						if(nmangueras==2){
 4900              		.loc 1 1064 0 is_stmt 1
 4901 0a20 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4902 0a22 022B     		cmp	r3, #2
 4903 0a24 46D1     		bne	.L316
1065:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4904              		.loc 1 1065 0
 4905 0a26 0023     		movs	r3, #0
 4906 0a28 FB73     		strb	r3, [r7, #15]
 4907 0a2a 0BE0     		b	.L317
 4908              	.L318:
1066:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 4909              		.loc 1 1066 0 discriminator 2
 4910 0a2c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4911 0a2e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4912 0a30 2E32     		adds	r2, r2, #46
 4913 0a32 3B49     		ldr	r1, .L497
 4914 0a34 8A5C     		ldrb	r2, [r1, r2]
 4915 0a36 D2B2     		uxtb	r2, r2
 4916 0a38 3A49     		ldr	r1, .L497+4
 4917 0a3a 0B44     		add	r3, r3, r1
 4918 0a3c 9A76     		strb	r2, [r3, #26]
1065:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4919              		.loc 1 1065 0 discriminator 2
 4920 0a3e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4921 0a40 0133     		adds	r3, r3, #1
 4922 0a42 FB73     		strb	r3, [r7, #15]
 4923              	.L317:
1065:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4924              		.loc 1 1065 0 is_stmt 0 discriminator 1
 4925 0a44 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4926 0a46 0B2B     		cmp	r3, #11
 4927 0a48 F0D9     		bls	.L318
1067:.\Protocolo.c **** 							}
1068:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4928              		.loc 1 1068 0 is_stmt 1
 4929 0a4a 0023     		movs	r3, #0
 4930 0a4c FB73     		strb	r3, [r7, #15]
 4931 0a4e 16E0     		b	.L319
 4932              	.L321:
1069:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 4933              		.loc 1 1069 0
 4934 0a50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4935 0a52 3B33     		adds	r3, r3, #59
 4936 0a54 324A     		ldr	r2, .L497
 4937 0a56 D35C     		ldrb	r3, [r2, r3]
 4938 0a58 DBB2     		uxtb	r3, r3
 4939 0a5a 002B     		cmp	r3, #0
 4940 0a5c 02D1     		bne	.L320
1070:.\Protocolo.c ****                                     return 0;
 4941              		.loc 1 1070 0
 4942 0a5e 0023     		movs	r3, #0
 4943 0a60 00F093BE 		b	.L199
 4944              	.L320:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 110


1071:.\Protocolo.c ****                                 }                                 
1072:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4945              		.loc 1 1072 0
 4946 0a64 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4947 0a66 0C33     		adds	r3, r3, #12
 4948 0a68 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4949 0a6a 3B32     		adds	r2, r2, #59
 4950 0a6c 2C49     		ldr	r1, .L497
 4951 0a6e 8A5C     		ldrb	r2, [r1, r2]
 4952 0a70 D2B2     		uxtb	r2, r2
 4953 0a72 2C49     		ldr	r1, .L497+4
 4954 0a74 0B44     		add	r3, r3, r1
 4955 0a76 9A76     		strb	r2, [r3, #26]
1068:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4956              		.loc 1 1068 0
 4957 0a78 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4958 0a7a 0133     		adds	r3, r3, #1
 4959 0a7c FB73     		strb	r3, [r7, #15]
 4960              	.L319:
1068:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4961              		.loc 1 1068 0 is_stmt 0 discriminator 1
 4962 0a7e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4963 0a80 0B2B     		cmp	r3, #11
 4964 0a82 E5D9     		bls	.L321
1073:.\Protocolo.c **** 							}
1074:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4965              		.loc 1 1074 0 is_stmt 1
 4966 0a84 0023     		movs	r3, #0
 4967 0a86 FB73     		strb	r3, [r7, #15]
 4968 0a88 0CE0     		b	.L322
 4969              	.L323:
1075:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4970              		.loc 1 1075 0 discriminator 2
 4971 0a8a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4972 0a8c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4973 0a8e 4832     		adds	r2, r2, #72
 4974 0a90 2349     		ldr	r1, .L497
 4975 0a92 8A5C     		ldrb	r2, [r1, r2]
 4976 0a94 D2B2     		uxtb	r2, r2
 4977 0a96 2349     		ldr	r1, .L497+4
 4978 0a98 0B44     		add	r3, r3, r1
 4979 0a9a 83F84F20 		strb	r2, [r3, #79]
1074:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4980              		.loc 1 1074 0 discriminator 2
 4981 0a9e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4982 0aa0 0133     		adds	r3, r3, #1
 4983 0aa2 FB73     		strb	r3, [r7, #15]
 4984              	.L322:
1074:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4985              		.loc 1 1074 0 is_stmt 0 discriminator 1
 4986 0aa4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4987 0aa6 042B     		cmp	r3, #4
 4988 0aa8 EFD9     		bls	.L323
1076:.\Protocolo.c **** 							}
1077:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4989              		.loc 1 1077 0 is_stmt 1
 4990 0aaa FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 111


1078:.\Protocolo.c ****     						return 2;                            
 4991              		.loc 1 1078 0
 4992 0aae 0223     		movs	r3, #2
 4993 0ab0 00F06BBE 		b	.L199
 4994              	.L316:
1079:.\Protocolo.c **** 						}
1080:.\Protocolo.c **** 						if(nmangueras==3){
 4995              		.loc 1 1080 0
 4996 0ab4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4997 0ab6 032B     		cmp	r3, #3
 4998 0ab8 40F08F80 		bne	.L324
1081:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4999              		.loc 1 1081 0
 5000 0abc 0023     		movs	r3, #0
 5001 0abe FB73     		strb	r3, [r7, #15]
 5002 0ac0 0BE0     		b	.L325
 5003              	.L326:
1082:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5004              		.loc 1 1082 0 discriminator 2
 5005 0ac2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5006 0ac4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5007 0ac6 2E32     		adds	r2, r2, #46
 5008 0ac8 1549     		ldr	r1, .L497
 5009 0aca 8A5C     		ldrb	r2, [r1, r2]
 5010 0acc D2B2     		uxtb	r2, r2
 5011 0ace 1549     		ldr	r1, .L497+4
 5012 0ad0 0B44     		add	r3, r3, r1
 5013 0ad2 9A76     		strb	r2, [r3, #26]
1081:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5014              		.loc 1 1081 0 discriminator 2
 5015 0ad4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5016 0ad6 0133     		adds	r3, r3, #1
 5017 0ad8 FB73     		strb	r3, [r7, #15]
 5018              	.L325:
1081:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5019              		.loc 1 1081 0 is_stmt 0 discriminator 1
 5020 0ada FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5021 0adc 0B2B     		cmp	r3, #11
 5022 0ade F0D9     		bls	.L326
1083:.\Protocolo.c **** 							}
1084:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5023              		.loc 1 1084 0 is_stmt 1
 5024 0ae0 0023     		movs	r3, #0
 5025 0ae2 FB73     		strb	r3, [r7, #15]
 5026 0ae4 16E0     		b	.L327
 5027              	.L329:
1085:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 5028              		.loc 1 1085 0
 5029 0ae6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5030 0ae8 3B33     		adds	r3, r3, #59
 5031 0aea 0D4A     		ldr	r2, .L497
 5032 0aec D35C     		ldrb	r3, [r2, r3]
 5033 0aee DBB2     		uxtb	r3, r3
 5034 0af0 002B     		cmp	r3, #0
 5035 0af2 02D1     		bne	.L328
1086:.\Protocolo.c ****                                     return 0;
 5036              		.loc 1 1086 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 112


 5037 0af4 0023     		movs	r3, #0
 5038 0af6 00F048BE 		b	.L199
 5039              	.L328:
1087:.\Protocolo.c ****                                 }                                 
1088:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5040              		.loc 1 1088 0
 5041 0afa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5042 0afc 0C33     		adds	r3, r3, #12
 5043 0afe FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5044 0b00 3B32     		adds	r2, r2, #59
 5045 0b02 0749     		ldr	r1, .L497
 5046 0b04 8A5C     		ldrb	r2, [r1, r2]
 5047 0b06 D2B2     		uxtb	r2, r2
 5048 0b08 0649     		ldr	r1, .L497+4
 5049 0b0a 0B44     		add	r3, r3, r1
 5050 0b0c 9A76     		strb	r2, [r3, #26]
1084:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5051              		.loc 1 1084 0
 5052 0b0e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5053 0b10 0133     		adds	r3, r3, #1
 5054 0b12 FB73     		strb	r3, [r7, #15]
 5055              	.L327:
1084:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5056              		.loc 1 1084 0 is_stmt 0 discriminator 1
 5057 0b14 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5058 0b16 0B2B     		cmp	r3, #11
 5059 0b18 E5D9     		bls	.L329
1089:.\Protocolo.c **** 							}
1090:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5060              		.loc 1 1090 0 is_stmt 1
 5061 0b1a 0023     		movs	r3, #0
 5062 0b1c FB73     		strb	r3, [r7, #15]
 5063 0b1e 10E0     		b	.L330
 5064              	.L498:
 5065              		.align	2
 5066              	.L497:
 5067 0b20 00000000 		.word	Surtidor_rxBuffer
 5068 0b24 00000000 		.word	lado2
 5069              	.L331:
1091:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5070              		.loc 1 1091 0 discriminator 2
 5071 0b28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5072 0b2a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5073 0b2c 4832     		adds	r2, r2, #72
 5074 0b2e B149     		ldr	r1, .L499
 5075 0b30 8A5C     		ldrb	r2, [r1, r2]
 5076 0b32 D2B2     		uxtb	r2, r2
 5077 0b34 B049     		ldr	r1, .L499+4
 5078 0b36 0B44     		add	r3, r3, r1
 5079 0b38 83F84F20 		strb	r2, [r3, #79]
1090:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5080              		.loc 1 1090 0 discriminator 2
 5081 0b3c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5082 0b3e 0133     		adds	r3, r3, #1
 5083 0b40 FB73     		strb	r3, [r7, #15]
 5084              	.L330:
1090:.\Protocolo.c **** 							for(x=0;x<=4;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 113


 5085              		.loc 1 1090 0 is_stmt 0 discriminator 1
 5086 0b42 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5087 0b44 042B     		cmp	r3, #4
 5088 0b46 EFD9     		bls	.L331
1092:.\Protocolo.c **** 							}					
1093:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5089              		.loc 1 1093 0 is_stmt 1
 5090 0b48 0023     		movs	r3, #0
 5091 0b4a FB73     		strb	r3, [r7, #15]
 5092 0b4c 0CE0     		b	.L332
 5093              	.L333:
1094:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5094              		.loc 1 1094 0 discriminator 2
 5095 0b4e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5096 0b50 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5097 0b52 5832     		adds	r2, r2, #88
 5098 0b54 A749     		ldr	r1, .L499
 5099 0b56 8A5C     		ldrb	r2, [r1, r2]
 5100 0b58 D2B2     		uxtb	r2, r2
 5101 0b5a A749     		ldr	r1, .L499+4
 5102 0b5c 0B44     		add	r3, r3, r1
 5103 0b5e 83F83220 		strb	r2, [r3, #50]
1093:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5104              		.loc 1 1093 0 discriminator 2
 5105 0b62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5106 0b64 0133     		adds	r3, r3, #1
 5107 0b66 FB73     		strb	r3, [r7, #15]
 5108              	.L332:
1093:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5109              		.loc 1 1093 0 is_stmt 0 discriminator 1
 5110 0b68 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5111 0b6a 0B2B     		cmp	r3, #11
 5112 0b6c EFD9     		bls	.L333
1095:.\Protocolo.c **** 							}
1096:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5113              		.loc 1 1096 0 is_stmt 1
 5114 0b6e 0023     		movs	r3, #0
 5115 0b70 FB73     		strb	r3, [r7, #15]
 5116 0b72 17E0     		b	.L334
 5117              	.L336:
1097:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+101]==0){
 5118              		.loc 1 1097 0
 5119 0b74 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5120 0b76 6533     		adds	r3, r3, #101
 5121 0b78 9E4A     		ldr	r2, .L499
 5122 0b7a D35C     		ldrb	r3, [r2, r3]
 5123 0b7c DBB2     		uxtb	r3, r3
 5124 0b7e 002B     		cmp	r3, #0
 5125 0b80 02D1     		bne	.L335
1098:.\Protocolo.c ****                                     return 0;
 5126              		.loc 1 1098 0
 5127 0b82 0023     		movs	r3, #0
 5128 0b84 00F001BE 		b	.L199
 5129              	.L335:
1099:.\Protocolo.c ****                                 }                                 
1100:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5130              		.loc 1 1100 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 114


 5131 0b88 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5132 0b8a 0C33     		adds	r3, r3, #12
 5133 0b8c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5134 0b8e 6532     		adds	r2, r2, #101
 5135 0b90 9849     		ldr	r1, .L499
 5136 0b92 8A5C     		ldrb	r2, [r1, r2]
 5137 0b94 D2B2     		uxtb	r2, r2
 5138 0b96 9849     		ldr	r1, .L499+4
 5139 0b98 0B44     		add	r3, r3, r1
 5140 0b9a 83F83220 		strb	r2, [r3, #50]
1096:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5141              		.loc 1 1096 0
 5142 0b9e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5143 0ba0 0133     		adds	r3, r3, #1
 5144 0ba2 FB73     		strb	r3, [r7, #15]
 5145              	.L334:
1096:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5146              		.loc 1 1096 0 is_stmt 0 discriminator 1
 5147 0ba4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5148 0ba6 0B2B     		cmp	r3, #11
 5149 0ba8 E4D9     		bls	.L336
1101:.\Protocolo.c **** 							}
1102:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5150              		.loc 1 1102 0 is_stmt 1
 5151 0baa 0023     		movs	r3, #0
 5152 0bac FB73     		strb	r3, [r7, #15]
 5153 0bae 0CE0     		b	.L337
 5154              	.L338:
1103:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5155              		.loc 1 1103 0 discriminator 2
 5156 0bb0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5157 0bb2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5158 0bb4 7232     		adds	r2, r2, #114
 5159 0bb6 8F49     		ldr	r1, .L499
 5160 0bb8 8A5C     		ldrb	r2, [r1, r2]
 5161 0bba D2B2     		uxtb	r2, r2
 5162 0bbc 8E49     		ldr	r1, .L499+4
 5163 0bbe 0B44     		add	r3, r3, r1
 5164 0bc0 83F85420 		strb	r2, [r3, #84]
1102:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5165              		.loc 1 1102 0 discriminator 2
 5166 0bc4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5167 0bc6 0133     		adds	r3, r3, #1
 5168 0bc8 FB73     		strb	r3, [r7, #15]
 5169              	.L337:
1102:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5170              		.loc 1 1102 0 is_stmt 0 discriminator 1
 5171 0bca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5172 0bcc 042B     		cmp	r3, #4
 5173 0bce EFD9     		bls	.L338
1104:.\Protocolo.c **** 							}
1105:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5174              		.loc 1 1105 0 is_stmt 1
 5175 0bd0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1106:.\Protocolo.c ****     						return 3;                            
 5176              		.loc 1 1106 0
 5177 0bd4 0323     		movs	r3, #3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 115


 5178 0bd6 00F0D8BD 		b	.L199
 5179              	.L324:
1107:.\Protocolo.c **** 						}
1108:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5180              		.loc 1 1108 0
 5181 0bda FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1109:.\Protocolo.c **** 						return 1;			
 5182              		.loc 1 1109 0
 5183 0bde 0123     		movs	r3, #1
 5184 0be0 00F0D3BD 		b	.L199
 5185              	.L304:
1110:.\Protocolo.c **** 					}
1111:.\Protocolo.c **** 					else{
1112:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5186              		.loc 1 1112 0
 5187 0be4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1113:.\Protocolo.c **** 						return 0;		
 5188              		.loc 1 1113 0
 5189 0be8 0023     		movs	r3, #0
 5190 0bea 00F0CEBD 		b	.L199
 5191              	.L303:
1114:.\Protocolo.c **** 					}
1115:.\Protocolo.c **** 				}
1116:.\Protocolo.c **** 				else{
1117:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 5192              		.loc 1 1117 0
 5193 0bee FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1118:.\Protocolo.c **** 					return 0;		
 5194              		.loc 1 1118 0
 5195 0bf2 0023     		movs	r3, #0
 5196 0bf4 00F0C9BD 		b	.L199
 5197              	.L263:
1119:.\Protocolo.c **** 				}				
1120:.\Protocolo.c **** 			}		
1121:.\Protocolo.c **** 		}
1122:.\Protocolo.c **** 		else if(dir==lado3.dir){
 5198              		.loc 1 1122 0
 5199 0bf8 804B     		ldr	r3, .L499+8
 5200 0bfa 1B78     		ldrb	r3, [r3]
 5201 0bfc DBB2     		uxtb	r3, r3
 5202 0bfe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5203 0c00 9A42     		cmp	r2, r3
 5204 0c02 40F0E182 		bne	.L339
1123:.\Protocolo.c **** 			if(version[1]!=7){
 5205              		.loc 1 1123 0
 5206 0c06 7E4B     		ldr	r3, .L499+12
 5207 0c08 5B78     		ldrb	r3, [r3, #1]
 5208 0c0a DBB2     		uxtb	r3, r3
 5209 0c0c 072B     		cmp	r3, #7
 5210 0c0e 00F07481 		beq	.L340
1124:.\Protocolo.c **** 				CyDelay(900);
 5211              		.loc 1 1124 0
 5212 0c12 4FF46170 		mov	r0, #900
 5213 0c16 FFF7FEFF 		bl	CyDelay
1125:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 5214              		.loc 1 1125 0
 5215 0c1a FFF7FEFF 		bl	Surtidor_GetRxBufferSize
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 116


 5216 0c1e 0346     		mov	r3, r0
 5217 0c20 FB73     		strb	r3, [r7, #15]
1126:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 5218              		.loc 1 1126 0
 5219 0c22 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5220 0c24 222B     		cmp	r3, #34
 5221 0c26 06D0     		beq	.L341
 5222              		.loc 1 1126 0 is_stmt 0 discriminator 1
 5223 0c28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5224 0c2a 402B     		cmp	r3, #64
 5225 0c2c 03D0     		beq	.L341
 5226 0c2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5227 0c30 5E2B     		cmp	r3, #94
 5228 0c32 40F05D81 		bne	.L342
 5229              	.L341:
1127:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 5230              		.loc 1 1127 0 is_stmt 1
 5231 0c36 6F4B     		ldr	r3, .L499
 5232 0c38 1B78     		ldrb	r3, [r3]
 5233 0c3a DBB2     		uxtb	r3, r3
 5234 0c3c FF2B     		cmp	r3, #255
 5235 0c3e 40F05281 		bne	.L343
 5236              		.loc 1 1127 0 is_stmt 0 discriminator 1
 5237 0c42 6C4B     		ldr	r3, .L499
 5238 0c44 5B78     		ldrb	r3, [r3, #1]
 5239 0c46 DBB2     		uxtb	r3, r3
 5240 0c48 F62B     		cmp	r3, #246
 5241 0c4a 40F04C81 		bne	.L343
 5242 0c4e 694B     		ldr	r3, .L499
 5243 0c50 DB78     		ldrb	r3, [r3, #3]
 5244 0c52 DBB2     		uxtb	r3, r3
 5245 0c54 F92B     		cmp	r3, #249
 5246 0c56 40F04681 		bne	.L343
1128:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 5247              		.loc 1 1128 0 is_stmt 1
 5248 0c5a 0023     		movs	r3, #0
 5249 0c5c BB73     		strb	r3, [r7, #14]
 5250 0c5e 16E0     		b	.L344
 5251              	.L347:
1129:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 5252              		.loc 1 1129 0
 5253 0c60 0023     		movs	r3, #0
 5254 0c62 FB73     		strb	r3, [r7, #15]
 5255 0c64 0DE0     		b	.L345
 5256              	.L346:
1130:.\Protocolo.c ****                     			lado3.totales[y][x]=0;
 5257              		.loc 1 1130 0 discriminator 2
 5258 0c66 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 5259 0c68 F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 5260 0c6a 6449     		ldr	r1, .L499+8
 5261 0c6c 1346     		mov	r3, r2
 5262 0c6e 5B00     		lsls	r3, r3, #1
 5263 0c70 1344     		add	r3, r3, r2
 5264 0c72 DB00     		lsls	r3, r3, #3
 5265 0c74 0344     		add	r3, r3, r0
 5266 0c76 0B44     		add	r3, r3, r1
 5267 0c78 0022     		movs	r2, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 117


 5268 0c7a 9A70     		strb	r2, [r3, #2]
1129:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 5269              		.loc 1 1129 0 discriminator 2
 5270 0c7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5271 0c7e 0133     		adds	r3, r3, #1
 5272 0c80 FB73     		strb	r3, [r7, #15]
 5273              	.L345:
1129:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 5274              		.loc 1 1129 0 is_stmt 0 discriminator 1
 5275 0c82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5276 0c84 172B     		cmp	r3, #23
 5277 0c86 EED9     		bls	.L346
1128:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 5278              		.loc 1 1128 0 is_stmt 1
 5279 0c88 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 5280 0c8a 0133     		adds	r3, r3, #1
 5281 0c8c BB73     		strb	r3, [r7, #14]
 5282              	.L344:
1128:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 5283              		.loc 1 1128 0 is_stmt 0 discriminator 1
 5284 0c8e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 5285 0c90 022B     		cmp	r3, #2
 5286 0c92 E5D9     		bls	.L347
1131:.\Protocolo.c ****                     		}
1132:.\Protocolo.c ****                     	}                        
1133:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 5287              		.loc 1 1133 0 is_stmt 1
 5288 0c94 0023     		movs	r3, #0
 5289 0c96 FB73     		strb	r3, [r7, #15]
 5290 0c98 0BE0     		b	.L348
 5291              	.L349:
1134:.\Protocolo.c **** 							lado3.totales[0][x]=Surtidor_rxBuffer[x+4]; 
 5292              		.loc 1 1134 0 discriminator 2
 5293 0c9a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5294 0c9c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5295 0c9e 0432     		adds	r2, r2, #4
 5296 0ca0 5449     		ldr	r1, .L499
 5297 0ca2 8A5C     		ldrb	r2, [r1, r2]
 5298 0ca4 D2B2     		uxtb	r2, r2
 5299 0ca6 5549     		ldr	r1, .L499+8
 5300 0ca8 0B44     		add	r3, r3, r1
 5301 0caa 9A70     		strb	r2, [r3, #2]
1133:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 5302              		.loc 1 1133 0 discriminator 2
 5303 0cac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5304 0cae 0133     		adds	r3, r3, #1
 5305 0cb0 FB73     		strb	r3, [r7, #15]
 5306              	.L348:
1133:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 5307              		.loc 1 1133 0 is_stmt 0 discriminator 1
 5308 0cb2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5309 0cb4 072B     		cmp	r3, #7
 5310 0cb6 F0D9     		bls	.L349
1135:.\Protocolo.c **** 						}
1136:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 5311              		.loc 1 1136 0 is_stmt 1
 5312 0cb8 0023     		movs	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 118


 5313 0cba FB73     		strb	r3, [r7, #15]
 5314 0cbc 16E0     		b	.L350
 5315              	.L352:
1137:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 5316              		.loc 1 1137 0
 5317 0cbe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5318 0cc0 0D33     		adds	r3, r3, #13
 5319 0cc2 4C4A     		ldr	r2, .L499
 5320 0cc4 D35C     		ldrb	r3, [r2, r3]
 5321 0cc6 DBB2     		uxtb	r3, r3
 5322 0cc8 002B     		cmp	r3, #0
 5323 0cca 02D1     		bne	.L351
1138:.\Protocolo.c ****                                 return 0;
 5324              		.loc 1 1138 0
 5325 0ccc 0023     		movs	r3, #0
 5326 0cce 00F05CBD 		b	.L199
 5327              	.L351:
1139:.\Protocolo.c ****                             }
1140:.\Protocolo.c **** 							lado3.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 5328              		.loc 1 1140 0
 5329 0cd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5330 0cd4 0C33     		adds	r3, r3, #12
 5331 0cd6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5332 0cd8 0D32     		adds	r2, r2, #13
 5333 0cda 4649     		ldr	r1, .L499
 5334 0cdc 8A5C     		ldrb	r2, [r1, r2]
 5335 0cde D2B2     		uxtb	r2, r2
 5336 0ce0 4649     		ldr	r1, .L499+8
 5337 0ce2 0B44     		add	r3, r3, r1
 5338 0ce4 9A70     		strb	r2, [r3, #2]
1136:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 5339              		.loc 1 1136 0
 5340 0ce6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5341 0ce8 0133     		adds	r3, r3, #1
 5342 0cea FB73     		strb	r3, [r7, #15]
 5343              	.L350:
1136:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 5344              		.loc 1 1136 0 is_stmt 0 discriminator 1
 5345 0cec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5346 0cee 072B     		cmp	r3, #7
 5347 0cf0 E5D9     		bls	.L352
1141:.\Protocolo.c **** 						}
1142:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 5348              		.loc 1 1142 0 is_stmt 1
 5349 0cf2 0023     		movs	r3, #0
 5350 0cf4 FB73     		strb	r3, [r7, #15]
 5351 0cf6 0CE0     		b	.L353
 5352              	.L354:
1143:.\Protocolo.c **** 							lado3.ppu[0][x]=Surtidor_rxBuffer[x+22];
 5353              		.loc 1 1143 0 discriminator 2
 5354 0cf8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5355 0cfa FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5356 0cfc 1632     		adds	r2, r2, #22
 5357 0cfe 3D49     		ldr	r1, .L499
 5358 0d00 8A5C     		ldrb	r2, [r1, r2]
 5359 0d02 D2B2     		uxtb	r2, r2
 5360 0d04 3D49     		ldr	r1, .L499+8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 119


 5361 0d06 0B44     		add	r3, r3, r1
 5362 0d08 83F84A20 		strb	r2, [r3, #74]
1142:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 5363              		.loc 1 1142 0 discriminator 2
 5364 0d0c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5365 0d0e 0133     		adds	r3, r3, #1
 5366 0d10 FB73     		strb	r3, [r7, #15]
 5367              	.L353:
1142:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 5368              		.loc 1 1142 0 is_stmt 0 discriminator 1
 5369 0d12 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5370 0d14 032B     		cmp	r3, #3
 5371 0d16 EFD9     		bls	.L354
1144:.\Protocolo.c **** 						}				
1145:.\Protocolo.c **** 						if(nmangueras==2){
 5372              		.loc 1 1145 0 is_stmt 1
 5373 0d18 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5374 0d1a 022B     		cmp	r3, #2
 5375 0d1c 46D1     		bne	.L355
1146:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5376              		.loc 1 1146 0
 5377 0d1e 0023     		movs	r3, #0
 5378 0d20 FB73     		strb	r3, [r7, #15]
 5379 0d22 0BE0     		b	.L356
 5380              	.L357:
1147:.\Protocolo.c **** 								lado3.totales[1][x]=Surtidor_rxBuffer[x+34];
 5381              		.loc 1 1147 0 discriminator 2
 5382 0d24 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5383 0d26 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5384 0d28 2232     		adds	r2, r2, #34
 5385 0d2a 3249     		ldr	r1, .L499
 5386 0d2c 8A5C     		ldrb	r2, [r1, r2]
 5387 0d2e D2B2     		uxtb	r2, r2
 5388 0d30 3249     		ldr	r1, .L499+8
 5389 0d32 0B44     		add	r3, r3, r1
 5390 0d34 9A76     		strb	r2, [r3, #26]
1146:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5391              		.loc 1 1146 0 discriminator 2
 5392 0d36 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5393 0d38 0133     		adds	r3, r3, #1
 5394 0d3a FB73     		strb	r3, [r7, #15]
 5395              	.L356:
1146:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5396              		.loc 1 1146 0 is_stmt 0 discriminator 1
 5397 0d3c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5398 0d3e 072B     		cmp	r3, #7
 5399 0d40 F0D9     		bls	.L357
1148:.\Protocolo.c **** 							}
1149:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5400              		.loc 1 1149 0 is_stmt 1
 5401 0d42 0023     		movs	r3, #0
 5402 0d44 FB73     		strb	r3, [r7, #15]
 5403 0d46 16E0     		b	.L358
 5404              	.L360:
1150:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 5405              		.loc 1 1150 0
 5406 0d48 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 120


 5407 0d4a 2B33     		adds	r3, r3, #43
 5408 0d4c 294A     		ldr	r2, .L499
 5409 0d4e D35C     		ldrb	r3, [r2, r3]
 5410 0d50 DBB2     		uxtb	r3, r3
 5411 0d52 002B     		cmp	r3, #0
 5412 0d54 02D1     		bne	.L359
1151:.\Protocolo.c ****                                     return 0;
 5413              		.loc 1 1151 0
 5414 0d56 0023     		movs	r3, #0
 5415 0d58 00F017BD 		b	.L199
 5416              	.L359:
1152:.\Protocolo.c ****                                 }                                
1153:.\Protocolo.c **** 								lado3.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 5417              		.loc 1 1153 0
 5418 0d5c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5419 0d5e 0C33     		adds	r3, r3, #12
 5420 0d60 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5421 0d62 2B32     		adds	r2, r2, #43
 5422 0d64 2349     		ldr	r1, .L499
 5423 0d66 8A5C     		ldrb	r2, [r1, r2]
 5424 0d68 D2B2     		uxtb	r2, r2
 5425 0d6a 2449     		ldr	r1, .L499+8
 5426 0d6c 0B44     		add	r3, r3, r1
 5427 0d6e 9A76     		strb	r2, [r3, #26]
1149:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5428              		.loc 1 1149 0
 5429 0d70 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5430 0d72 0133     		adds	r3, r3, #1
 5431 0d74 FB73     		strb	r3, [r7, #15]
 5432              	.L358:
1149:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5433              		.loc 1 1149 0 is_stmt 0 discriminator 1
 5434 0d76 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5435 0d78 072B     		cmp	r3, #7
 5436 0d7a E5D9     		bls	.L360
1154:.\Protocolo.c **** 							}
1155:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 5437              		.loc 1 1155 0 is_stmt 1
 5438 0d7c 0023     		movs	r3, #0
 5439 0d7e FB73     		strb	r3, [r7, #15]
 5440 0d80 0CE0     		b	.L361
 5441              	.L362:
1156:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+52];
 5442              		.loc 1 1156 0 discriminator 2
 5443 0d82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5444 0d84 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5445 0d86 3432     		adds	r2, r2, #52
 5446 0d88 1A49     		ldr	r1, .L499
 5447 0d8a 8A5C     		ldrb	r2, [r1, r2]
 5448 0d8c D2B2     		uxtb	r2, r2
 5449 0d8e 1B49     		ldr	r1, .L499+8
 5450 0d90 0B44     		add	r3, r3, r1
 5451 0d92 83F84F20 		strb	r2, [r3, #79]
1155:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 5452              		.loc 1 1155 0 discriminator 2
 5453 0d96 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5454 0d98 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 121


 5455 0d9a FB73     		strb	r3, [r7, #15]
 5456              	.L361:
1155:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 5457              		.loc 1 1155 0 is_stmt 0 discriminator 1
 5458 0d9c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5459 0d9e 032B     		cmp	r3, #3
 5460 0da0 EFD9     		bls	.L362
1157:.\Protocolo.c **** 							}	
1158:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5461              		.loc 1 1158 0 is_stmt 1
 5462 0da2 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1159:.\Protocolo.c ****     						return 2;                            
 5463              		.loc 1 1159 0
 5464 0da6 0223     		movs	r3, #2
 5465 0da8 00F0EFBC 		b	.L199
 5466              	.L355:
1160:.\Protocolo.c **** 						}
1161:.\Protocolo.c **** 						if(nmangueras==3){
 5467              		.loc 1 1161 0
 5468 0dac BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5469 0dae 032B     		cmp	r3, #3
 5470 0db0 40F09480 		bne	.L363
1162:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5471              		.loc 1 1162 0
 5472 0db4 0023     		movs	r3, #0
 5473 0db6 FB73     		strb	r3, [r7, #15]
 5474 0db8 0BE0     		b	.L364
 5475              	.L365:
1163:.\Protocolo.c **** 								lado3.totales[1][x]=Surtidor_rxBuffer[x+34];
 5476              		.loc 1 1163 0 discriminator 2
 5477 0dba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5478 0dbc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5479 0dbe 2232     		adds	r2, r2, #34
 5480 0dc0 0C49     		ldr	r1, .L499
 5481 0dc2 8A5C     		ldrb	r2, [r1, r2]
 5482 0dc4 D2B2     		uxtb	r2, r2
 5483 0dc6 0D49     		ldr	r1, .L499+8
 5484 0dc8 0B44     		add	r3, r3, r1
 5485 0dca 9A76     		strb	r2, [r3, #26]
1162:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5486              		.loc 1 1162 0 discriminator 2
 5487 0dcc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5488 0dce 0133     		adds	r3, r3, #1
 5489 0dd0 FB73     		strb	r3, [r7, #15]
 5490              	.L364:
1162:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5491              		.loc 1 1162 0 is_stmt 0 discriminator 1
 5492 0dd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5493 0dd4 072B     		cmp	r3, #7
 5494 0dd6 F0D9     		bls	.L365
1164:.\Protocolo.c **** 							}
1165:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5495              		.loc 1 1165 0 is_stmt 1
 5496 0dd8 0023     		movs	r3, #0
 5497 0dda FB73     		strb	r3, [r7, #15]
 5498 0ddc 1FE0     		b	.L366
 5499              	.L368:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 122


1166:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 5500              		.loc 1 1166 0
 5501 0dde FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5502 0de0 2B33     		adds	r3, r3, #43
 5503 0de2 044A     		ldr	r2, .L499
 5504 0de4 D35C     		ldrb	r3, [r2, r3]
 5505 0de6 DBB2     		uxtb	r3, r3
 5506 0de8 002B     		cmp	r3, #0
 5507 0dea 0BD1     		bne	.L367
1167:.\Protocolo.c ****                                     return 0;
 5508              		.loc 1 1167 0
 5509 0dec 0023     		movs	r3, #0
 5510 0dee 00F0CCBC 		b	.L199
 5511              	.L500:
 5512 0df2 00BF     		.align	2
 5513              	.L499:
 5514 0df4 00000000 		.word	Surtidor_rxBuffer
 5515 0df8 00000000 		.word	lado2
 5516 0dfc 00000000 		.word	lado3
 5517 0e00 00000000 		.word	version
 5518              	.L367:
1168:.\Protocolo.c ****                                 }                                 
1169:.\Protocolo.c **** 								lado3.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 5519              		.loc 1 1169 0
 5520 0e04 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5521 0e06 0C33     		adds	r3, r3, #12
 5522 0e08 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5523 0e0a 2B32     		adds	r2, r2, #43
 5524 0e0c B149     		ldr	r1, .L501
 5525 0e0e 8A5C     		ldrb	r2, [r1, r2]
 5526 0e10 D2B2     		uxtb	r2, r2
 5527 0e12 B149     		ldr	r1, .L501+4
 5528 0e14 0B44     		add	r3, r3, r1
 5529 0e16 9A76     		strb	r2, [r3, #26]
1165:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5530              		.loc 1 1165 0
 5531 0e18 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5532 0e1a 0133     		adds	r3, r3, #1
 5533 0e1c FB73     		strb	r3, [r7, #15]
 5534              	.L366:
1165:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5535              		.loc 1 1165 0 is_stmt 0 discriminator 1
 5536 0e1e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5537 0e20 072B     		cmp	r3, #7
 5538 0e22 DCD9     		bls	.L368
1170:.\Protocolo.c **** 							}
1171:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 5539              		.loc 1 1171 0 is_stmt 1
 5540 0e24 0023     		movs	r3, #0
 5541 0e26 FB73     		strb	r3, [r7, #15]
 5542 0e28 0CE0     		b	.L369
 5543              	.L370:
1172:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+52];
 5544              		.loc 1 1172 0 discriminator 2
 5545 0e2a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5546 0e2c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5547 0e2e 3432     		adds	r2, r2, #52
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 123


 5548 0e30 A849     		ldr	r1, .L501
 5549 0e32 8A5C     		ldrb	r2, [r1, r2]
 5550 0e34 D2B2     		uxtb	r2, r2
 5551 0e36 A849     		ldr	r1, .L501+4
 5552 0e38 0B44     		add	r3, r3, r1
 5553 0e3a 83F84F20 		strb	r2, [r3, #79]
1171:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 5554              		.loc 1 1171 0 discriminator 2
 5555 0e3e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5556 0e40 0133     		adds	r3, r3, #1
 5557 0e42 FB73     		strb	r3, [r7, #15]
 5558              	.L369:
1171:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 5559              		.loc 1 1171 0 is_stmt 0 discriminator 1
 5560 0e44 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5561 0e46 032B     		cmp	r3, #3
 5562 0e48 EFD9     		bls	.L370
1173:.\Protocolo.c **** 							}						
1174:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5563              		.loc 1 1174 0 is_stmt 1
 5564 0e4a 0023     		movs	r3, #0
 5565 0e4c FB73     		strb	r3, [r7, #15]
 5566 0e4e 0CE0     		b	.L371
 5567              	.L372:
1175:.\Protocolo.c **** 								lado3.totales[2][x]=Surtidor_rxBuffer[x+64];
 5568              		.loc 1 1175 0 discriminator 2
 5569 0e50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5570 0e52 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5571 0e54 4032     		adds	r2, r2, #64
 5572 0e56 9F49     		ldr	r1, .L501
 5573 0e58 8A5C     		ldrb	r2, [r1, r2]
 5574 0e5a D2B2     		uxtb	r2, r2
 5575 0e5c 9E49     		ldr	r1, .L501+4
 5576 0e5e 0B44     		add	r3, r3, r1
 5577 0e60 83F83220 		strb	r2, [r3, #50]
1174:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5578              		.loc 1 1174 0 discriminator 2
 5579 0e64 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5580 0e66 0133     		adds	r3, r3, #1
 5581 0e68 FB73     		strb	r3, [r7, #15]
 5582              	.L371:
1174:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5583              		.loc 1 1174 0 is_stmt 0 discriminator 1
 5584 0e6a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5585 0e6c 072B     		cmp	r3, #7
 5586 0e6e EFD9     		bls	.L372
1176:.\Protocolo.c **** 							}
1177:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5587              		.loc 1 1177 0 is_stmt 1
 5588 0e70 0023     		movs	r3, #0
 5589 0e72 FB73     		strb	r3, [r7, #15]
 5590 0e74 17E0     		b	.L373
 5591              	.L375:
1178:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 5592              		.loc 1 1178 0
 5593 0e76 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5594 0e78 4933     		adds	r3, r3, #73
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 124


 5595 0e7a 964A     		ldr	r2, .L501
 5596 0e7c D35C     		ldrb	r3, [r2, r3]
 5597 0e7e DBB2     		uxtb	r3, r3
 5598 0e80 002B     		cmp	r3, #0
 5599 0e82 02D1     		bne	.L374
1179:.\Protocolo.c ****                                     return 0;
 5600              		.loc 1 1179 0
 5601 0e84 0023     		movs	r3, #0
 5602 0e86 00F080BC 		b	.L199
 5603              	.L374:
1180:.\Protocolo.c ****                                 }                                 
1181:.\Protocolo.c **** 								lado3.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 5604              		.loc 1 1181 0
 5605 0e8a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5606 0e8c 0C33     		adds	r3, r3, #12
 5607 0e8e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5608 0e90 4932     		adds	r2, r2, #73
 5609 0e92 9049     		ldr	r1, .L501
 5610 0e94 8A5C     		ldrb	r2, [r1, r2]
 5611 0e96 D2B2     		uxtb	r2, r2
 5612 0e98 8F49     		ldr	r1, .L501+4
 5613 0e9a 0B44     		add	r3, r3, r1
 5614 0e9c 83F83220 		strb	r2, [r3, #50]
1177:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5615              		.loc 1 1177 0
 5616 0ea0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5617 0ea2 0133     		adds	r3, r3, #1
 5618 0ea4 FB73     		strb	r3, [r7, #15]
 5619              	.L373:
1177:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5620              		.loc 1 1177 0 is_stmt 0 discriminator 1
 5621 0ea6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5622 0ea8 072B     		cmp	r3, #7
 5623 0eaa E4D9     		bls	.L375
1182:.\Protocolo.c **** 							}
1183:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 5624              		.loc 1 1183 0 is_stmt 1
 5625 0eac 0023     		movs	r3, #0
 5626 0eae FB73     		strb	r3, [r7, #15]
 5627 0eb0 0CE0     		b	.L376
 5628              	.L377:
1184:.\Protocolo.c **** 								lado3.ppu[2][x]=Surtidor_rxBuffer[x+82];
 5629              		.loc 1 1184 0 discriminator 2
 5630 0eb2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5631 0eb4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5632 0eb6 5232     		adds	r2, r2, #82
 5633 0eb8 8649     		ldr	r1, .L501
 5634 0eba 8A5C     		ldrb	r2, [r1, r2]
 5635 0ebc D2B2     		uxtb	r2, r2
 5636 0ebe 8649     		ldr	r1, .L501+4
 5637 0ec0 0B44     		add	r3, r3, r1
 5638 0ec2 83F85420 		strb	r2, [r3, #84]
1183:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 5639              		.loc 1 1183 0 discriminator 2
 5640 0ec6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5641 0ec8 0133     		adds	r3, r3, #1
 5642 0eca FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 125


 5643              	.L376:
1183:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 5644              		.loc 1 1183 0 is_stmt 0 discriminator 1
 5645 0ecc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5646 0ece 032B     		cmp	r3, #3
 5647 0ed0 EFD9     		bls	.L377
1185:.\Protocolo.c **** 							}
1186:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5648              		.loc 1 1186 0 is_stmt 1
 5649 0ed2 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1187:.\Protocolo.c ****     						return 3;                            
 5650              		.loc 1 1187 0
 5651 0ed6 0323     		movs	r3, #3
 5652 0ed8 00F057BC 		b	.L199
 5653              	.L363:
1188:.\Protocolo.c **** 						}
1189:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5654              		.loc 1 1189 0
 5655 0edc FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1190:.\Protocolo.c **** 						return 1;
 5656              		.loc 1 1190 0
 5657 0ee0 0123     		movs	r3, #1
 5658 0ee2 00F052BC 		b	.L199
 5659              	.L343:
1191:.\Protocolo.c **** 					}
1192:.\Protocolo.c **** 					else{
1193:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5660              		.loc 1 1193 0
 5661 0ee6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1194:.\Protocolo.c **** 						return 0;
 5662              		.loc 1 1194 0
 5663 0eea 0023     		movs	r3, #0
 5664 0eec 00F04DBC 		b	.L199
 5665              	.L342:
1195:.\Protocolo.c **** 					}					
1196:.\Protocolo.c **** 				}
1197:.\Protocolo.c **** 				else{
1198:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 5666              		.loc 1 1198 0
 5667 0ef0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1199:.\Protocolo.c **** 					return 0;		
 5668              		.loc 1 1199 0
 5669 0ef4 0023     		movs	r3, #0
 5670 0ef6 00F048BC 		b	.L199
 5671              	.L340:
1200:.\Protocolo.c **** 				}
1201:.\Protocolo.c **** 			}
1202:.\Protocolo.c **** 			else{
1203:.\Protocolo.c **** 				CyDelay(900);
 5672              		.loc 1 1203 0
 5673 0efa 4FF46170 		mov	r0, #900
 5674 0efe FFF7FEFF 		bl	CyDelay
1204:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 5675              		.loc 1 1204 0
 5676 0f02 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 5677 0f06 0346     		mov	r3, r0
 5678 0f08 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 126


1205:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){				
 5679              		.loc 1 1205 0
 5680 0f0a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5681 0f0c 2E2B     		cmp	r3, #46
 5682 0f0e 06D0     		beq	.L378
 5683              		.loc 1 1205 0 is_stmt 0 discriminator 1
 5684 0f10 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5685 0f12 582B     		cmp	r3, #88
 5686 0f14 03D0     		beq	.L378
 5687 0f16 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5688 0f18 822B     		cmp	r3, #130
 5689 0f1a 40F05181 		bne	.L379
 5690              	.L378:
1206:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 5691              		.loc 1 1206 0 is_stmt 1
 5692 0f1e 6D4B     		ldr	r3, .L501
 5693 0f20 1B78     		ldrb	r3, [r3]
 5694 0f22 DBB2     		uxtb	r3, r3
 5695 0f24 FF2B     		cmp	r3, #255
 5696 0f26 40F04781 		bne	.L380
 5697              		.loc 1 1206 0 is_stmt 0 discriminator 1
 5698 0f2a 6A4B     		ldr	r3, .L501
 5699 0f2c 5B78     		ldrb	r3, [r3, #1]
 5700 0f2e DBB2     		uxtb	r3, r3
 5701 0f30 F62B     		cmp	r3, #246
 5702 0f32 40F04181 		bne	.L380
 5703 0f36 674B     		ldr	r3, .L501
 5704 0f38 DB78     		ldrb	r3, [r3, #3]
 5705 0f3a DBB2     		uxtb	r3, r3
 5706 0f3c F92B     		cmp	r3, #249
 5707 0f3e 40F03B81 		bne	.L380
1207:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 5708              		.loc 1 1207 0 is_stmt 1
 5709 0f42 0023     		movs	r3, #0
 5710 0f44 BB73     		strb	r3, [r7, #14]
 5711 0f46 16E0     		b	.L381
 5712              	.L384:
1208:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 5713              		.loc 1 1208 0
 5714 0f48 0023     		movs	r3, #0
 5715 0f4a FB73     		strb	r3, [r7, #15]
 5716 0f4c 0DE0     		b	.L382
 5717              	.L383:
1209:.\Protocolo.c ****                     			lado3.totales[y][x]=0;
 5718              		.loc 1 1209 0 discriminator 2
 5719 0f4e BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 5720 0f50 F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 5721 0f52 6149     		ldr	r1, .L501+4
 5722 0f54 1346     		mov	r3, r2
 5723 0f56 5B00     		lsls	r3, r3, #1
 5724 0f58 1344     		add	r3, r3, r2
 5725 0f5a DB00     		lsls	r3, r3, #3
 5726 0f5c 0344     		add	r3, r3, r0
 5727 0f5e 0B44     		add	r3, r3, r1
 5728 0f60 0022     		movs	r2, #0
 5729 0f62 9A70     		strb	r2, [r3, #2]
1208:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 127


 5730              		.loc 1 1208 0 discriminator 2
 5731 0f64 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5732 0f66 0133     		adds	r3, r3, #1
 5733 0f68 FB73     		strb	r3, [r7, #15]
 5734              	.L382:
1208:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 5735              		.loc 1 1208 0 is_stmt 0 discriminator 1
 5736 0f6a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5737 0f6c 172B     		cmp	r3, #23
 5738 0f6e EED9     		bls	.L383
1207:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 5739              		.loc 1 1207 0 is_stmt 1
 5740 0f70 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 5741 0f72 0133     		adds	r3, r3, #1
 5742 0f74 BB73     		strb	r3, [r7, #14]
 5743              	.L381:
1207:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 5744              		.loc 1 1207 0 is_stmt 0 discriminator 1
 5745 0f76 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 5746 0f78 022B     		cmp	r3, #2
 5747 0f7a E5D9     		bls	.L384
1210:.\Protocolo.c ****                     		}
1211:.\Protocolo.c ****                     	}                        
1212:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 5748              		.loc 1 1212 0 is_stmt 1
 5749 0f7c 0023     		movs	r3, #0
 5750 0f7e FB73     		strb	r3, [r7, #15]
 5751 0f80 0BE0     		b	.L385
 5752              	.L386:
1213:.\Protocolo.c **** 							lado3.totales[0][x]=Surtidor_rxBuffer[x+4];
 5753              		.loc 1 1213 0 discriminator 2
 5754 0f82 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5755 0f84 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5756 0f86 0432     		adds	r2, r2, #4
 5757 0f88 5249     		ldr	r1, .L501
 5758 0f8a 8A5C     		ldrb	r2, [r1, r2]
 5759 0f8c D2B2     		uxtb	r2, r2
 5760 0f8e 5249     		ldr	r1, .L501+4
 5761 0f90 0B44     		add	r3, r3, r1
 5762 0f92 9A70     		strb	r2, [r3, #2]
1212:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 5763              		.loc 1 1212 0 discriminator 2
 5764 0f94 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5765 0f96 0133     		adds	r3, r3, #1
 5766 0f98 FB73     		strb	r3, [r7, #15]
 5767              	.L385:
1212:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 5768              		.loc 1 1212 0 is_stmt 0 discriminator 1
 5769 0f9a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5770 0f9c 0B2B     		cmp	r3, #11
 5771 0f9e F0D9     		bls	.L386
1214:.\Protocolo.c **** 						}
1215:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 5772              		.loc 1 1215 0 is_stmt 1
 5773 0fa0 0023     		movs	r3, #0
 5774 0fa2 FB73     		strb	r3, [r7, #15]
 5775 0fa4 15E0     		b	.L387
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 128


 5776              	.L389:
1216:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 5777              		.loc 1 1216 0
 5778 0fa6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5779 0fa8 1133     		adds	r3, r3, #17
 5780 0faa 4A4A     		ldr	r2, .L501
 5781 0fac D35C     		ldrb	r3, [r2, r3]
 5782 0fae DBB2     		uxtb	r3, r3
 5783 0fb0 002B     		cmp	r3, #0
 5784 0fb2 01D1     		bne	.L388
1217:.\Protocolo.c ****                                 return 0;
 5785              		.loc 1 1217 0
 5786 0fb4 0023     		movs	r3, #0
 5787 0fb6 E8E3     		b	.L199
 5788              	.L388:
1218:.\Protocolo.c ****                             }                             
1219:.\Protocolo.c **** 							lado3.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 5789              		.loc 1 1219 0
 5790 0fb8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5791 0fba 0C33     		adds	r3, r3, #12
 5792 0fbc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5793 0fbe 1132     		adds	r2, r2, #17
 5794 0fc0 4449     		ldr	r1, .L501
 5795 0fc2 8A5C     		ldrb	r2, [r1, r2]
 5796 0fc4 D2B2     		uxtb	r2, r2
 5797 0fc6 4449     		ldr	r1, .L501+4
 5798 0fc8 0B44     		add	r3, r3, r1
 5799 0fca 9A70     		strb	r2, [r3, #2]
1215:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 5800              		.loc 1 1215 0
 5801 0fcc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5802 0fce 0133     		adds	r3, r3, #1
 5803 0fd0 FB73     		strb	r3, [r7, #15]
 5804              	.L387:
1215:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 5805              		.loc 1 1215 0 is_stmt 0 discriminator 1
 5806 0fd2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5807 0fd4 0B2B     		cmp	r3, #11
 5808 0fd6 E6D9     		bls	.L389
1220:.\Protocolo.c **** 						}
1221:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 5809              		.loc 1 1221 0 is_stmt 1
 5810 0fd8 0023     		movs	r3, #0
 5811 0fda FB73     		strb	r3, [r7, #15]
 5812 0fdc 0CE0     		b	.L390
 5813              	.L391:
1222:.\Protocolo.c **** 							lado3.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5814              		.loc 1 1222 0 discriminator 2
 5815 0fde FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5816 0fe0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5817 0fe2 1E32     		adds	r2, r2, #30
 5818 0fe4 3B49     		ldr	r1, .L501
 5819 0fe6 8A5C     		ldrb	r2, [r1, r2]
 5820 0fe8 D2B2     		uxtb	r2, r2
 5821 0fea 3B49     		ldr	r1, .L501+4
 5822 0fec 0B44     		add	r3, r3, r1
 5823 0fee 83F84A20 		strb	r2, [r3, #74]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 129


1221:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 5824              		.loc 1 1221 0 discriminator 2
 5825 0ff2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5826 0ff4 0133     		adds	r3, r3, #1
 5827 0ff6 FB73     		strb	r3, [r7, #15]
 5828              	.L390:
1221:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 5829              		.loc 1 1221 0 is_stmt 0 discriminator 1
 5830 0ff8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5831 0ffa 042B     		cmp	r3, #4
 5832 0ffc EFD9     		bls	.L391
1223:.\Protocolo.c **** 						}				
1224:.\Protocolo.c **** 						if(nmangueras==2){
 5833              		.loc 1 1224 0 is_stmt 1
 5834 0ffe BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5835 1000 022B     		cmp	r3, #2
 5836 1002 44D1     		bne	.L392
1225:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5837              		.loc 1 1225 0
 5838 1004 0023     		movs	r3, #0
 5839 1006 FB73     		strb	r3, [r7, #15]
 5840 1008 0BE0     		b	.L393
 5841              	.L394:
1226:.\Protocolo.c **** 								lado3.totales[1][x]=Surtidor_rxBuffer[x+46];
 5842              		.loc 1 1226 0 discriminator 2
 5843 100a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5844 100c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5845 100e 2E32     		adds	r2, r2, #46
 5846 1010 3049     		ldr	r1, .L501
 5847 1012 8A5C     		ldrb	r2, [r1, r2]
 5848 1014 D2B2     		uxtb	r2, r2
 5849 1016 3049     		ldr	r1, .L501+4
 5850 1018 0B44     		add	r3, r3, r1
 5851 101a 9A76     		strb	r2, [r3, #26]
1225:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5852              		.loc 1 1225 0 discriminator 2
 5853 101c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5854 101e 0133     		adds	r3, r3, #1
 5855 1020 FB73     		strb	r3, [r7, #15]
 5856              	.L393:
1225:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5857              		.loc 1 1225 0 is_stmt 0 discriminator 1
 5858 1022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5859 1024 0B2B     		cmp	r3, #11
 5860 1026 F0D9     		bls	.L394
1227:.\Protocolo.c **** 							}
1228:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5861              		.loc 1 1228 0 is_stmt 1
 5862 1028 0023     		movs	r3, #0
 5863 102a FB73     		strb	r3, [r7, #15]
 5864 102c 15E0     		b	.L395
 5865              	.L397:
1229:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 5866              		.loc 1 1229 0
 5867 102e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5868 1030 3B33     		adds	r3, r3, #59
 5869 1032 284A     		ldr	r2, .L501
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 130


 5870 1034 D35C     		ldrb	r3, [r2, r3]
 5871 1036 DBB2     		uxtb	r3, r3
 5872 1038 002B     		cmp	r3, #0
 5873 103a 01D1     		bne	.L396
1230:.\Protocolo.c ****                                     return 0;
 5874              		.loc 1 1230 0
 5875 103c 0023     		movs	r3, #0
 5876 103e A4E3     		b	.L199
 5877              	.L396:
1231:.\Protocolo.c ****                                 }                                 
1232:.\Protocolo.c **** 								lado3.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5878              		.loc 1 1232 0
 5879 1040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5880 1042 0C33     		adds	r3, r3, #12
 5881 1044 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5882 1046 3B32     		adds	r2, r2, #59
 5883 1048 2249     		ldr	r1, .L501
 5884 104a 8A5C     		ldrb	r2, [r1, r2]
 5885 104c D2B2     		uxtb	r2, r2
 5886 104e 2249     		ldr	r1, .L501+4
 5887 1050 0B44     		add	r3, r3, r1
 5888 1052 9A76     		strb	r2, [r3, #26]
1228:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5889              		.loc 1 1228 0
 5890 1054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5891 1056 0133     		adds	r3, r3, #1
 5892 1058 FB73     		strb	r3, [r7, #15]
 5893              	.L395:
1228:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5894              		.loc 1 1228 0 is_stmt 0 discriminator 1
 5895 105a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5896 105c 0B2B     		cmp	r3, #11
 5897 105e E6D9     		bls	.L397
1233:.\Protocolo.c **** 							}
1234:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5898              		.loc 1 1234 0 is_stmt 1
 5899 1060 0023     		movs	r3, #0
 5900 1062 FB73     		strb	r3, [r7, #15]
 5901 1064 0CE0     		b	.L398
 5902              	.L399:
1235:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5903              		.loc 1 1235 0 discriminator 2
 5904 1066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5905 1068 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5906 106a 4832     		adds	r2, r2, #72
 5907 106c 1949     		ldr	r1, .L501
 5908 106e 8A5C     		ldrb	r2, [r1, r2]
 5909 1070 D2B2     		uxtb	r2, r2
 5910 1072 1949     		ldr	r1, .L501+4
 5911 1074 0B44     		add	r3, r3, r1
 5912 1076 83F84F20 		strb	r2, [r3, #79]
1234:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5913              		.loc 1 1234 0 discriminator 2
 5914 107a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5915 107c 0133     		adds	r3, r3, #1
 5916 107e FB73     		strb	r3, [r7, #15]
 5917              	.L398:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 131


1234:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5918              		.loc 1 1234 0 is_stmt 0 discriminator 1
 5919 1080 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5920 1082 042B     		cmp	r3, #4
 5921 1084 EFD9     		bls	.L399
1236:.\Protocolo.c **** 							}
1237:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5922              		.loc 1 1237 0 is_stmt 1
 5923 1086 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1238:.\Protocolo.c ****     						return 2;                            
 5924              		.loc 1 1238 0
 5925 108a 0223     		movs	r3, #2
 5926 108c 7DE3     		b	.L199
 5927              	.L392:
1239:.\Protocolo.c **** 						}
1240:.\Protocolo.c **** 						if(nmangueras==3){
 5928              		.loc 1 1240 0
 5929 108e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5930 1090 032B     		cmp	r3, #3
 5931 1092 40F08D80 		bne	.L400
1241:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5932              		.loc 1 1241 0
 5933 1096 0023     		movs	r3, #0
 5934 1098 FB73     		strb	r3, [r7, #15]
 5935 109a 0BE0     		b	.L401
 5936              	.L402:
1242:.\Protocolo.c **** 								lado3.totales[1][x]=Surtidor_rxBuffer[x+46];
 5937              		.loc 1 1242 0 discriminator 2
 5938 109c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5939 109e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5940 10a0 2E32     		adds	r2, r2, #46
 5941 10a2 0C49     		ldr	r1, .L501
 5942 10a4 8A5C     		ldrb	r2, [r1, r2]
 5943 10a6 D2B2     		uxtb	r2, r2
 5944 10a8 0B49     		ldr	r1, .L501+4
 5945 10aa 0B44     		add	r3, r3, r1
 5946 10ac 9A76     		strb	r2, [r3, #26]
1241:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5947              		.loc 1 1241 0 discriminator 2
 5948 10ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5949 10b0 0133     		adds	r3, r3, #1
 5950 10b2 FB73     		strb	r3, [r7, #15]
 5951              	.L401:
1241:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5952              		.loc 1 1241 0 is_stmt 0 discriminator 1
 5953 10b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5954 10b6 0B2B     		cmp	r3, #11
 5955 10b8 F0D9     		bls	.L402
1243:.\Protocolo.c **** 							}
1244:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5956              		.loc 1 1244 0 is_stmt 1
 5957 10ba 0023     		movs	r3, #0
 5958 10bc FB73     		strb	r3, [r7, #15]
 5959 10be 1AE0     		b	.L403
 5960              	.L405:
1245:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 5961              		.loc 1 1245 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 132


 5962 10c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5963 10c2 3B33     		adds	r3, r3, #59
 5964 10c4 034A     		ldr	r2, .L501
 5965 10c6 D35C     		ldrb	r3, [r2, r3]
 5966 10c8 DBB2     		uxtb	r3, r3
 5967 10ca 002B     		cmp	r3, #0
 5968 10cc 06D1     		bne	.L404
1246:.\Protocolo.c ****                                     return 0;
 5969              		.loc 1 1246 0
 5970 10ce 0023     		movs	r3, #0
 5971 10d0 5BE3     		b	.L199
 5972              	.L502:
 5973 10d2 00BF     		.align	2
 5974              	.L501:
 5975 10d4 00000000 		.word	Surtidor_rxBuffer
 5976 10d8 00000000 		.word	lado3
 5977              	.L404:
1247:.\Protocolo.c ****                                 }                                 
1248:.\Protocolo.c **** 								lado3.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5978              		.loc 1 1248 0
 5979 10dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5980 10de 0C33     		adds	r3, r3, #12
 5981 10e0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5982 10e2 3B32     		adds	r2, r2, #59
 5983 10e4 A749     		ldr	r1, .L503
 5984 10e6 8A5C     		ldrb	r2, [r1, r2]
 5985 10e8 D2B2     		uxtb	r2, r2
 5986 10ea A749     		ldr	r1, .L503+4
 5987 10ec 0B44     		add	r3, r3, r1
 5988 10ee 9A76     		strb	r2, [r3, #26]
1244:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5989              		.loc 1 1244 0
 5990 10f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5991 10f2 0133     		adds	r3, r3, #1
 5992 10f4 FB73     		strb	r3, [r7, #15]
 5993              	.L403:
1244:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5994              		.loc 1 1244 0 is_stmt 0 discriminator 1
 5995 10f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5996 10f8 0B2B     		cmp	r3, #11
 5997 10fa E1D9     		bls	.L405
1249:.\Protocolo.c **** 							}
1250:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5998              		.loc 1 1250 0 is_stmt 1
 5999 10fc 0023     		movs	r3, #0
 6000 10fe FB73     		strb	r3, [r7, #15]
 6001 1100 0CE0     		b	.L406
 6002              	.L407:
1251:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+72];
 6003              		.loc 1 1251 0 discriminator 2
 6004 1102 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6005 1104 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6006 1106 4832     		adds	r2, r2, #72
 6007 1108 9E49     		ldr	r1, .L503
 6008 110a 8A5C     		ldrb	r2, [r1, r2]
 6009 110c D2B2     		uxtb	r2, r2
 6010 110e 9E49     		ldr	r1, .L503+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 133


 6011 1110 0B44     		add	r3, r3, r1
 6012 1112 83F84F20 		strb	r2, [r3, #79]
1250:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6013              		.loc 1 1250 0 discriminator 2
 6014 1116 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6015 1118 0133     		adds	r3, r3, #1
 6016 111a FB73     		strb	r3, [r7, #15]
 6017              	.L406:
1250:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6018              		.loc 1 1250 0 is_stmt 0 discriminator 1
 6019 111c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6020 111e 042B     		cmp	r3, #4
 6021 1120 EFD9     		bls	.L407
1252:.\Protocolo.c **** 							}					
1253:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6022              		.loc 1 1253 0 is_stmt 1
 6023 1122 0023     		movs	r3, #0
 6024 1124 FB73     		strb	r3, [r7, #15]
 6025 1126 0CE0     		b	.L408
 6026              	.L409:
1254:.\Protocolo.c **** 								lado3.totales[2][x]=Surtidor_rxBuffer[x+88];
 6027              		.loc 1 1254 0 discriminator 2
 6028 1128 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6029 112a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6030 112c 5832     		adds	r2, r2, #88
 6031 112e 9549     		ldr	r1, .L503
 6032 1130 8A5C     		ldrb	r2, [r1, r2]
 6033 1132 D2B2     		uxtb	r2, r2
 6034 1134 9449     		ldr	r1, .L503+4
 6035 1136 0B44     		add	r3, r3, r1
 6036 1138 83F83220 		strb	r2, [r3, #50]
1253:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6037              		.loc 1 1253 0 discriminator 2
 6038 113c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6039 113e 0133     		adds	r3, r3, #1
 6040 1140 FB73     		strb	r3, [r7, #15]
 6041              	.L408:
1253:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6042              		.loc 1 1253 0 is_stmt 0 discriminator 1
 6043 1142 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6044 1144 0B2B     		cmp	r3, #11
 6045 1146 EFD9     		bls	.L409
1255:.\Protocolo.c **** 							}
1256:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6046              		.loc 1 1256 0 is_stmt 1
 6047 1148 0023     		movs	r3, #0
 6048 114a FB73     		strb	r3, [r7, #15]
 6049 114c 16E0     		b	.L410
 6050              	.L412:
1257:.\Protocolo.c ****                                  if(Surtidor_rxBuffer[x+101]==0){
 6051              		.loc 1 1257 0
 6052 114e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6053 1150 6533     		adds	r3, r3, #101
 6054 1152 8C4A     		ldr	r2, .L503
 6055 1154 D35C     		ldrb	r3, [r2, r3]
 6056 1156 DBB2     		uxtb	r3, r3
 6057 1158 002B     		cmp	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 134


 6058 115a 01D1     		bne	.L411
1258:.\Protocolo.c ****                                     return 0;
 6059              		.loc 1 1258 0
 6060 115c 0023     		movs	r3, #0
 6061 115e 14E3     		b	.L199
 6062              	.L411:
1259:.\Protocolo.c ****                                 }                                
1260:.\Protocolo.c **** 								lado3.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 6063              		.loc 1 1260 0
 6064 1160 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6065 1162 0C33     		adds	r3, r3, #12
 6066 1164 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6067 1166 6532     		adds	r2, r2, #101
 6068 1168 8649     		ldr	r1, .L503
 6069 116a 8A5C     		ldrb	r2, [r1, r2]
 6070 116c D2B2     		uxtb	r2, r2
 6071 116e 8649     		ldr	r1, .L503+4
 6072 1170 0B44     		add	r3, r3, r1
 6073 1172 83F83220 		strb	r2, [r3, #50]
1256:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6074              		.loc 1 1256 0
 6075 1176 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6076 1178 0133     		adds	r3, r3, #1
 6077 117a FB73     		strb	r3, [r7, #15]
 6078              	.L410:
1256:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6079              		.loc 1 1256 0 is_stmt 0 discriminator 1
 6080 117c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6081 117e 0B2B     		cmp	r3, #11
 6082 1180 E5D9     		bls	.L412
1261:.\Protocolo.c **** 							}
1262:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6083              		.loc 1 1262 0 is_stmt 1
 6084 1182 0023     		movs	r3, #0
 6085 1184 FB73     		strb	r3, [r7, #15]
 6086 1186 0CE0     		b	.L413
 6087              	.L414:
1263:.\Protocolo.c **** 								lado3.ppu[2][x]=Surtidor_rxBuffer[x+114];
 6088              		.loc 1 1263 0 discriminator 2
 6089 1188 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6090 118a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6091 118c 7232     		adds	r2, r2, #114
 6092 118e 7D49     		ldr	r1, .L503
 6093 1190 8A5C     		ldrb	r2, [r1, r2]
 6094 1192 D2B2     		uxtb	r2, r2
 6095 1194 7C49     		ldr	r1, .L503+4
 6096 1196 0B44     		add	r3, r3, r1
 6097 1198 83F85420 		strb	r2, [r3, #84]
1262:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6098              		.loc 1 1262 0 discriminator 2
 6099 119c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6100 119e 0133     		adds	r3, r3, #1
 6101 11a0 FB73     		strb	r3, [r7, #15]
 6102              	.L413:
1262:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6103              		.loc 1 1262 0 is_stmt 0 discriminator 1
 6104 11a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 135


 6105 11a4 042B     		cmp	r3, #4
 6106 11a6 EFD9     		bls	.L414
1264:.\Protocolo.c **** 							}
1265:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 6107              		.loc 1 1265 0 is_stmt 1
 6108 11a8 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1266:.\Protocolo.c ****     						return 3;                            
 6109              		.loc 1 1266 0
 6110 11ac 0323     		movs	r3, #3
 6111 11ae ECE2     		b	.L199
 6112              	.L400:
1267:.\Protocolo.c **** 						}
1268:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 6113              		.loc 1 1268 0
 6114 11b0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1269:.\Protocolo.c **** 						return 1;			
 6115              		.loc 1 1269 0
 6116 11b4 0123     		movs	r3, #1
 6117 11b6 E8E2     		b	.L199
 6118              	.L380:
1270:.\Protocolo.c **** 					}
1271:.\Protocolo.c **** 					else{
1272:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 6119              		.loc 1 1272 0
 6120 11b8 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1273:.\Protocolo.c **** 						return 0;					
 6121              		.loc 1 1273 0
 6122 11bc 0023     		movs	r3, #0
 6123 11be E4E2     		b	.L199
 6124              	.L379:
1274:.\Protocolo.c **** 					}
1275:.\Protocolo.c **** 				}
1276:.\Protocolo.c **** 				else{
1277:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 6125              		.loc 1 1277 0
 6126 11c0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1278:.\Protocolo.c **** 					return 0;		
 6127              		.loc 1 1278 0
 6128 11c4 0023     		movs	r3, #0
 6129 11c6 E0E2     		b	.L199
 6130              	.L339:
1279:.\Protocolo.c **** 				}	
1280:.\Protocolo.c **** 			}
1281:.\Protocolo.c **** 		}
1282:.\Protocolo.c **** 		else if(dir==lado4.dir){
 6131              		.loc 1 1282 0
 6132 11c8 704B     		ldr	r3, .L503+8
 6133 11ca 1B78     		ldrb	r3, [r3]
 6134 11cc DBB2     		uxtb	r3, r3
 6135 11ce FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6136 11d0 9A42     		cmp	r2, r3
 6137 11d2 40F0D782 		bne	.L415
1283:.\Protocolo.c **** 			if(version[1]!=7){
 6138              		.loc 1 1283 0
 6139 11d6 6E4B     		ldr	r3, .L503+12
 6140 11d8 5B78     		ldrb	r3, [r3, #1]
 6141 11da DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 136


 6142 11dc 072B     		cmp	r3, #7
 6143 11de 00F06A81 		beq	.L416
1284:.\Protocolo.c **** 				CyDelay(900);
 6144              		.loc 1 1284 0
 6145 11e2 4FF46170 		mov	r0, #900
 6146 11e6 FFF7FEFF 		bl	CyDelay
1285:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 6147              		.loc 1 1285 0
 6148 11ea FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 6149 11ee 0346     		mov	r3, r0
 6150 11f0 FB73     		strb	r3, [r7, #15]
1286:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 6151              		.loc 1 1286 0
 6152 11f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6153 11f4 222B     		cmp	r3, #34
 6154 11f6 06D0     		beq	.L417
 6155              		.loc 1 1286 0 is_stmt 0 discriminator 1
 6156 11f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6157 11fa 402B     		cmp	r3, #64
 6158 11fc 03D0     		beq	.L417
 6159 11fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6160 1200 5E2B     		cmp	r3, #94
 6161 1202 40F05481 		bne	.L418
 6162              	.L417:
1287:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 6163              		.loc 1 1287 0 is_stmt 1
 6164 1206 5F4B     		ldr	r3, .L503
 6165 1208 1B78     		ldrb	r3, [r3]
 6166 120a DBB2     		uxtb	r3, r3
 6167 120c FF2B     		cmp	r3, #255
 6168 120e 40F04A81 		bne	.L419
 6169              		.loc 1 1287 0 is_stmt 0 discriminator 1
 6170 1212 5C4B     		ldr	r3, .L503
 6171 1214 5B78     		ldrb	r3, [r3, #1]
 6172 1216 DBB2     		uxtb	r3, r3
 6173 1218 F62B     		cmp	r3, #246
 6174 121a 40F04481 		bne	.L419
 6175 121e 594B     		ldr	r3, .L503
 6176 1220 DB78     		ldrb	r3, [r3, #3]
 6177 1222 DBB2     		uxtb	r3, r3
 6178 1224 F92B     		cmp	r3, #249
 6179 1226 40F03E81 		bne	.L419
1288:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 6180              		.loc 1 1288 0 is_stmt 1
 6181 122a 0023     		movs	r3, #0
 6182 122c BB73     		strb	r3, [r7, #14]
 6183 122e 16E0     		b	.L420
 6184              	.L423:
1289:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 6185              		.loc 1 1289 0
 6186 1230 0023     		movs	r3, #0
 6187 1232 FB73     		strb	r3, [r7, #15]
 6188 1234 0DE0     		b	.L421
 6189              	.L422:
1290:.\Protocolo.c ****                     			lado4.totales[y][x]=0;
 6190              		.loc 1 1290 0 discriminator 2
 6191 1236 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 137


 6192 1238 F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 6193 123a 5449     		ldr	r1, .L503+8
 6194 123c 1346     		mov	r3, r2
 6195 123e 5B00     		lsls	r3, r3, #1
 6196 1240 1344     		add	r3, r3, r2
 6197 1242 DB00     		lsls	r3, r3, #3
 6198 1244 0344     		add	r3, r3, r0
 6199 1246 0B44     		add	r3, r3, r1
 6200 1248 0022     		movs	r2, #0
 6201 124a 9A70     		strb	r2, [r3, #2]
1289:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 6202              		.loc 1 1289 0 discriminator 2
 6203 124c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6204 124e 0133     		adds	r3, r3, #1
 6205 1250 FB73     		strb	r3, [r7, #15]
 6206              	.L421:
1289:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 6207              		.loc 1 1289 0 is_stmt 0 discriminator 1
 6208 1252 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6209 1254 172B     		cmp	r3, #23
 6210 1256 EED9     		bls	.L422
1288:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 6211              		.loc 1 1288 0 is_stmt 1
 6212 1258 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 6213 125a 0133     		adds	r3, r3, #1
 6214 125c BB73     		strb	r3, [r7, #14]
 6215              	.L420:
1288:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 6216              		.loc 1 1288 0 is_stmt 0 discriminator 1
 6217 125e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 6218 1260 022B     		cmp	r3, #2
 6219 1262 E5D9     		bls	.L423
1291:.\Protocolo.c ****                     		}
1292:.\Protocolo.c ****                     	}                        
1293:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 6220              		.loc 1 1293 0 is_stmt 1
 6221 1264 0023     		movs	r3, #0
 6222 1266 FB73     		strb	r3, [r7, #15]
 6223 1268 0BE0     		b	.L424
 6224              	.L425:
1294:.\Protocolo.c **** 							lado4.totales[0][x]=Surtidor_rxBuffer[x+4]; 
 6225              		.loc 1 1294 0 discriminator 2
 6226 126a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6227 126c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6228 126e 0432     		adds	r2, r2, #4
 6229 1270 4449     		ldr	r1, .L503
 6230 1272 8A5C     		ldrb	r2, [r1, r2]
 6231 1274 D2B2     		uxtb	r2, r2
 6232 1276 4549     		ldr	r1, .L503+8
 6233 1278 0B44     		add	r3, r3, r1
 6234 127a 9A70     		strb	r2, [r3, #2]
1293:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 6235              		.loc 1 1293 0 discriminator 2
 6236 127c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6237 127e 0133     		adds	r3, r3, #1
 6238 1280 FB73     		strb	r3, [r7, #15]
 6239              	.L424:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 138


1293:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 6240              		.loc 1 1293 0 is_stmt 0 discriminator 1
 6241 1282 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6242 1284 072B     		cmp	r3, #7
 6243 1286 F0D9     		bls	.L425
1295:.\Protocolo.c **** 						}
1296:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 6244              		.loc 1 1296 0 is_stmt 1
 6245 1288 0023     		movs	r3, #0
 6246 128a FB73     		strb	r3, [r7, #15]
 6247 128c 15E0     		b	.L426
 6248              	.L428:
1297:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 6249              		.loc 1 1297 0
 6250 128e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6251 1290 0D33     		adds	r3, r3, #13
 6252 1292 3C4A     		ldr	r2, .L503
 6253 1294 D35C     		ldrb	r3, [r2, r3]
 6254 1296 DBB2     		uxtb	r3, r3
 6255 1298 002B     		cmp	r3, #0
 6256 129a 01D1     		bne	.L427
1298:.\Protocolo.c ****                                 return 0;
 6257              		.loc 1 1298 0
 6258 129c 0023     		movs	r3, #0
 6259 129e 74E2     		b	.L199
 6260              	.L427:
1299:.\Protocolo.c ****                             }
1300:.\Protocolo.c **** 							lado4.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 6261              		.loc 1 1300 0
 6262 12a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6263 12a2 0C33     		adds	r3, r3, #12
 6264 12a4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6265 12a6 0D32     		adds	r2, r2, #13
 6266 12a8 3649     		ldr	r1, .L503
 6267 12aa 8A5C     		ldrb	r2, [r1, r2]
 6268 12ac D2B2     		uxtb	r2, r2
 6269 12ae 3749     		ldr	r1, .L503+8
 6270 12b0 0B44     		add	r3, r3, r1
 6271 12b2 9A70     		strb	r2, [r3, #2]
1296:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 6272              		.loc 1 1296 0
 6273 12b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6274 12b6 0133     		adds	r3, r3, #1
 6275 12b8 FB73     		strb	r3, [r7, #15]
 6276              	.L426:
1296:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 6277              		.loc 1 1296 0 is_stmt 0 discriminator 1
 6278 12ba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6279 12bc 072B     		cmp	r3, #7
 6280 12be E6D9     		bls	.L428
1301:.\Protocolo.c **** 						}
1302:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 6281              		.loc 1 1302 0 is_stmt 1
 6282 12c0 0023     		movs	r3, #0
 6283 12c2 FB73     		strb	r3, [r7, #15]
 6284 12c4 0CE0     		b	.L429
 6285              	.L430:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 139


1303:.\Protocolo.c **** 							lado4.ppu[0][x]=Surtidor_rxBuffer[x+22];
 6286              		.loc 1 1303 0 discriminator 2
 6287 12c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6288 12c8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6289 12ca 1632     		adds	r2, r2, #22
 6290 12cc 2D49     		ldr	r1, .L503
 6291 12ce 8A5C     		ldrb	r2, [r1, r2]
 6292 12d0 D2B2     		uxtb	r2, r2
 6293 12d2 2E49     		ldr	r1, .L503+8
 6294 12d4 0B44     		add	r3, r3, r1
 6295 12d6 83F84A20 		strb	r2, [r3, #74]
1302:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 6296              		.loc 1 1302 0 discriminator 2
 6297 12da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6298 12dc 0133     		adds	r3, r3, #1
 6299 12de FB73     		strb	r3, [r7, #15]
 6300              	.L429:
1302:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 6301              		.loc 1 1302 0 is_stmt 0 discriminator 1
 6302 12e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6303 12e2 032B     		cmp	r3, #3
 6304 12e4 EFD9     		bls	.L430
1304:.\Protocolo.c **** 						}				
1305:.\Protocolo.c **** 						if(nmangueras==2){
 6305              		.loc 1 1305 0 is_stmt 1
 6306 12e6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6307 12e8 022B     		cmp	r3, #2
 6308 12ea 44D1     		bne	.L431
1306:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6309              		.loc 1 1306 0
 6310 12ec 0023     		movs	r3, #0
 6311 12ee FB73     		strb	r3, [r7, #15]
 6312 12f0 0BE0     		b	.L432
 6313              	.L433:
1307:.\Protocolo.c **** 								lado4.totales[1][x]=Surtidor_rxBuffer[x+34];
 6314              		.loc 1 1307 0 discriminator 2
 6315 12f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6316 12f4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6317 12f6 2232     		adds	r2, r2, #34
 6318 12f8 2249     		ldr	r1, .L503
 6319 12fa 8A5C     		ldrb	r2, [r1, r2]
 6320 12fc D2B2     		uxtb	r2, r2
 6321 12fe 2349     		ldr	r1, .L503+8
 6322 1300 0B44     		add	r3, r3, r1
 6323 1302 9A76     		strb	r2, [r3, #26]
1306:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6324              		.loc 1 1306 0 discriminator 2
 6325 1304 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6326 1306 0133     		adds	r3, r3, #1
 6327 1308 FB73     		strb	r3, [r7, #15]
 6328              	.L432:
1306:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6329              		.loc 1 1306 0 is_stmt 0 discriminator 1
 6330 130a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6331 130c 072B     		cmp	r3, #7
 6332 130e F0D9     		bls	.L433
1308:.\Protocolo.c **** 							}
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 140


1309:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6333              		.loc 1 1309 0 is_stmt 1
 6334 1310 0023     		movs	r3, #0
 6335 1312 FB73     		strb	r3, [r7, #15]
 6336 1314 15E0     		b	.L434
 6337              	.L436:
1310:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 6338              		.loc 1 1310 0
 6339 1316 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6340 1318 2B33     		adds	r3, r3, #43
 6341 131a 1A4A     		ldr	r2, .L503
 6342 131c D35C     		ldrb	r3, [r2, r3]
 6343 131e DBB2     		uxtb	r3, r3
 6344 1320 002B     		cmp	r3, #0
 6345 1322 01D1     		bne	.L435
1311:.\Protocolo.c ****                                     return 0;
 6346              		.loc 1 1311 0
 6347 1324 0023     		movs	r3, #0
 6348 1326 30E2     		b	.L199
 6349              	.L435:
1312:.\Protocolo.c ****                                 }                                
1313:.\Protocolo.c **** 								lado4.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 6350              		.loc 1 1313 0
 6351 1328 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6352 132a 0C33     		adds	r3, r3, #12
 6353 132c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6354 132e 2B32     		adds	r2, r2, #43
 6355 1330 1449     		ldr	r1, .L503
 6356 1332 8A5C     		ldrb	r2, [r1, r2]
 6357 1334 D2B2     		uxtb	r2, r2
 6358 1336 1549     		ldr	r1, .L503+8
 6359 1338 0B44     		add	r3, r3, r1
 6360 133a 9A76     		strb	r2, [r3, #26]
1309:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6361              		.loc 1 1309 0
 6362 133c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6363 133e 0133     		adds	r3, r3, #1
 6364 1340 FB73     		strb	r3, [r7, #15]
 6365              	.L434:
1309:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6366              		.loc 1 1309 0 is_stmt 0 discriminator 1
 6367 1342 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6368 1344 072B     		cmp	r3, #7
 6369 1346 E6D9     		bls	.L436
1314:.\Protocolo.c **** 							}
1315:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 6370              		.loc 1 1315 0 is_stmt 1
 6371 1348 0023     		movs	r3, #0
 6372 134a FB73     		strb	r3, [r7, #15]
 6373 134c 0CE0     		b	.L437
 6374              	.L438:
1316:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+52];
 6375              		.loc 1 1316 0 discriminator 2
 6376 134e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6377 1350 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6378 1352 3432     		adds	r2, r2, #52
 6379 1354 0B49     		ldr	r1, .L503
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 141


 6380 1356 8A5C     		ldrb	r2, [r1, r2]
 6381 1358 D2B2     		uxtb	r2, r2
 6382 135a 0C49     		ldr	r1, .L503+8
 6383 135c 0B44     		add	r3, r3, r1
 6384 135e 83F84F20 		strb	r2, [r3, #79]
1315:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 6385              		.loc 1 1315 0 discriminator 2
 6386 1362 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6387 1364 0133     		adds	r3, r3, #1
 6388 1366 FB73     		strb	r3, [r7, #15]
 6389              	.L437:
1315:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 6390              		.loc 1 1315 0 is_stmt 0 discriminator 1
 6391 1368 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6392 136a 032B     		cmp	r3, #3
 6393 136c EFD9     		bls	.L438
1317:.\Protocolo.c **** 							}	
1318:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 6394              		.loc 1 1318 0 is_stmt 1
 6395 136e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1319:.\Protocolo.c ****     						return 2;                            
 6396              		.loc 1 1319 0
 6397 1372 0223     		movs	r3, #2
 6398 1374 09E2     		b	.L199
 6399              	.L431:
1320:.\Protocolo.c **** 						}
1321:.\Protocolo.c **** 						if(nmangueras==3){
 6400              		.loc 1 1321 0
 6401 1376 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6402 1378 032B     		cmp	r3, #3
 6403 137a 40F09080 		bne	.L439
1322:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6404              		.loc 1 1322 0
 6405 137e 0023     		movs	r3, #0
 6406 1380 FB73     		strb	r3, [r7, #15]
 6407 1382 13E0     		b	.L440
 6408              	.L504:
 6409              		.align	2
 6410              	.L503:
 6411 1384 00000000 		.word	Surtidor_rxBuffer
 6412 1388 00000000 		.word	lado3
 6413 138c 00000000 		.word	lado4
 6414 1390 00000000 		.word	version
 6415              	.L441:
1323:.\Protocolo.c **** 								lado4.totales[1][x]=Surtidor_rxBuffer[x+34];
 6416              		.loc 1 1323 0 discriminator 2
 6417 1394 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6418 1396 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6419 1398 2232     		adds	r2, r2, #34
 6420 139a AC49     		ldr	r1, .L505
 6421 139c 8A5C     		ldrb	r2, [r1, r2]
 6422 139e D2B2     		uxtb	r2, r2
 6423 13a0 AB49     		ldr	r1, .L505+4
 6424 13a2 0B44     		add	r3, r3, r1
 6425 13a4 9A76     		strb	r2, [r3, #26]
1322:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6426              		.loc 1 1322 0 discriminator 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 142


 6427 13a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6428 13a8 0133     		adds	r3, r3, #1
 6429 13aa FB73     		strb	r3, [r7, #15]
 6430              	.L440:
1322:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6431              		.loc 1 1322 0 is_stmt 0 discriminator 1
 6432 13ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6433 13ae 072B     		cmp	r3, #7
 6434 13b0 F0D9     		bls	.L441
1324:.\Protocolo.c **** 							}
1325:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6435              		.loc 1 1325 0 is_stmt 1
 6436 13b2 0023     		movs	r3, #0
 6437 13b4 FB73     		strb	r3, [r7, #15]
 6438 13b6 15E0     		b	.L442
 6439              	.L444:
1326:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 6440              		.loc 1 1326 0
 6441 13b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6442 13ba 2B33     		adds	r3, r3, #43
 6443 13bc A34A     		ldr	r2, .L505
 6444 13be D35C     		ldrb	r3, [r2, r3]
 6445 13c0 DBB2     		uxtb	r3, r3
 6446 13c2 002B     		cmp	r3, #0
 6447 13c4 01D1     		bne	.L443
1327:.\Protocolo.c ****                                     return 0;
 6448              		.loc 1 1327 0
 6449 13c6 0023     		movs	r3, #0
 6450 13c8 DFE1     		b	.L199
 6451              	.L443:
1328:.\Protocolo.c ****                                 }                                 
1329:.\Protocolo.c **** 								lado4.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 6452              		.loc 1 1329 0
 6453 13ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6454 13cc 0C33     		adds	r3, r3, #12
 6455 13ce FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6456 13d0 2B32     		adds	r2, r2, #43
 6457 13d2 9E49     		ldr	r1, .L505
 6458 13d4 8A5C     		ldrb	r2, [r1, r2]
 6459 13d6 D2B2     		uxtb	r2, r2
 6460 13d8 9D49     		ldr	r1, .L505+4
 6461 13da 0B44     		add	r3, r3, r1
 6462 13dc 9A76     		strb	r2, [r3, #26]
1325:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6463              		.loc 1 1325 0
 6464 13de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6465 13e0 0133     		adds	r3, r3, #1
 6466 13e2 FB73     		strb	r3, [r7, #15]
 6467              	.L442:
1325:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6468              		.loc 1 1325 0 is_stmt 0 discriminator 1
 6469 13e4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6470 13e6 072B     		cmp	r3, #7
 6471 13e8 E6D9     		bls	.L444
1330:.\Protocolo.c **** 							}
1331:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 6472              		.loc 1 1331 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 143


 6473 13ea 0023     		movs	r3, #0
 6474 13ec FB73     		strb	r3, [r7, #15]
 6475 13ee 0CE0     		b	.L445
 6476              	.L446:
1332:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+52];
 6477              		.loc 1 1332 0 discriminator 2
 6478 13f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6479 13f2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6480 13f4 3432     		adds	r2, r2, #52
 6481 13f6 9549     		ldr	r1, .L505
 6482 13f8 8A5C     		ldrb	r2, [r1, r2]
 6483 13fa D2B2     		uxtb	r2, r2
 6484 13fc 9449     		ldr	r1, .L505+4
 6485 13fe 0B44     		add	r3, r3, r1
 6486 1400 83F84F20 		strb	r2, [r3, #79]
1331:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 6487              		.loc 1 1331 0 discriminator 2
 6488 1404 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6489 1406 0133     		adds	r3, r3, #1
 6490 1408 FB73     		strb	r3, [r7, #15]
 6491              	.L445:
1331:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 6492              		.loc 1 1331 0 is_stmt 0 discriminator 1
 6493 140a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6494 140c 032B     		cmp	r3, #3
 6495 140e EFD9     		bls	.L446
1333:.\Protocolo.c **** 							}						
1334:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6496              		.loc 1 1334 0 is_stmt 1
 6497 1410 0023     		movs	r3, #0
 6498 1412 FB73     		strb	r3, [r7, #15]
 6499 1414 0CE0     		b	.L447
 6500              	.L448:
1335:.\Protocolo.c **** 								lado4.totales[2][x]=Surtidor_rxBuffer[x+64];
 6501              		.loc 1 1335 0 discriminator 2
 6502 1416 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6503 1418 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6504 141a 4032     		adds	r2, r2, #64
 6505 141c 8B49     		ldr	r1, .L505
 6506 141e 8A5C     		ldrb	r2, [r1, r2]
 6507 1420 D2B2     		uxtb	r2, r2
 6508 1422 8B49     		ldr	r1, .L505+4
 6509 1424 0B44     		add	r3, r3, r1
 6510 1426 83F83220 		strb	r2, [r3, #50]
1334:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6511              		.loc 1 1334 0 discriminator 2
 6512 142a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6513 142c 0133     		adds	r3, r3, #1
 6514 142e FB73     		strb	r3, [r7, #15]
 6515              	.L447:
1334:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6516              		.loc 1 1334 0 is_stmt 0 discriminator 1
 6517 1430 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6518 1432 072B     		cmp	r3, #7
 6519 1434 EFD9     		bls	.L448
1336:.\Protocolo.c **** 							}
1337:.\Protocolo.c **** 							for(x=0;x<=7;x++){
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 144


 6520              		.loc 1 1337 0 is_stmt 1
 6521 1436 0023     		movs	r3, #0
 6522 1438 FB73     		strb	r3, [r7, #15]
 6523 143a 16E0     		b	.L449
 6524              	.L451:
1338:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 6525              		.loc 1 1338 0
 6526 143c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6527 143e 4933     		adds	r3, r3, #73
 6528 1440 824A     		ldr	r2, .L505
 6529 1442 D35C     		ldrb	r3, [r2, r3]
 6530 1444 DBB2     		uxtb	r3, r3
 6531 1446 002B     		cmp	r3, #0
 6532 1448 01D1     		bne	.L450
1339:.\Protocolo.c ****                                     return 0;
 6533              		.loc 1 1339 0
 6534 144a 0023     		movs	r3, #0
 6535 144c 9DE1     		b	.L199
 6536              	.L450:
1340:.\Protocolo.c ****                                 }                                 
1341:.\Protocolo.c **** 								lado4.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 6537              		.loc 1 1341 0
 6538 144e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6539 1450 0C33     		adds	r3, r3, #12
 6540 1452 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6541 1454 4932     		adds	r2, r2, #73
 6542 1456 7D49     		ldr	r1, .L505
 6543 1458 8A5C     		ldrb	r2, [r1, r2]
 6544 145a D2B2     		uxtb	r2, r2
 6545 145c 7C49     		ldr	r1, .L505+4
 6546 145e 0B44     		add	r3, r3, r1
 6547 1460 83F83220 		strb	r2, [r3, #50]
1337:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6548              		.loc 1 1337 0
 6549 1464 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6550 1466 0133     		adds	r3, r3, #1
 6551 1468 FB73     		strb	r3, [r7, #15]
 6552              	.L449:
1337:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6553              		.loc 1 1337 0 is_stmt 0 discriminator 1
 6554 146a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6555 146c 072B     		cmp	r3, #7
 6556 146e E5D9     		bls	.L451
1342:.\Protocolo.c **** 							}
1343:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 6557              		.loc 1 1343 0 is_stmt 1
 6558 1470 0023     		movs	r3, #0
 6559 1472 FB73     		strb	r3, [r7, #15]
 6560 1474 0CE0     		b	.L452
 6561              	.L453:
1344:.\Protocolo.c **** 								lado4.ppu[2][x]=Surtidor_rxBuffer[x+82];
 6562              		.loc 1 1344 0 discriminator 2
 6563 1476 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6564 1478 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6565 147a 5232     		adds	r2, r2, #82
 6566 147c 7349     		ldr	r1, .L505
 6567 147e 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 145


 6568 1480 D2B2     		uxtb	r2, r2
 6569 1482 7349     		ldr	r1, .L505+4
 6570 1484 0B44     		add	r3, r3, r1
 6571 1486 83F85420 		strb	r2, [r3, #84]
1343:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 6572              		.loc 1 1343 0 discriminator 2
 6573 148a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6574 148c 0133     		adds	r3, r3, #1
 6575 148e FB73     		strb	r3, [r7, #15]
 6576              	.L452:
1343:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 6577              		.loc 1 1343 0 is_stmt 0 discriminator 1
 6578 1490 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6579 1492 032B     		cmp	r3, #3
 6580 1494 EFD9     		bls	.L453
1345:.\Protocolo.c **** 							}
1346:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 6581              		.loc 1 1346 0 is_stmt 1
 6582 1496 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1347:.\Protocolo.c ****     						return 3;                            
 6583              		.loc 1 1347 0
 6584 149a 0323     		movs	r3, #3
 6585 149c 75E1     		b	.L199
 6586              	.L439:
1348:.\Protocolo.c **** 						}
1349:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 6587              		.loc 1 1349 0
 6588 149e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1350:.\Protocolo.c **** 						return 1;
 6589              		.loc 1 1350 0
 6590 14a2 0123     		movs	r3, #1
 6591 14a4 71E1     		b	.L199
 6592              	.L419:
1351:.\Protocolo.c **** 					}
1352:.\Protocolo.c **** 					else{
1353:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 6593              		.loc 1 1353 0
 6594 14a6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1354:.\Protocolo.c **** 						return 0;
 6595              		.loc 1 1354 0
 6596 14aa 0023     		movs	r3, #0
 6597 14ac 6DE1     		b	.L199
 6598              	.L418:
1355:.\Protocolo.c **** 					}					
1356:.\Protocolo.c **** 				}
1357:.\Protocolo.c **** 				else{
1358:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 6599              		.loc 1 1358 0
 6600 14ae FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1359:.\Protocolo.c **** 					return 0;		
 6601              		.loc 1 1359 0
 6602 14b2 0023     		movs	r3, #0
 6603 14b4 69E1     		b	.L199
 6604              	.L416:
1360:.\Protocolo.c **** 				}
1361:.\Protocolo.c **** 			}
1362:.\Protocolo.c **** 			else{
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 146


1363:.\Protocolo.c **** 				CyDelay(900);
 6605              		.loc 1 1363 0
 6606 14b6 4FF46170 		mov	r0, #900
 6607 14ba FFF7FEFF 		bl	CyDelay
1364:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 6608              		.loc 1 1364 0
 6609 14be FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 6610 14c2 0346     		mov	r3, r0
 6611 14c4 FB73     		strb	r3, [r7, #15]
1365:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){				
 6612              		.loc 1 1365 0
 6613 14c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6614 14c8 2E2B     		cmp	r3, #46
 6615 14ca 06D0     		beq	.L454
 6616              		.loc 1 1365 0 is_stmt 0 discriminator 1
 6617 14cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6618 14ce 582B     		cmp	r3, #88
 6619 14d0 03D0     		beq	.L454
 6620 14d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6621 14d4 822B     		cmp	r3, #130
 6622 14d6 40F05181 		bne	.L455
 6623              	.L454:
1366:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 6624              		.loc 1 1366 0 is_stmt 1
 6625 14da 5C4B     		ldr	r3, .L505
 6626 14dc 1B78     		ldrb	r3, [r3]
 6627 14de DBB2     		uxtb	r3, r3
 6628 14e0 FF2B     		cmp	r3, #255
 6629 14e2 40F04781 		bne	.L456
 6630              		.loc 1 1366 0 is_stmt 0 discriminator 1
 6631 14e6 594B     		ldr	r3, .L505
 6632 14e8 5B78     		ldrb	r3, [r3, #1]
 6633 14ea DBB2     		uxtb	r3, r3
 6634 14ec F62B     		cmp	r3, #246
 6635 14ee 40F04181 		bne	.L456
 6636 14f2 564B     		ldr	r3, .L505
 6637 14f4 DB78     		ldrb	r3, [r3, #3]
 6638 14f6 DBB2     		uxtb	r3, r3
 6639 14f8 F92B     		cmp	r3, #249
 6640 14fa 40F03B81 		bne	.L456
1367:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 6641              		.loc 1 1367 0 is_stmt 1
 6642 14fe 0023     		movs	r3, #0
 6643 1500 BB73     		strb	r3, [r7, #14]
 6644 1502 16E0     		b	.L457
 6645              	.L460:
1368:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 6646              		.loc 1 1368 0
 6647 1504 0023     		movs	r3, #0
 6648 1506 FB73     		strb	r3, [r7, #15]
 6649 1508 0DE0     		b	.L458
 6650              	.L459:
1369:.\Protocolo.c ****                     			lado4.totales[y][x]=0;
 6651              		.loc 1 1369 0 discriminator 2
 6652 150a BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 6653 150c F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 6654 150e 5049     		ldr	r1, .L505+4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 147


 6655 1510 1346     		mov	r3, r2
 6656 1512 5B00     		lsls	r3, r3, #1
 6657 1514 1344     		add	r3, r3, r2
 6658 1516 DB00     		lsls	r3, r3, #3
 6659 1518 0344     		add	r3, r3, r0
 6660 151a 0B44     		add	r3, r3, r1
 6661 151c 0022     		movs	r2, #0
 6662 151e 9A70     		strb	r2, [r3, #2]
1368:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 6663              		.loc 1 1368 0 discriminator 2
 6664 1520 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6665 1522 0133     		adds	r3, r3, #1
 6666 1524 FB73     		strb	r3, [r7, #15]
 6667              	.L458:
1368:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 6668              		.loc 1 1368 0 is_stmt 0 discriminator 1
 6669 1526 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6670 1528 172B     		cmp	r3, #23
 6671 152a EED9     		bls	.L459
1367:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 6672              		.loc 1 1367 0 is_stmt 1
 6673 152c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 6674 152e 0133     		adds	r3, r3, #1
 6675 1530 BB73     		strb	r3, [r7, #14]
 6676              	.L457:
1367:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 6677              		.loc 1 1367 0 is_stmt 0 discriminator 1
 6678 1532 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 6679 1534 022B     		cmp	r3, #2
 6680 1536 E5D9     		bls	.L460
1370:.\Protocolo.c ****                     		}
1371:.\Protocolo.c ****                     	}                        
1372:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 6681              		.loc 1 1372 0 is_stmt 1
 6682 1538 0023     		movs	r3, #0
 6683 153a FB73     		strb	r3, [r7, #15]
 6684 153c 0BE0     		b	.L461
 6685              	.L462:
1373:.\Protocolo.c **** 							lado4.totales[0][x]=Surtidor_rxBuffer[x+4];
 6686              		.loc 1 1373 0 discriminator 2
 6687 153e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6688 1540 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6689 1542 0432     		adds	r2, r2, #4
 6690 1544 4149     		ldr	r1, .L505
 6691 1546 8A5C     		ldrb	r2, [r1, r2]
 6692 1548 D2B2     		uxtb	r2, r2
 6693 154a 4149     		ldr	r1, .L505+4
 6694 154c 0B44     		add	r3, r3, r1
 6695 154e 9A70     		strb	r2, [r3, #2]
1372:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 6696              		.loc 1 1372 0 discriminator 2
 6697 1550 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6698 1552 0133     		adds	r3, r3, #1
 6699 1554 FB73     		strb	r3, [r7, #15]
 6700              	.L461:
1372:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 6701              		.loc 1 1372 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 148


 6702 1556 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6703 1558 0B2B     		cmp	r3, #11
 6704 155a F0D9     		bls	.L462
1374:.\Protocolo.c **** 						}
1375:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 6705              		.loc 1 1375 0 is_stmt 1
 6706 155c 0023     		movs	r3, #0
 6707 155e FB73     		strb	r3, [r7, #15]
 6708 1560 15E0     		b	.L463
 6709              	.L465:
1376:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 6710              		.loc 1 1376 0
 6711 1562 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6712 1564 1133     		adds	r3, r3, #17
 6713 1566 394A     		ldr	r2, .L505
 6714 1568 D35C     		ldrb	r3, [r2, r3]
 6715 156a DBB2     		uxtb	r3, r3
 6716 156c 002B     		cmp	r3, #0
 6717 156e 01D1     		bne	.L464
1377:.\Protocolo.c ****                                 return 0;
 6718              		.loc 1 1377 0
 6719 1570 0023     		movs	r3, #0
 6720 1572 0AE1     		b	.L199
 6721              	.L464:
1378:.\Protocolo.c ****                             }                             
1379:.\Protocolo.c **** 							lado4.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 6722              		.loc 1 1379 0
 6723 1574 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6724 1576 0C33     		adds	r3, r3, #12
 6725 1578 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6726 157a 1132     		adds	r2, r2, #17
 6727 157c 3349     		ldr	r1, .L505
 6728 157e 8A5C     		ldrb	r2, [r1, r2]
 6729 1580 D2B2     		uxtb	r2, r2
 6730 1582 3349     		ldr	r1, .L505+4
 6731 1584 0B44     		add	r3, r3, r1
 6732 1586 9A70     		strb	r2, [r3, #2]
1375:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 6733              		.loc 1 1375 0
 6734 1588 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6735 158a 0133     		adds	r3, r3, #1
 6736 158c FB73     		strb	r3, [r7, #15]
 6737              	.L463:
1375:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 6738              		.loc 1 1375 0 is_stmt 0 discriminator 1
 6739 158e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6740 1590 0B2B     		cmp	r3, #11
 6741 1592 E6D9     		bls	.L465
1380:.\Protocolo.c **** 						}
1381:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 6742              		.loc 1 1381 0 is_stmt 1
 6743 1594 0023     		movs	r3, #0
 6744 1596 FB73     		strb	r3, [r7, #15]
 6745 1598 0CE0     		b	.L466
 6746              	.L467:
1382:.\Protocolo.c **** 							lado4.ppu[0][x]=Surtidor_rxBuffer[x+30];
 6747              		.loc 1 1382 0 discriminator 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 149


 6748 159a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6749 159c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6750 159e 1E32     		adds	r2, r2, #30
 6751 15a0 2A49     		ldr	r1, .L505
 6752 15a2 8A5C     		ldrb	r2, [r1, r2]
 6753 15a4 D2B2     		uxtb	r2, r2
 6754 15a6 2A49     		ldr	r1, .L505+4
 6755 15a8 0B44     		add	r3, r3, r1
 6756 15aa 83F84A20 		strb	r2, [r3, #74]
1381:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 6757              		.loc 1 1381 0 discriminator 2
 6758 15ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6759 15b0 0133     		adds	r3, r3, #1
 6760 15b2 FB73     		strb	r3, [r7, #15]
 6761              	.L466:
1381:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 6762              		.loc 1 1381 0 is_stmt 0 discriminator 1
 6763 15b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6764 15b6 042B     		cmp	r3, #4
 6765 15b8 EFD9     		bls	.L467
1383:.\Protocolo.c **** 						}				
1384:.\Protocolo.c **** 						if(nmangueras==2){
 6766              		.loc 1 1384 0 is_stmt 1
 6767 15ba BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6768 15bc 022B     		cmp	r3, #2
 6769 15be 49D1     		bne	.L468
1385:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6770              		.loc 1 1385 0
 6771 15c0 0023     		movs	r3, #0
 6772 15c2 FB73     		strb	r3, [r7, #15]
 6773 15c4 0BE0     		b	.L469
 6774              	.L470:
1386:.\Protocolo.c **** 								lado4.totales[1][x]=Surtidor_rxBuffer[x+46];
 6775              		.loc 1 1386 0 discriminator 2
 6776 15c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6777 15c8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6778 15ca 2E32     		adds	r2, r2, #46
 6779 15cc 1F49     		ldr	r1, .L505
 6780 15ce 8A5C     		ldrb	r2, [r1, r2]
 6781 15d0 D2B2     		uxtb	r2, r2
 6782 15d2 1F49     		ldr	r1, .L505+4
 6783 15d4 0B44     		add	r3, r3, r1
 6784 15d6 9A76     		strb	r2, [r3, #26]
1385:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6785              		.loc 1 1385 0 discriminator 2
 6786 15d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6787 15da 0133     		adds	r3, r3, #1
 6788 15dc FB73     		strb	r3, [r7, #15]
 6789              	.L469:
1385:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6790              		.loc 1 1385 0 is_stmt 0 discriminator 1
 6791 15de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6792 15e0 0B2B     		cmp	r3, #11
 6793 15e2 F0D9     		bls	.L470
1387:.\Protocolo.c **** 							}
1388:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6794              		.loc 1 1388 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 150


 6795 15e4 0023     		movs	r3, #0
 6796 15e6 FB73     		strb	r3, [r7, #15]
 6797 15e8 15E0     		b	.L471
 6798              	.L473:
1389:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 6799              		.loc 1 1389 0
 6800 15ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6801 15ec 3B33     		adds	r3, r3, #59
 6802 15ee 174A     		ldr	r2, .L505
 6803 15f0 D35C     		ldrb	r3, [r2, r3]
 6804 15f2 DBB2     		uxtb	r3, r3
 6805 15f4 002B     		cmp	r3, #0
 6806 15f6 01D1     		bne	.L472
1390:.\Protocolo.c ****                                     return 0;
 6807              		.loc 1 1390 0
 6808 15f8 0023     		movs	r3, #0
 6809 15fa C6E0     		b	.L199
 6810              	.L472:
1391:.\Protocolo.c ****                                 }                                 
1392:.\Protocolo.c **** 								lado4.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 6811              		.loc 1 1392 0
 6812 15fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6813 15fe 0C33     		adds	r3, r3, #12
 6814 1600 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6815 1602 3B32     		adds	r2, r2, #59
 6816 1604 1149     		ldr	r1, .L505
 6817 1606 8A5C     		ldrb	r2, [r1, r2]
 6818 1608 D2B2     		uxtb	r2, r2
 6819 160a 1149     		ldr	r1, .L505+4
 6820 160c 0B44     		add	r3, r3, r1
 6821 160e 9A76     		strb	r2, [r3, #26]
1388:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6822              		.loc 1 1388 0
 6823 1610 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6824 1612 0133     		adds	r3, r3, #1
 6825 1614 FB73     		strb	r3, [r7, #15]
 6826              	.L471:
1388:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6827              		.loc 1 1388 0 is_stmt 0 discriminator 1
 6828 1616 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6829 1618 0B2B     		cmp	r3, #11
 6830 161a E6D9     		bls	.L473
1393:.\Protocolo.c **** 							}
1394:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6831              		.loc 1 1394 0 is_stmt 1
 6832 161c 0023     		movs	r3, #0
 6833 161e FB73     		strb	r3, [r7, #15]
 6834 1620 0CE0     		b	.L474
 6835              	.L475:
1395:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+72];
 6836              		.loc 1 1395 0 discriminator 2
 6837 1622 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6838 1624 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6839 1626 4832     		adds	r2, r2, #72
 6840 1628 0849     		ldr	r1, .L505
 6841 162a 8A5C     		ldrb	r2, [r1, r2]
 6842 162c D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 151


 6843 162e 0849     		ldr	r1, .L505+4
 6844 1630 0B44     		add	r3, r3, r1
 6845 1632 83F84F20 		strb	r2, [r3, #79]
1394:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6846              		.loc 1 1394 0 discriminator 2
 6847 1636 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6848 1638 0133     		adds	r3, r3, #1
 6849 163a FB73     		strb	r3, [r7, #15]
 6850              	.L474:
1394:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6851              		.loc 1 1394 0 is_stmt 0 discriminator 1
 6852 163c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6853 163e 042B     		cmp	r3, #4
 6854 1640 EFD9     		bls	.L475
1396:.\Protocolo.c **** 							}
1397:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 6855              		.loc 1 1397 0 is_stmt 1
 6856 1642 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1398:.\Protocolo.c ****     						return 2;                            
 6857              		.loc 1 1398 0
 6858 1646 0223     		movs	r3, #2
 6859 1648 9FE0     		b	.L199
 6860              	.L506:
 6861 164a 00BF     		.align	2
 6862              	.L505:
 6863 164c 00000000 		.word	Surtidor_rxBuffer
 6864 1650 00000000 		.word	lado4
 6865              	.L468:
1399:.\Protocolo.c **** 						}
1400:.\Protocolo.c **** 						if(nmangueras==3){
 6866              		.loc 1 1400 0
 6867 1654 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6868 1656 032B     		cmp	r3, #3
 6869 1658 40F08880 		bne	.L476
1401:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6870              		.loc 1 1401 0
 6871 165c 0023     		movs	r3, #0
 6872 165e FB73     		strb	r3, [r7, #15]
 6873 1660 0BE0     		b	.L477
 6874              	.L478:
1402:.\Protocolo.c **** 								lado4.totales[1][x]=Surtidor_rxBuffer[x+46];
 6875              		.loc 1 1402 0 discriminator 2
 6876 1662 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6877 1664 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6878 1666 2E32     		adds	r2, r2, #46
 6879 1668 4A49     		ldr	r1, .L507
 6880 166a 8A5C     		ldrb	r2, [r1, r2]
 6881 166c D2B2     		uxtb	r2, r2
 6882 166e 4A49     		ldr	r1, .L507+4
 6883 1670 0B44     		add	r3, r3, r1
 6884 1672 9A76     		strb	r2, [r3, #26]
1401:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6885              		.loc 1 1401 0 discriminator 2
 6886 1674 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6887 1676 0133     		adds	r3, r3, #1
 6888 1678 FB73     		strb	r3, [r7, #15]
 6889              	.L477:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 152


1401:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6890              		.loc 1 1401 0 is_stmt 0 discriminator 1
 6891 167a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6892 167c 0B2B     		cmp	r3, #11
 6893 167e F0D9     		bls	.L478
1403:.\Protocolo.c **** 							}
1404:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6894              		.loc 1 1404 0 is_stmt 1
 6895 1680 0023     		movs	r3, #0
 6896 1682 FB73     		strb	r3, [r7, #15]
 6897 1684 15E0     		b	.L479
 6898              	.L481:
1405:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 6899              		.loc 1 1405 0
 6900 1686 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6901 1688 3B33     		adds	r3, r3, #59
 6902 168a 424A     		ldr	r2, .L507
 6903 168c D35C     		ldrb	r3, [r2, r3]
 6904 168e DBB2     		uxtb	r3, r3
 6905 1690 002B     		cmp	r3, #0
 6906 1692 01D1     		bne	.L480
1406:.\Protocolo.c ****                                     return 0;
 6907              		.loc 1 1406 0
 6908 1694 0023     		movs	r3, #0
 6909 1696 78E0     		b	.L199
 6910              	.L480:
1407:.\Protocolo.c ****                                 }                                 
1408:.\Protocolo.c **** 								lado4.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 6911              		.loc 1 1408 0
 6912 1698 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6913 169a 0C33     		adds	r3, r3, #12
 6914 169c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6915 169e 3B32     		adds	r2, r2, #59
 6916 16a0 3C49     		ldr	r1, .L507
 6917 16a2 8A5C     		ldrb	r2, [r1, r2]
 6918 16a4 D2B2     		uxtb	r2, r2
 6919 16a6 3C49     		ldr	r1, .L507+4
 6920 16a8 0B44     		add	r3, r3, r1
 6921 16aa 9A76     		strb	r2, [r3, #26]
1404:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6922              		.loc 1 1404 0
 6923 16ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6924 16ae 0133     		adds	r3, r3, #1
 6925 16b0 FB73     		strb	r3, [r7, #15]
 6926              	.L479:
1404:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6927              		.loc 1 1404 0 is_stmt 0 discriminator 1
 6928 16b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6929 16b4 0B2B     		cmp	r3, #11
 6930 16b6 E6D9     		bls	.L481
1409:.\Protocolo.c **** 							}
1410:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6931              		.loc 1 1410 0 is_stmt 1
 6932 16b8 0023     		movs	r3, #0
 6933 16ba FB73     		strb	r3, [r7, #15]
 6934 16bc 0CE0     		b	.L482
 6935              	.L483:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 153


1411:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+72];
 6936              		.loc 1 1411 0 discriminator 2
 6937 16be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6938 16c0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6939 16c2 4832     		adds	r2, r2, #72
 6940 16c4 3349     		ldr	r1, .L507
 6941 16c6 8A5C     		ldrb	r2, [r1, r2]
 6942 16c8 D2B2     		uxtb	r2, r2
 6943 16ca 3349     		ldr	r1, .L507+4
 6944 16cc 0B44     		add	r3, r3, r1
 6945 16ce 83F84F20 		strb	r2, [r3, #79]
1410:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6946              		.loc 1 1410 0 discriminator 2
 6947 16d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6948 16d4 0133     		adds	r3, r3, #1
 6949 16d6 FB73     		strb	r3, [r7, #15]
 6950              	.L482:
1410:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6951              		.loc 1 1410 0 is_stmt 0 discriminator 1
 6952 16d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6953 16da 042B     		cmp	r3, #4
 6954 16dc EFD9     		bls	.L483
1412:.\Protocolo.c **** 							}					
1413:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6955              		.loc 1 1413 0 is_stmt 1
 6956 16de 0023     		movs	r3, #0
 6957 16e0 FB73     		strb	r3, [r7, #15]
 6958 16e2 0CE0     		b	.L484
 6959              	.L485:
1414:.\Protocolo.c **** 								lado4.totales[2][x]=Surtidor_rxBuffer[x+88];
 6960              		.loc 1 1414 0 discriminator 2
 6961 16e4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6962 16e6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6963 16e8 5832     		adds	r2, r2, #88
 6964 16ea 2A49     		ldr	r1, .L507
 6965 16ec 8A5C     		ldrb	r2, [r1, r2]
 6966 16ee D2B2     		uxtb	r2, r2
 6967 16f0 2949     		ldr	r1, .L507+4
 6968 16f2 0B44     		add	r3, r3, r1
 6969 16f4 83F83220 		strb	r2, [r3, #50]
1413:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6970              		.loc 1 1413 0 discriminator 2
 6971 16f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6972 16fa 0133     		adds	r3, r3, #1
 6973 16fc FB73     		strb	r3, [r7, #15]
 6974              	.L484:
1413:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6975              		.loc 1 1413 0 is_stmt 0 discriminator 1
 6976 16fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6977 1700 0B2B     		cmp	r3, #11
 6978 1702 EFD9     		bls	.L485
1415:.\Protocolo.c **** 							}
1416:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6979              		.loc 1 1416 0 is_stmt 1
 6980 1704 0023     		movs	r3, #0
 6981 1706 FB73     		strb	r3, [r7, #15]
 6982 1708 16E0     		b	.L486
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 154


 6983              	.L488:
1417:.\Protocolo.c ****                                  if(Surtidor_rxBuffer[x+101]==0){
 6984              		.loc 1 1417 0
 6985 170a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6986 170c 6533     		adds	r3, r3, #101
 6987 170e 214A     		ldr	r2, .L507
 6988 1710 D35C     		ldrb	r3, [r2, r3]
 6989 1712 DBB2     		uxtb	r3, r3
 6990 1714 002B     		cmp	r3, #0
 6991 1716 01D1     		bne	.L487
1418:.\Protocolo.c ****                                     return 0;
 6992              		.loc 1 1418 0
 6993 1718 0023     		movs	r3, #0
 6994 171a 36E0     		b	.L199
 6995              	.L487:
1419:.\Protocolo.c ****                                 }                                
1420:.\Protocolo.c **** 								lado4.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 6996              		.loc 1 1420 0
 6997 171c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6998 171e 0C33     		adds	r3, r3, #12
 6999 1720 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 7000 1722 6532     		adds	r2, r2, #101
 7001 1724 1B49     		ldr	r1, .L507
 7002 1726 8A5C     		ldrb	r2, [r1, r2]
 7003 1728 D2B2     		uxtb	r2, r2
 7004 172a 1B49     		ldr	r1, .L507+4
 7005 172c 0B44     		add	r3, r3, r1
 7006 172e 83F83220 		strb	r2, [r3, #50]
1416:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 7007              		.loc 1 1416 0
 7008 1732 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7009 1734 0133     		adds	r3, r3, #1
 7010 1736 FB73     		strb	r3, [r7, #15]
 7011              	.L486:
1416:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 7012              		.loc 1 1416 0 is_stmt 0 discriminator 1
 7013 1738 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7014 173a 0B2B     		cmp	r3, #11
 7015 173c E5D9     		bls	.L488
1421:.\Protocolo.c **** 							}
1422:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 7016              		.loc 1 1422 0 is_stmt 1
 7017 173e 0023     		movs	r3, #0
 7018 1740 FB73     		strb	r3, [r7, #15]
 7019 1742 0CE0     		b	.L489
 7020              	.L490:
1423:.\Protocolo.c **** 								lado4.ppu[2][x]=Surtidor_rxBuffer[x+114];
 7021              		.loc 1 1423 0 discriminator 2
 7022 1744 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7023 1746 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 7024 1748 7232     		adds	r2, r2, #114
 7025 174a 1249     		ldr	r1, .L507
 7026 174c 8A5C     		ldrb	r2, [r1, r2]
 7027 174e D2B2     		uxtb	r2, r2
 7028 1750 1149     		ldr	r1, .L507+4
 7029 1752 0B44     		add	r3, r3, r1
 7030 1754 83F85420 		strb	r2, [r3, #84]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 155


1422:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 7031              		.loc 1 1422 0 discriminator 2
 7032 1758 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7033 175a 0133     		adds	r3, r3, #1
 7034 175c FB73     		strb	r3, [r7, #15]
 7035              	.L489:
1422:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 7036              		.loc 1 1422 0 is_stmt 0 discriminator 1
 7037 175e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7038 1760 042B     		cmp	r3, #4
 7039 1762 EFD9     		bls	.L490
1424:.\Protocolo.c **** 							}
1425:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 7040              		.loc 1 1425 0 is_stmt 1
 7041 1764 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1426:.\Protocolo.c ****     						return 3;                            
 7042              		.loc 1 1426 0
 7043 1768 0323     		movs	r3, #3
 7044 176a 0EE0     		b	.L199
 7045              	.L476:
1427:.\Protocolo.c **** 						}
1428:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 7046              		.loc 1 1428 0
 7047 176c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1429:.\Protocolo.c **** 						return 1;			
 7048              		.loc 1 1429 0
 7049 1770 0123     		movs	r3, #1
 7050 1772 0AE0     		b	.L199
 7051              	.L456:
1430:.\Protocolo.c **** 					}
1431:.\Protocolo.c **** 					else{
1432:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 7052              		.loc 1 1432 0
 7053 1774 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1433:.\Protocolo.c **** 						return 0;					
 7054              		.loc 1 1433 0
 7055 1778 0023     		movs	r3, #0
 7056 177a 06E0     		b	.L199
 7057              	.L455:
1434:.\Protocolo.c **** 					}
1435:.\Protocolo.c **** 				}
1436:.\Protocolo.c **** 				else{
1437:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 7058              		.loc 1 1437 0
 7059 177c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1438:.\Protocolo.c **** 					return 0;		
 7060              		.loc 1 1438 0
 7061 1780 0023     		movs	r3, #0
 7062 1782 02E0     		b	.L199
 7063              	.L415:
1439:.\Protocolo.c **** 				}	
1440:.\Protocolo.c **** 			}
1441:.\Protocolo.c **** 		}
1442:.\Protocolo.c **** 		return 0;
 7064              		.loc 1 1442 0
 7065 1784 0023     		movs	r3, #0
 7066 1786 00E0     		b	.L199
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 156


 7067              	.L185:
1443:.\Protocolo.c **** 	}
1444:.\Protocolo.c **** 	else{
1445:.\Protocolo.c **** 		return 0;
 7068              		.loc 1 1445 0
 7069 1788 0023     		movs	r3, #0
 7070              	.L199:
1446:.\Protocolo.c **** 	}
1447:.\Protocolo.c **** }
 7071              		.loc 1 1447 0
 7072 178a 1846     		mov	r0, r3
 7073 178c 1037     		adds	r7, r7, #16
 7074 178e BD46     		mov	sp, r7
 7075              		@ sp needed
 7076 1790 80BD     		pop	{r7, pc}
 7077              	.L508:
 7078 1792 00BF     		.align	2
 7079              	.L507:
 7080 1794 00000000 		.word	Surtidor_rxBuffer
 7081 1798 00000000 		.word	lado4
 7082              		.cfi_endproc
 7083              	.LFE72:
 7084              		.size	totales, .-totales
 7085              		.text
 7086              	.Letext0:
 7087              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 7088              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 7089              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 7090              		.file 5 ".\\VariablesG.h"
 7091              		.file 6 "Generated_Source\\PSoC5/Surtidor.h"
 7092              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 7093              		.section	.debug_info,"",%progbits
 7094              	.Ldebug_info0:
 7095 0000 4F0B0000 		.4byte	0xb4f
 7096 0004 0400     		.2byte	0x4
 7097 0006 00000000 		.4byte	.Ldebug_abbrev0
 7098 000a 04       		.byte	0x4
 7099 000b 01       		.uleb128 0x1
 7100 000c FF030000 		.4byte	.LASF122
 7101 0010 01       		.byte	0x1
 7102 0011 4A010000 		.4byte	.LASF123
 7103 0015 D7040000 		.4byte	.LASF124
 7104 0019 00000000 		.4byte	.Ldebug_ranges0+0
 7105 001d 00000000 		.4byte	0
 7106 0021 00000000 		.4byte	.Ldebug_line0
 7107 0025 02       		.uleb128 0x2
 7108 0026 01       		.byte	0x1
 7109 0027 06       		.byte	0x6
 7110 0028 A2040000 		.4byte	.LASF0
 7111 002c 02       		.uleb128 0x2
 7112 002d 01       		.byte	0x1
 7113 002e 08       		.byte	0x8
 7114 002f E6030000 		.4byte	.LASF1
 7115 0033 02       		.uleb128 0x2
 7116 0034 02       		.byte	0x2
 7117 0035 05       		.byte	0x5
 7118 0036 50030000 		.4byte	.LASF2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 157


 7119 003a 02       		.uleb128 0x2
 7120 003b 02       		.byte	0x2
 7121 003c 07       		.byte	0x7
 7122 003d C4040000 		.4byte	.LASF3
 7123 0041 03       		.uleb128 0x3
 7124 0042 74000000 		.4byte	.LASF9
 7125 0046 02       		.byte	0x2
 7126 0047 37       		.byte	0x37
 7127 0048 4C000000 		.4byte	0x4c
 7128 004c 02       		.uleb128 0x2
 7129 004d 04       		.byte	0x4
 7130 004e 05       		.byte	0x5
 7131 004f 5A030000 		.4byte	.LASF4
 7132 0053 02       		.uleb128 0x2
 7133 0054 04       		.byte	0x4
 7134 0055 07       		.byte	0x7
 7135 0056 C1030000 		.4byte	.LASF5
 7136 005a 02       		.uleb128 0x2
 7137 005b 08       		.byte	0x8
 7138 005c 05       		.byte	0x5
 7139 005d 91020000 		.4byte	.LASF6
 7140 0061 02       		.uleb128 0x2
 7141 0062 08       		.byte	0x8
 7142 0063 07       		.byte	0x7
 7143 0064 25010000 		.4byte	.LASF7
 7144 0068 04       		.uleb128 0x4
 7145 0069 04       		.byte	0x4
 7146 006a 05       		.byte	0x5
 7147 006b 696E7400 		.ascii	"int\000"
 7148 006f 02       		.uleb128 0x2
 7149 0070 04       		.byte	0x4
 7150 0071 07       		.byte	0x7
 7151 0072 5F000000 		.4byte	.LASF8
 7152 0076 03       		.uleb128 0x3
 7153 0077 D3030000 		.4byte	.LASF10
 7154 007b 03       		.byte	0x3
 7155 007c 41       		.byte	0x41
 7156 007d 41000000 		.4byte	0x41
 7157 0081 03       		.uleb128 0x3
 7158 0082 EE040000 		.4byte	.LASF11
 7159 0086 04       		.byte	0x4
 7160 0087 B3       		.byte	0xb3
 7161 0088 2C000000 		.4byte	0x2c
 7162 008c 03       		.uleb128 0x3
 7163 008d 22020000 		.4byte	.LASF12
 7164 0091 04       		.byte	0x4
 7165 0092 B4       		.byte	0xb4
 7166 0093 3A000000 		.4byte	0x3a
 7167 0097 02       		.uleb128 0x2
 7168 0098 04       		.byte	0x4
 7169 0099 04       		.byte	0x4
 7170 009a F4000000 		.4byte	.LASF13
 7171 009e 02       		.uleb128 0x2
 7172 009f 08       		.byte	0x8
 7173 00a0 04       		.byte	0x4
 7174 00a1 F4040000 		.4byte	.LASF14
 7175 00a5 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 158


 7176 00a6 01       		.byte	0x1
 7177 00a7 08       		.byte	0x8
 7178 00a8 07020000 		.4byte	.LASF15
 7179 00ac 05       		.uleb128 0x5
 7180 00ad 81000000 		.4byte	0x81
 7181 00b1 05       		.uleb128 0x5
 7182 00b2 8C000000 		.4byte	0x8c
 7183 00b6 02       		.uleb128 0x2
 7184 00b7 04       		.byte	0x4
 7185 00b8 07       		.byte	0x7
 7186 00b9 B8030000 		.4byte	.LASF16
 7187 00bd 06       		.uleb128 0x6
 7188 00be 81000000 		.4byte	0x81
 7189 00c2 CD000000 		.4byte	0xcd
 7190 00c6 07       		.uleb128 0x7
 7191 00c7 B6000000 		.4byte	0xb6
 7192 00cb 03       		.byte	0x3
 7193 00cc 00       		.byte	0
 7194 00cd 08       		.uleb128 0x8
 7195 00ce 70030000 		.4byte	.LASF21
 7196 00d2 5D       		.byte	0x5d
 7197 00d3 05       		.byte	0x5
 7198 00d4 5C       		.byte	0x5c
 7199 00d5 22010000 		.4byte	0x122
 7200 00d9 09       		.uleb128 0x9
 7201 00da 64697200 		.ascii	"dir\000"
 7202 00de 05       		.byte	0x5
 7203 00df 5D       		.byte	0x5d
 7204 00e0 AC000000 		.4byte	0xac
 7205 00e4 00       		.byte	0
 7206 00e5 0A       		.uleb128 0xa
 7207 00e6 1E030000 		.4byte	.LASF17
 7208 00ea 05       		.byte	0x5
 7209 00eb 5E       		.byte	0x5e
 7210 00ec AC000000 		.4byte	0xac
 7211 00f0 01       		.byte	0x1
 7212 00f1 0A       		.uleb128 0xa
 7213 00f2 54020000 		.4byte	.LASF18
 7214 00f6 05       		.byte	0x5
 7215 00f7 5F       		.byte	0x5f
 7216 00f8 38010000 		.4byte	0x138
 7217 00fc 02       		.byte	0x2
 7218 00fd 09       		.uleb128 0x9
 7219 00fe 70707500 		.ascii	"ppu\000"
 7220 0102 05       		.byte	0x5
 7221 0103 60       		.byte	0x60
 7222 0104 53010000 		.4byte	0x153
 7223 0108 4A       		.byte	0x4a
 7224 0109 0A       		.uleb128 0xa
 7225 010a 0E050000 		.4byte	.LASF19
 7226 010e 05       		.byte	0x5
 7227 010f 61       		.byte	0x61
 7228 0110 6E010000 		.4byte	0x16e
 7229 0114 59       		.byte	0x59
 7230 0115 0A       		.uleb128 0xa
 7231 0116 18020000 		.4byte	.LASF20
 7232 011a 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 159


 7233 011b 62       		.byte	0x62
 7234 011c AC000000 		.4byte	0xac
 7235 0120 5C       		.byte	0x5c
 7236 0121 00       		.byte	0
 7237 0122 06       		.uleb128 0x6
 7238 0123 81000000 		.4byte	0x81
 7239 0127 38010000 		.4byte	0x138
 7240 012b 07       		.uleb128 0x7
 7241 012c B6000000 		.4byte	0xb6
 7242 0130 02       		.byte	0x2
 7243 0131 07       		.uleb128 0x7
 7244 0132 B6000000 		.4byte	0xb6
 7245 0136 17       		.byte	0x17
 7246 0137 00       		.byte	0
 7247 0138 05       		.uleb128 0x5
 7248 0139 22010000 		.4byte	0x122
 7249 013d 06       		.uleb128 0x6
 7250 013e 81000000 		.4byte	0x81
 7251 0142 53010000 		.4byte	0x153
 7252 0146 07       		.uleb128 0x7
 7253 0147 B6000000 		.4byte	0xb6
 7254 014b 02       		.byte	0x2
 7255 014c 07       		.uleb128 0x7
 7256 014d B6000000 		.4byte	0xb6
 7257 0151 04       		.byte	0x4
 7258 0152 00       		.byte	0
 7259 0153 05       		.uleb128 0x5
 7260 0154 3D010000 		.4byte	0x13d
 7261 0158 06       		.uleb128 0x6
 7262 0159 81000000 		.4byte	0x81
 7263 015d 6E010000 		.4byte	0x16e
 7264 0161 07       		.uleb128 0x7
 7265 0162 B6000000 		.4byte	0xb6
 7266 0166 02       		.byte	0x2
 7267 0167 07       		.uleb128 0x7
 7268 0168 B6000000 		.4byte	0xb6
 7269 016c 00       		.byte	0
 7270 016d 00       		.byte	0
 7271 016e 05       		.uleb128 0x5
 7272 016f 58010000 		.4byte	0x158
 7273 0173 08       		.uleb128 0x8
 7274 0174 04030000 		.4byte	.LASF22
 7275 0178 61       		.byte	0x61
 7276 0179 05       		.byte	0x5
 7277 017a 75       		.byte	0x75
 7278 017b 4A020000 		.4byte	0x24a
 7279 017f 0A       		.uleb128 0xa
 7280 0180 B0000000 		.4byte	.LASF23
 7281 0184 05       		.byte	0x5
 7282 0185 76       		.byte	0x76
 7283 0186 81000000 		.4byte	0x81
 7284 018a 00       		.byte	0
 7285 018b 0A       		.uleb128 0xa
 7286 018c 0E050000 		.4byte	.LASF19
 7287 0190 05       		.byte	0x5
 7288 0191 77       		.byte	0x77
 7289 0192 81000000 		.4byte	0x81
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 160


 7290 0196 01       		.byte	0x1
 7291 0197 09       		.uleb128 0x9
 7292 0198 70707500 		.ascii	"ppu\000"
 7293 019c 05       		.byte	0x5
 7294 019d 78       		.byte	0x78
 7295 019e 4A020000 		.4byte	0x24a
 7296 01a2 02       		.byte	0x2
 7297 01a3 0A       		.uleb128 0xa
 7298 01a4 0B030000 		.4byte	.LASF24
 7299 01a8 05       		.byte	0x5
 7300 01a9 79       		.byte	0x79
 7301 01aa 5A020000 		.4byte	0x25a
 7302 01ae 07       		.byte	0x7
 7303 01af 0A       		.uleb128 0xa
 7304 01b0 A5010000 		.4byte	.LASF25
 7305 01b4 05       		.byte	0x5
 7306 01b5 7A       		.byte	0x7a
 7307 01b6 5A020000 		.4byte	0x25a
 7308 01ba 10       		.byte	0x10
 7309 01bb 0A       		.uleb128 0xa
 7310 01bc 9F020000 		.4byte	.LASF26
 7311 01c0 05       		.byte	0x5
 7312 01c1 7B       		.byte	0x7b
 7313 01c2 81000000 		.4byte	0x81
 7314 01c6 19       		.byte	0x19
 7315 01c7 0A       		.uleb128 0xa
 7316 01c8 05050000 		.4byte	.LASF27
 7317 01cc 05       		.byte	0x5
 7318 01cd 7C       		.byte	0x7c
 7319 01ce 81000000 		.4byte	0x81
 7320 01d2 1A       		.byte	0x1a
 7321 01d3 0A       		.uleb128 0xa
 7322 01d4 ED000000 		.4byte	.LASF28
 7323 01d8 05       		.byte	0x5
 7324 01d9 7D       		.byte	0x7d
 7325 01da 6A020000 		.4byte	0x26a
 7326 01de 1B       		.byte	0x1b
 7327 01df 09       		.uleb128 0x9
 7328 01e0 696400   		.ascii	"id\000"
 7329 01e3 05       		.byte	0x5
 7330 01e4 7E       		.byte	0x7e
 7331 01e5 7A020000 		.4byte	0x27a
 7332 01e9 23       		.byte	0x23
 7333 01ea 09       		.uleb128 0x9
 7334 01eb 6B6D00   		.ascii	"km\000"
 7335 01ee 05       		.byte	0x5
 7336 01ef 7F       		.byte	0x7f
 7337 01f0 8A020000 		.4byte	0x28a
 7338 01f4 33       		.byte	0x33
 7339 01f5 0A       		.uleb128 0xa
 7340 01f6 97010000 		.4byte	.LASF29
 7341 01fa 05       		.byte	0x5
 7342 01fb 80       		.byte	0x80
 7343 01fc 5A020000 		.4byte	0x25a
 7344 0200 3E       		.byte	0x3e
 7345 0201 0A       		.uleb128 0xa
 7346 0202 1C010000 		.4byte	.LASF30
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 161


 7347 0206 05       		.byte	0x5
 7348 0207 81       		.byte	0x81
 7349 0208 81000000 		.4byte	0x81
 7350 020c 47       		.byte	0x47
 7351 020d 0A       		.uleb128 0xa
 7352 020e 43020000 		.4byte	.LASF31
 7353 0212 05       		.byte	0x5
 7354 0213 82       		.byte	0x82
 7355 0214 81000000 		.4byte	0x81
 7356 0218 48       		.byte	0x48
 7357 0219 0A       		.uleb128 0xa
 7358 021a B7020000 		.4byte	.LASF32
 7359 021e 05       		.byte	0x5
 7360 021f 83       		.byte	0x83
 7361 0220 8A020000 		.4byte	0x28a
 7362 0224 49       		.byte	0x49
 7363 0225 0A       		.uleb128 0xa
 7364 0226 00000000 		.4byte	.LASF33
 7365 022a 05       		.byte	0x5
 7366 022b 84       		.byte	0x84
 7367 022c 8A020000 		.4byte	0x28a
 7368 0230 54       		.byte	0x54
 7369 0231 0A       		.uleb128 0xa
 7370 0232 4E020000 		.4byte	.LASF34
 7371 0236 05       		.byte	0x5
 7372 0237 85       		.byte	0x85
 7373 0238 81000000 		.4byte	0x81
 7374 023c 5F       		.byte	0x5f
 7375 023d 0A       		.uleb128 0xa
 7376 023e DB030000 		.4byte	.LASF35
 7377 0242 05       		.byte	0x5
 7378 0243 86       		.byte	0x86
 7379 0244 81000000 		.4byte	0x81
 7380 0248 60       		.byte	0x60
 7381 0249 00       		.byte	0
 7382 024a 06       		.uleb128 0x6
 7383 024b 81000000 		.4byte	0x81
 7384 024f 5A020000 		.4byte	0x25a
 7385 0253 07       		.uleb128 0x7
 7386 0254 B6000000 		.4byte	0xb6
 7387 0258 04       		.byte	0x4
 7388 0259 00       		.byte	0
 7389 025a 06       		.uleb128 0x6
 7390 025b 81000000 		.4byte	0x81
 7391 025f 6A020000 		.4byte	0x26a
 7392 0263 07       		.uleb128 0x7
 7393 0264 B6000000 		.4byte	0xb6
 7394 0268 08       		.byte	0x8
 7395 0269 00       		.byte	0
 7396 026a 06       		.uleb128 0x6
 7397 026b 81000000 		.4byte	0x81
 7398 026f 7A020000 		.4byte	0x27a
 7399 0273 07       		.uleb128 0x7
 7400 0274 B6000000 		.4byte	0xb6
 7401 0278 07       		.byte	0x7
 7402 0279 00       		.byte	0
 7403 027a 06       		.uleb128 0x6
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 162


 7404 027b 81000000 		.4byte	0x81
 7405 027f 8A020000 		.4byte	0x28a
 7406 0283 07       		.uleb128 0x7
 7407 0284 B6000000 		.4byte	0xb6
 7408 0288 0F       		.byte	0xf
 7409 0289 00       		.byte	0
 7410 028a 06       		.uleb128 0x6
 7411 028b 81000000 		.4byte	0x81
 7412 028f 9A020000 		.4byte	0x29a
 7413 0293 07       		.uleb128 0x7
 7414 0294 B6000000 		.4byte	0xb6
 7415 0298 0A       		.byte	0xa
 7416 0299 00       		.byte	0
 7417 029a 0B       		.uleb128 0xb
 7418 029b 14050000 		.4byte	.LASF125
 7419 029f 01       		.byte	0x1
 7420 02a0 3F       		.byte	0x3f
 7421 02a1 00000000 		.4byte	.LFB63
 7422 02a5 14000000 		.4byte	.LFE63-.LFB63
 7423 02a9 01       		.uleb128 0x1
 7424 02aa 9C       		.byte	0x9c
 7425 02ab 0C       		.uleb128 0xc
 7426 02ac F4030000 		.4byte	.LASF36
 7427 02b0 01       		.byte	0x1
 7428 02b1 56       		.byte	0x56
 7429 02b2 81000000 		.4byte	0x81
 7430 02b6 00000000 		.4byte	.LFB64
 7431 02ba 98000000 		.4byte	.LFE64-.LFB64
 7432 02be 01       		.uleb128 0x1
 7433 02bf 9C       		.byte	0x9c
 7434 02c0 E1020000 		.4byte	0x2e1
 7435 02c4 0D       		.uleb128 0xd
 7436 02c5 64697200 		.ascii	"dir\000"
 7437 02c9 01       		.byte	0x1
 7438 02ca 56       		.byte	0x56
 7439 02cb 81000000 		.4byte	0x81
 7440 02cf 02       		.uleb128 0x2
 7441 02d0 91       		.byte	0x91
 7442 02d1 6F       		.sleb128 -17
 7443 02d2 0E       		.uleb128 0xe
 7444 02d3 1E030000 		.4byte	.LASF17
 7445 02d7 01       		.byte	0x1
 7446 02d8 57       		.byte	0x57
 7447 02d9 81000000 		.4byte	0x81
 7448 02dd 02       		.uleb128 0x2
 7449 02de 91       		.byte	0x91
 7450 02df 77       		.sleb128 -9
 7451 02e0 00       		.byte	0
 7452 02e1 0C       		.uleb128 0xc
 7453 02e2 9D010000 		.4byte	.LASF37
 7454 02e6 01       		.byte	0x1
 7455 02e7 86       		.byte	0x86
 7456 02e8 81000000 		.4byte	0x81
 7457 02ec 00000000 		.4byte	.LFB65
 7458 02f0 EC000000 		.4byte	.LFE65-.LFB65
 7459 02f4 01       		.uleb128 0x1
 7460 02f5 9C       		.byte	0x9c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 163


 7461 02f6 07030000 		.4byte	0x307
 7462 02fa 0F       		.uleb128 0xf
 7463 02fb 7800     		.ascii	"x\000"
 7464 02fd 01       		.byte	0x1
 7465 02fe 87       		.byte	0x87
 7466 02ff 81000000 		.4byte	0x81
 7467 0303 02       		.uleb128 0x2
 7468 0304 91       		.byte	0x91
 7469 0305 77       		.sleb128 -9
 7470 0306 00       		.byte	0
 7471 0307 10       		.uleb128 0x10
 7472 0308 81040000 		.4byte	.LASF41
 7473 030c 01       		.byte	0x1
 7474 030d BA       		.byte	0xba
 7475 030e 00000000 		.4byte	.LFB66
 7476 0312 36000000 		.4byte	.LFE66-.LFB66
 7477 0316 01       		.uleb128 0x1
 7478 0317 9C       		.byte	0x9c
 7479 0318 39030000 		.4byte	0x339
 7480 031c 0D       		.uleb128 0xd
 7481 031d 76616C00 		.ascii	"val\000"
 7482 0321 01       		.byte	0x1
 7483 0322 BA       		.byte	0xba
 7484 0323 81000000 		.4byte	0x81
 7485 0327 02       		.uleb128 0x2
 7486 0328 91       		.byte	0x91
 7487 0329 6F       		.sleb128 -17
 7488 032a 0E       		.uleb128 0xe
 7489 032b 1E030000 		.4byte	.LASF17
 7490 032f 01       		.byte	0x1
 7491 0330 BB       		.byte	0xbb
 7492 0331 81000000 		.4byte	0x81
 7493 0335 02       		.uleb128 0x2
 7494 0336 91       		.byte	0x91
 7495 0337 77       		.sleb128 -9
 7496 0338 00       		.byte	0
 7497 0339 0C       		.uleb128 0xc
 7498 033a A4030000 		.4byte	.LASF38
 7499 033e 01       		.byte	0x1
 7500 033f D7       		.byte	0xd7
 7501 0340 81000000 		.4byte	0x81
 7502 0344 00000000 		.4byte	.LFB67
 7503 0348 7C010000 		.4byte	.LFE67-.LFB67
 7504 034c 01       		.uleb128 0x1
 7505 034d 9C       		.byte	0x9c
 7506 034e 89030000 		.4byte	0x389
 7507 0352 0D       		.uleb128 0xd
 7508 0353 76616C00 		.ascii	"val\000"
 7509 0357 01       		.byte	0x1
 7510 0358 D7       		.byte	0xd7
 7511 0359 81000000 		.4byte	0x81
 7512 035d 02       		.uleb128 0x2
 7513 035e 91       		.byte	0x91
 7514 035f 4F       		.sleb128 -49
 7515 0360 0E       		.uleb128 0xe
 7516 0361 FB040000 		.4byte	.LASF39
 7517 0365 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 164


 7518 0366 D8       		.byte	0xd8
 7519 0367 89030000 		.4byte	0x389
 7520 036b 02       		.uleb128 0x2
 7521 036c 91       		.byte	0x91
 7522 036d 5C       		.sleb128 -36
 7523 036e 0F       		.uleb128 0xf
 7524 036f 7800     		.ascii	"x\000"
 7525 0371 01       		.byte	0x1
 7526 0372 D8       		.byte	0xd8
 7527 0373 81000000 		.4byte	0x81
 7528 0377 02       		.uleb128 0x2
 7529 0378 91       		.byte	0x91
 7530 0379 6F       		.sleb128 -17
 7531 037a 0E       		.uleb128 0xe
 7532 037b EE010000 		.4byte	.LASF40
 7533 037f 01       		.byte	0x1
 7534 0380 D8       		.byte	0xd8
 7535 0381 5A020000 		.4byte	0x25a
 7536 0385 02       		.uleb128 0x2
 7537 0386 91       		.byte	0x91
 7538 0387 50       		.sleb128 -48
 7539 0388 00       		.byte	0
 7540 0389 06       		.uleb128 0x6
 7541 038a 81000000 		.4byte	0x81
 7542 038e 99030000 		.4byte	0x399
 7543 0392 07       		.uleb128 0x7
 7544 0393 B6000000 		.4byte	0xb6
 7545 0397 12       		.byte	0x12
 7546 0398 00       		.byte	0
 7547 0399 11       		.uleb128 0x11
 7548 039a E6010000 		.4byte	.LASF42
 7549 039e 01       		.byte	0x1
 7550 039f 2801     		.2byte	0x128
 7551 03a1 00000000 		.4byte	.LFB68
 7552 03a5 24000000 		.4byte	.LFE68-.LFB68
 7553 03a9 01       		.uleb128 0x1
 7554 03aa 9C       		.byte	0x9c
 7555 03ab BF030000 		.4byte	0x3bf
 7556 03af 12       		.uleb128 0x12
 7557 03b0 76616C00 		.ascii	"val\000"
 7558 03b4 01       		.byte	0x1
 7559 03b5 2801     		.2byte	0x128
 7560 03b7 81000000 		.4byte	0x81
 7561 03bb 02       		.uleb128 0x2
 7562 03bc 91       		.byte	0x91
 7563 03bd 77       		.sleb128 -9
 7564 03be 00       		.byte	0
 7565 03bf 13       		.uleb128 0x13
 7566 03c0 AD010000 		.4byte	.LASF43
 7567 03c4 01       		.byte	0x1
 7568 03c5 3D01     		.2byte	0x13d
 7569 03c7 81000000 		.4byte	0x81
 7570 03cb 00000000 		.4byte	.LFB69
 7571 03cf 10060000 		.4byte	.LFE69-.LFB69
 7572 03d3 01       		.uleb128 0x1
 7573 03d4 9C       		.byte	0x9c
 7574 03d5 F6030000 		.4byte	0x3f6
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 165


 7575 03d9 12       		.uleb128 0x12
 7576 03da 64697200 		.ascii	"dir\000"
 7577 03de 01       		.byte	0x1
 7578 03df 3D01     		.2byte	0x13d
 7579 03e1 81000000 		.4byte	0x81
 7580 03e5 02       		.uleb128 0x2
 7581 03e6 91       		.byte	0x91
 7582 03e7 6F       		.sleb128 -17
 7583 03e8 14       		.uleb128 0x14
 7584 03e9 7800     		.ascii	"x\000"
 7585 03eb 01       		.byte	0x1
 7586 03ec 3E01     		.2byte	0x13e
 7587 03ee 81000000 		.4byte	0x81
 7588 03f2 02       		.uleb128 0x2
 7589 03f3 91       		.byte	0x91
 7590 03f4 77       		.sleb128 -9
 7591 03f5 00       		.byte	0
 7592 03f6 13       		.uleb128 0x13
 7593 03f7 AE030000 		.4byte	.LASF44
 7594 03fb 01       		.byte	0x1
 7595 03fc C501     		.2byte	0x1c5
 7596 03fe 81000000 		.4byte	0x81
 7597 0402 00000000 		.4byte	.LFB70
 7598 0406 7C080000 		.4byte	.LFE70-.LFB70
 7599 040a 01       		.uleb128 0x1
 7600 040b 9C       		.byte	0x9c
 7601 040c 96040000 		.4byte	0x496
 7602 0410 12       		.uleb128 0x12
 7603 0411 64697200 		.ascii	"dir\000"
 7604 0415 01       		.byte	0x1
 7605 0416 C501     		.2byte	0x1c5
 7606 0418 81000000 		.4byte	0x81
 7607 041c 02       		.uleb128 0x2
 7608 041d 91       		.byte	0x91
 7609 041e 5F       		.sleb128 -33
 7610 041f 15       		.uleb128 0x15
 7611 0420 0E050000 		.4byte	.LASF19
 7612 0424 01       		.byte	0x1
 7613 0425 C501     		.2byte	0x1c5
 7614 0427 81000000 		.4byte	0x81
 7615 042b 02       		.uleb128 0x2
 7616 042c 91       		.byte	0x91
 7617 042d 5E       		.sleb128 -34
 7618 042e 15       		.uleb128 0x15
 7619 042f AE040000 		.4byte	.LASF45
 7620 0433 01       		.byte	0x1
 7621 0434 C501     		.2byte	0x1c5
 7622 0436 96040000 		.4byte	0x496
 7623 043a 02       		.uleb128 0x2
 7624 043b 91       		.byte	0x91
 7625 043c 58       		.sleb128 -40
 7626 043d 15       		.uleb128 0x15
 7627 043e ED000000 		.4byte	.LASF28
 7628 0442 01       		.byte	0x1
 7629 0443 C501     		.2byte	0x1c5
 7630 0445 81000000 		.4byte	0x81
 7631 0449 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 166


 7632 044a 91       		.byte	0x91
 7633 044b 5D       		.sleb128 -35
 7634 044c 16       		.uleb128 0x16
 7635 044d 58000000 		.4byte	.LASF46
 7636 0451 01       		.byte	0x1
 7637 0452 C601     		.2byte	0x1c6
 7638 0454 9C040000 		.4byte	0x49c
 7639 0458 02       		.uleb128 0x2
 7640 0459 91       		.byte	0x91
 7641 045a 60       		.sleb128 -32
 7642 045b 16       		.uleb128 0x16
 7643 045c FF020000 		.4byte	.LASF47
 7644 0460 01       		.byte	0x1
 7645 0461 C601     		.2byte	0x1c6
 7646 0463 81000000 		.4byte	0x81
 7647 0467 02       		.uleb128 0x2
 7648 0468 91       		.byte	0x91
 7649 0469 77       		.sleb128 -9
 7650 046a 16       		.uleb128 0x16
 7651 046b 87030000 		.4byte	.LASF48
 7652 046f 01       		.byte	0x1
 7653 0470 C601     		.2byte	0x1c6
 7654 0472 81000000 		.4byte	0x81
 7655 0476 02       		.uleb128 0x2
 7656 0477 91       		.byte	0x91
 7657 0478 76       		.sleb128 -10
 7658 0479 14       		.uleb128 0x14
 7659 047a 6900     		.ascii	"i\000"
 7660 047c 01       		.byte	0x1
 7661 047d C601     		.2byte	0x1c6
 7662 047f 81000000 		.4byte	0x81
 7663 0483 02       		.uleb128 0x2
 7664 0484 91       		.byte	0x91
 7665 0485 75       		.sleb128 -11
 7666 0486 16       		.uleb128 0x16
 7667 0487 93000000 		.4byte	.LASF49
 7668 048b 01       		.byte	0x1
 7669 048c C601     		.2byte	0x1c6
 7670 048e 81000000 		.4byte	0x81
 7671 0492 02       		.uleb128 0x2
 7672 0493 91       		.byte	0x91
 7673 0494 74       		.sleb128 -12
 7674 0495 00       		.byte	0
 7675 0496 17       		.uleb128 0x17
 7676 0497 04       		.byte	0x4
 7677 0498 81000000 		.4byte	0x81
 7678 049c 06       		.uleb128 0x6
 7679 049d 81000000 		.4byte	0x81
 7680 04a1 AC040000 		.4byte	0x4ac
 7681 04a5 07       		.uleb128 0x7
 7682 04a6 B6000000 		.4byte	0xb6
 7683 04aa 11       		.byte	0x11
 7684 04ab 00       		.byte	0
 7685 04ac 13       		.uleb128 0x13
 7686 04ad A8020000 		.4byte	.LASF50
 7687 04b1 01       		.byte	0x1
 7688 04b2 C902     		.2byte	0x2c9
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 167


 7689 04b4 81000000 		.4byte	0x81
 7690 04b8 00000000 		.4byte	.LFB71
 7691 04bc 54020000 		.4byte	.LFE71-.LFB71
 7692 04c0 01       		.uleb128 0x1
 7693 04c1 9C       		.byte	0x9c
 7694 04c2 1F050000 		.4byte	0x51f
 7695 04c6 12       		.uleb128 0x12
 7696 04c7 64697200 		.ascii	"dir\000"
 7697 04cb 01       		.byte	0x1
 7698 04cc C902     		.2byte	0x2c9
 7699 04ce 81000000 		.4byte	0x81
 7700 04d2 02       		.uleb128 0x2
 7701 04d3 91       		.byte	0x91
 7702 04d4 5F       		.sleb128 -33
 7703 04d5 15       		.uleb128 0x15
 7704 04d6 7E000000 		.4byte	.LASF51
 7705 04da 01       		.byte	0x1
 7706 04db C902     		.2byte	0x2c9
 7707 04dd 96040000 		.4byte	0x496
 7708 04e1 02       		.uleb128 0x2
 7709 04e2 91       		.byte	0x91
 7710 04e3 58       		.sleb128 -40
 7711 04e4 15       		.uleb128 0x15
 7712 04e5 8B000000 		.4byte	.LASF52
 7713 04e9 01       		.byte	0x1
 7714 04ea C902     		.2byte	0x2c9
 7715 04ec 81000000 		.4byte	0x81
 7716 04f0 02       		.uleb128 0x2
 7717 04f1 91       		.byte	0x91
 7718 04f2 5E       		.sleb128 -34
 7719 04f3 16       		.uleb128 0x16
 7720 04f4 58000000 		.4byte	.LASF46
 7721 04f8 01       		.byte	0x1
 7722 04f9 CA02     		.2byte	0x2ca
 7723 04fb 1F050000 		.4byte	0x51f
 7724 04ff 02       		.uleb128 0x2
 7725 0500 91       		.byte	0x91
 7726 0501 64       		.sleb128 -28
 7727 0502 16       		.uleb128 0x16
 7728 0503 FF020000 		.4byte	.LASF47
 7729 0507 01       		.byte	0x1
 7730 0508 CA02     		.2byte	0x2ca
 7731 050a 81000000 		.4byte	0x81
 7732 050e 02       		.uleb128 0x2
 7733 050f 91       		.byte	0x91
 7734 0510 77       		.sleb128 -9
 7735 0511 14       		.uleb128 0x14
 7736 0512 7800     		.ascii	"x\000"
 7737 0514 01       		.byte	0x1
 7738 0515 CA02     		.2byte	0x2ca
 7739 0517 81000000 		.4byte	0x81
 7740 051b 02       		.uleb128 0x2
 7741 051c 91       		.byte	0x91
 7742 051d 76       		.sleb128 -10
 7743 051e 00       		.byte	0
 7744 051f 06       		.uleb128 0x6
 7745 0520 81000000 		.4byte	0x81
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 168


 7746 0524 2F050000 		.4byte	0x52f
 7747 0528 07       		.uleb128 0x7
 7748 0529 B6000000 		.4byte	0xb6
 7749 052d 0E       		.byte	0xe
 7750 052e 00       		.byte	0
 7751 052f 13       		.uleb128 0x13
 7752 0530 54020000 		.4byte	.LASF18
 7753 0534 01       		.byte	0x1
 7754 0535 1B03     		.2byte	0x31b
 7755 0537 81000000 		.4byte	0x81
 7756 053b 00000000 		.4byte	.LFB72
 7757 053f 9C170000 		.4byte	.LFE72-.LFB72
 7758 0543 01       		.uleb128 0x1
 7759 0544 9C       		.byte	0x9c
 7760 0545 82050000 		.4byte	0x582
 7761 0549 12       		.uleb128 0x12
 7762 054a 64697200 		.ascii	"dir\000"
 7763 054e 01       		.byte	0x1
 7764 054f 1B03     		.2byte	0x31b
 7765 0551 81000000 		.4byte	0x81
 7766 0555 02       		.uleb128 0x2
 7767 0556 91       		.byte	0x91
 7768 0557 6F       		.sleb128 -17
 7769 0558 15       		.uleb128 0x15
 7770 0559 3D030000 		.4byte	.LASF53
 7771 055d 01       		.byte	0x1
 7772 055e 1B03     		.2byte	0x31b
 7773 0560 81000000 		.4byte	0x81
 7774 0564 02       		.uleb128 0x2
 7775 0565 91       		.byte	0x91
 7776 0566 6E       		.sleb128 -18
 7777 0567 14       		.uleb128 0x14
 7778 0568 7800     		.ascii	"x\000"
 7779 056a 01       		.byte	0x1
 7780 056b 1C03     		.2byte	0x31c
 7781 056d 81000000 		.4byte	0x81
 7782 0571 02       		.uleb128 0x2
 7783 0572 91       		.byte	0x91
 7784 0573 77       		.sleb128 -9
 7785 0574 14       		.uleb128 0x14
 7786 0575 7900     		.ascii	"y\000"
 7787 0577 01       		.byte	0x1
 7788 0578 1C03     		.2byte	0x31c
 7789 057a 81000000 		.4byte	0x81
 7790 057e 02       		.uleb128 0x2
 7791 057f 91       		.byte	0x91
 7792 0580 76       		.sleb128 -10
 7793 0581 00       		.byte	0
 7794 0582 06       		.uleb128 0x6
 7795 0583 81000000 		.4byte	0x81
 7796 0587 92050000 		.4byte	0x592
 7797 058b 07       		.uleb128 0x7
 7798 058c B6000000 		.4byte	0xb6
 7799 0590 FF       		.byte	0xff
 7800 0591 00       		.byte	0
 7801 0592 18       		.uleb128 0x18
 7802 0593 85010000 		.4byte	.LASF54
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 169


 7803 0597 06       		.byte	0x6
 7804 0598 3E01     		.2byte	0x13e
 7805 059a 9E050000 		.4byte	0x59e
 7806 059e 05       		.uleb128 0x5
 7807 059f 82050000 		.4byte	0x582
 7808 05a3 18       		.uleb128 0x18
 7809 05a4 63030000 		.4byte	.LASF55
 7810 05a8 07       		.byte	0x7
 7811 05a9 2A06     		.2byte	0x62a
 7812 05ab AF050000 		.4byte	0x5af
 7813 05af 05       		.uleb128 0x5
 7814 05b0 76000000 		.4byte	0x76
 7815 05b4 19       		.uleb128 0x19
 7816 05b5 69020000 		.4byte	.LASF56
 7817 05b9 05       		.byte	0x5
 7818 05ba 4A       		.byte	0x4a
 7819 05bb AC000000 		.4byte	0xac
 7820 05bf 05       		.uleb128 0x5
 7821 05c0 03       		.byte	0x3
 7822 05c1 00000000 		.4byte	count_teclas1
 7823 05c5 19       		.uleb128 0x19
 7824 05c6 79030000 		.4byte	.LASF57
 7825 05ca 05       		.byte	0x5
 7826 05cb 4A       		.byte	0x4a
 7827 05cc AC000000 		.4byte	0xac
 7828 05d0 05       		.uleb128 0x5
 7829 05d1 03       		.byte	0x3
 7830 05d2 00000000 		.4byte	comas1
 7831 05d6 19       		.uleb128 0x19
 7832 05d7 80030000 		.4byte	.LASF58
 7833 05db 05       		.byte	0x5
 7834 05dc 4A       		.byte	0x4a
 7835 05dd AC000000 		.4byte	0xac
 7836 05e1 05       		.uleb128 0x5
 7837 05e2 03       		.byte	0x3
 7838 05e3 00000000 		.4byte	comas2
 7839 05e7 19       		.uleb128 0x19
 7840 05e8 46000000 		.4byte	.LASF59
 7841 05ec 05       		.byte	0x5
 7842 05ed 4A       		.byte	0x4a
 7843 05ee AC000000 		.4byte	0xac
 7844 05f2 05       		.uleb128 0x5
 7845 05f3 03       		.byte	0x3
 7846 05f4 00000000 		.4byte	id_coma1
 7847 05f8 19       		.uleb128 0x19
 7848 05f9 BC010000 		.4byte	.LASF60
 7849 05fd 05       		.byte	0x5
 7850 05fe 4A       		.byte	0x4a
 7851 05ff AC000000 		.4byte	0xac
 7852 0603 05       		.uleb128 0x5
 7853 0604 03       		.byte	0x3
 7854 0605 00000000 		.4byte	id_teclado1
 7855 0609 19       		.uleb128 0x19
 7856 060a 77020000 		.4byte	.LASF61
 7857 060e 05       		.byte	0x5
 7858 060f 4A       		.byte	0x4a
 7859 0610 AC000000 		.4byte	0xac
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 170


 7860 0614 05       		.uleb128 0x5
 7861 0615 03       		.byte	0x3
 7862 0616 00000000 		.4byte	count_teclas2
 7863 061a 19       		.uleb128 0x19
 7864 061b 4F000000 		.4byte	.LASF62
 7865 061f 05       		.byte	0x5
 7866 0620 4A       		.byte	0x4a
 7867 0621 AC000000 		.4byte	0xac
 7868 0625 05       		.uleb128 0x5
 7869 0626 03       		.byte	0x3
 7870 0627 00000000 		.4byte	id_coma2
 7871 062b 19       		.uleb128 0x19
 7872 062c C8010000 		.4byte	.LASF63
 7873 0630 05       		.byte	0x5
 7874 0631 4A       		.byte	0x4a
 7875 0632 AC000000 		.4byte	0xac
 7876 0636 05       		.uleb128 0x5
 7877 0637 03       		.byte	0x3
 7878 0638 00000000 		.4byte	id_teclado2
 7879 063c 19       		.uleb128 0x19
 7880 063d 85020000 		.4byte	.LASF64
 7881 0641 05       		.byte	0x5
 7882 0642 4B       		.byte	0x4b
 7883 0643 B1000000 		.4byte	0xb1
 7884 0647 05       		.uleb128 0x5
 7885 0648 03       		.byte	0x3
 7886 0649 00000000 		.4byte	posx1
 7887 064d 19       		.uleb128 0x19
 7888 064e F3020000 		.4byte	.LASF65
 7889 0652 05       		.byte	0x5
 7890 0653 4B       		.byte	0x4b
 7891 0654 B1000000 		.4byte	0xb1
 7892 0658 05       		.uleb128 0x5
 7893 0659 03       		.byte	0x3
 7894 065a 00000000 		.4byte	posy1
 7895 065e 19       		.uleb128 0x19
 7896 065f 20050000 		.4byte	.LASF66
 7897 0663 05       		.byte	0x5
 7898 0664 4B       		.byte	0x4b
 7899 0665 B1000000 		.4byte	0xb1
 7900 0669 05       		.uleb128 0x5
 7901 066a 03       		.byte	0x3
 7902 066b 00000000 		.4byte	sizeletra1
 7903 066f 19       		.uleb128 0x19
 7904 0670 8B020000 		.4byte	.LASF67
 7905 0674 05       		.byte	0x5
 7906 0675 4B       		.byte	0x4b
 7907 0676 B1000000 		.4byte	0xb1
 7908 067a 05       		.uleb128 0x5
 7909 067b 03       		.byte	0x3
 7910 067c 00000000 		.4byte	posx2
 7911 0680 19       		.uleb128 0x19
 7912 0681 F9020000 		.4byte	.LASF68
 7913 0685 05       		.byte	0x5
 7914 0686 4B       		.byte	0x4b
 7915 0687 B1000000 		.4byte	0xb1
 7916 068b 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 171


 7917 068c 03       		.byte	0x3
 7918 068d 00000000 		.4byte	posy2
 7919 0691 19       		.uleb128 0x19
 7920 0692 2B050000 		.4byte	.LASF69
 7921 0696 05       		.byte	0x5
 7922 0697 4B       		.byte	0x4b
 7923 0698 B1000000 		.4byte	0xb1
 7924 069c 05       		.uleb128 0x5
 7925 069d 03       		.byte	0x3
 7926 069e 00000000 		.4byte	sizeletra2
 7927 06a2 19       		.uleb128 0x19
 7928 06a3 A0000000 		.4byte	.LASF70
 7929 06a7 05       		.byte	0x5
 7930 06a8 4C       		.byte	0x4c
 7931 06a9 AC000000 		.4byte	0xac
 7932 06ad 05       		.uleb128 0x5
 7933 06ae 03       		.byte	0x3
 7934 06af 00000000 		.4byte	teclas1
 7935 06b3 19       		.uleb128 0x19
 7936 06b4 A8000000 		.4byte	.LASF71
 7937 06b8 05       		.byte	0x5
 7938 06b9 4C       		.byte	0x4c
 7939 06ba AC000000 		.4byte	0xac
 7940 06be 05       		.uleb128 0x5
 7941 06bf 03       		.byte	0x3
 7942 06c0 00000000 		.4byte	teclas2
 7943 06c4 19       		.uleb128 0x19
 7944 06c5 09000000 		.4byte	.LASF72
 7945 06c9 05       		.byte	0x5
 7946 06ca 4D       		.byte	0x4d
 7947 06cb AC000000 		.4byte	0xac
 7948 06cf 05       		.uleb128 0x5
 7949 06d0 03       		.byte	0x3
 7950 06d1 00000000 		.4byte	flujo_LCD1
 7951 06d5 19       		.uleb128 0x19
 7952 06d6 14000000 		.4byte	.LASF73
 7953 06da 05       		.byte	0x5
 7954 06db 4D       		.byte	0x4d
 7955 06dc AC000000 		.4byte	0xac
 7956 06e0 05       		.uleb128 0x5
 7957 06e1 03       		.byte	0x3
 7958 06e2 00000000 		.4byte	flujo_LCD2
 7959 06e6 19       		.uleb128 0x19
 7960 06e7 1F000000 		.4byte	.LASF74
 7961 06eb 05       		.byte	0x5
 7962 06ec 4D       		.byte	0x4d
 7963 06ed AC000000 		.4byte	0xac
 7964 06f1 05       		.uleb128 0x5
 7965 06f2 03       		.byte	0x3
 7966 06f3 00000000 		.4byte	flujo_LCD3
 7967 06f7 19       		.uleb128 0x19
 7968 06f8 2A000000 		.4byte	.LASF75
 7969 06fc 05       		.byte	0x5
 7970 06fd 4D       		.byte	0x4d
 7971 06fe AC000000 		.4byte	0xac
 7972 0702 05       		.uleb128 0x5
 7973 0703 03       		.byte	0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 172


 7974 0704 00000000 		.4byte	flujo_LCD4
 7975 0708 06       		.uleb128 0x6
 7976 0709 81000000 		.4byte	0x81
 7977 070d 18070000 		.4byte	0x718
 7978 0711 07       		.uleb128 0x7
 7979 0712 B6000000 		.4byte	0xb6
 7980 0716 1D       		.byte	0x1d
 7981 0717 00       		.byte	0
 7982 0718 19       		.uleb128 0x19
 7983 0719 12030000 		.4byte	.LASF76
 7984 071d 05       		.byte	0x5
 7985 071e 4E       		.byte	0x4e
 7986 071f 29070000 		.4byte	0x729
 7987 0723 05       		.uleb128 0x5
 7988 0724 03       		.byte	0x3
 7989 0725 00000000 		.4byte	Buffer_LCD1
 7990 0729 05       		.uleb128 0x5
 7991 072a 08070000 		.4byte	0x708
 7992 072e 19       		.uleb128 0x19
 7993 072f FB010000 		.4byte	.LASF77
 7994 0733 05       		.byte	0x5
 7995 0734 4F       		.byte	0x4f
 7996 0735 3F070000 		.4byte	0x73f
 7997 0739 05       		.uleb128 0x5
 7998 073a 03       		.byte	0x3
 7999 073b 00000000 		.4byte	Buffer_LCD2
 8000 073f 05       		.uleb128 0x5
 8001 0740 08070000 		.4byte	0x708
 8002 0744 19       		.uleb128 0x19
 8003 0745 B4040000 		.4byte	.LASF78
 8004 0749 05       		.byte	0x5
 8005 074a 50       		.byte	0x50
 8006 074b AC000000 		.4byte	0xac
 8007 074f 05       		.uleb128 0x5
 8008 0750 03       		.byte	0x3
 8009 0751 00000000 		.4byte	count_protector
 8010 0755 19       		.uleb128 0x19
 8011 0756 35000000 		.4byte	.LASF79
 8012 075a 05       		.byte	0x5
 8013 075b 50       		.byte	0x50
 8014 075c AC000000 		.4byte	0xac
 8015 0760 05       		.uleb128 0x5
 8016 0761 03       		.byte	0x3
 8017 0762 00000000 		.4byte	count_protector2
 8018 0766 19       		.uleb128 0x19
 8019 0767 5C020000 		.4byte	.LASF80
 8020 076b 05       		.byte	0x5
 8021 076c 51       		.byte	0x51
 8022 076d 77070000 		.4byte	0x777
 8023 0771 05       		.uleb128 0x5
 8024 0772 03       		.byte	0x3
 8025 0773 00000000 		.4byte	password_lcd
 8026 0777 05       		.uleb128 0x5
 8027 0778 5A020000 		.4byte	0x25a
 8028 077c 19       		.uleb128 0x19
 8029 077d C9020000 		.4byte	.LASF81
 8030 0781 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 173


 8031 0782 52       		.byte	0x52
 8032 0783 B1000000 		.4byte	0xb1
 8033 0787 05       		.uleb128 0x5
 8034 0788 03       		.byte	0x3
 8035 0789 00000000 		.4byte	imagen_grado1
 8036 078d 19       		.uleb128 0x19
 8037 078e D7020000 		.4byte	.LASF82
 8038 0792 05       		.byte	0x5
 8039 0793 52       		.byte	0x52
 8040 0794 B1000000 		.4byte	0xb1
 8041 0798 05       		.uleb128 0x5
 8042 0799 03       		.byte	0x3
 8043 079a 00000000 		.4byte	imagen_grado2
 8044 079e 19       		.uleb128 0x19
 8045 079f E5020000 		.4byte	.LASF83
 8046 07a3 05       		.byte	0x5
 8047 07a4 52       		.byte	0x52
 8048 07a5 B1000000 		.4byte	0xb1
 8049 07a9 05       		.uleb128 0x5
 8050 07aa 03       		.byte	0x3
 8051 07ab 00000000 		.4byte	imagen_grado3
 8052 07af 19       		.uleb128 0x19
 8053 07b0 3C010000 		.4byte	.LASF84
 8054 07b4 05       		.byte	0x5
 8055 07b5 52       		.byte	0x52
 8056 07b6 B1000000 		.4byte	0xb1
 8057 07ba 05       		.uleb128 0x5
 8058 07bb 03       		.byte	0x3
 8059 07bc 00000000 		.4byte	imagen_grado4
 8060 07c0 06       		.uleb128 0x6
 8061 07c1 8C000000 		.4byte	0x8c
 8062 07c5 D6070000 		.4byte	0x7d6
 8063 07c9 07       		.uleb128 0x7
 8064 07ca B6000000 		.4byte	0xb6
 8065 07ce 03       		.byte	0x3
 8066 07cf 07       		.uleb128 0x7
 8067 07d0 B6000000 		.4byte	0xb6
 8068 07d4 01       		.byte	0x1
 8069 07d5 00       		.byte	0
 8070 07d6 19       		.uleb128 0x19
 8071 07d7 E3000000 		.4byte	.LASF85
 8072 07db 05       		.byte	0x5
 8073 07dc 53       		.byte	0x53
 8074 07dd E7070000 		.4byte	0x7e7
 8075 07e1 05       		.uleb128 0x5
 8076 07e2 03       		.byte	0x3
 8077 07e3 00000000 		.4byte	prox_caso
 8078 07e7 05       		.uleb128 0x5
 8079 07e8 C0070000 		.4byte	0x7c0
 8080 07ec 06       		.uleb128 0x6
 8081 07ed 81000000 		.4byte	0x81
 8082 07f1 FC070000 		.4byte	0x7fc
 8083 07f5 07       		.uleb128 0x7
 8084 07f6 B6000000 		.4byte	0xb6
 8085 07fa 02       		.byte	0x2
 8086 07fb 00       		.byte	0
 8087 07fc 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 174


 8088 07fd 0C020000 		.4byte	.LASF86
 8089 0801 05       		.byte	0x5
 8090 0802 54       		.byte	0x54
 8091 0803 0D080000 		.4byte	0x80d
 8092 0807 05       		.uleb128 0x5
 8093 0808 03       		.byte	0x3
 8094 0809 00000000 		.4byte	bloqueo_LCD
 8095 080d 05       		.uleb128 0x5
 8096 080e EC070000 		.4byte	0x7ec
 8097 0812 19       		.uleb128 0x19
 8098 0813 25030000 		.4byte	.LASF87
 8099 0817 05       		.byte	0x5
 8100 0818 58       		.byte	0x58
 8101 0819 AC000000 		.4byte	0xac
 8102 081d 05       		.uleb128 0x5
 8103 081e 03       		.byte	0x3
 8104 081f 00000000 		.4byte	ppux10
 8105 0823 06       		.uleb128 0x6
 8106 0824 81000000 		.4byte	0x81
 8107 0828 33080000 		.4byte	0x833
 8108 082c 07       		.uleb128 0x7
 8109 082d B6000000 		.4byte	0xb6
 8110 0831 10       		.byte	0x10
 8111 0832 00       		.byte	0
 8112 0833 19       		.uleb128 0x19
 8113 0834 8C030000 		.4byte	.LASF88
 8114 0838 05       		.byte	0x5
 8115 0839 59       		.byte	0x59
 8116 083a 44080000 		.4byte	0x844
 8117 083e 05       		.uleb128 0x5
 8118 083f 03       		.byte	0x3
 8119 0840 00000000 		.4byte	nombre_pro1
 8120 0844 05       		.uleb128 0x5
 8121 0845 23080000 		.4byte	0x823
 8122 0849 19       		.uleb128 0x19
 8123 084a 96040000 		.4byte	.LASF89
 8124 084e 05       		.byte	0x5
 8125 084f 59       		.byte	0x59
 8126 0850 5A080000 		.4byte	0x85a
 8127 0854 05       		.uleb128 0x5
 8128 0855 03       		.byte	0x3
 8129 0856 00000000 		.4byte	nombre_pro2
 8130 085a 05       		.uleb128 0x5
 8131 085b 23080000 		.4byte	0x823
 8132 085f 19       		.uleb128 0x19
 8133 0860 98030000 		.4byte	.LASF90
 8134 0864 05       		.byte	0x5
 8135 0865 59       		.byte	0x59
 8136 0866 70080000 		.4byte	0x870
 8137 086a 05       		.uleb128 0x5
 8138 086b 03       		.byte	0x3
 8139 086c 00000000 		.4byte	nombre_pro3
 8140 0870 05       		.uleb128 0x5
 8141 0871 23080000 		.4byte	0x823
 8142 0875 19       		.uleb128 0x19
 8143 0876 6C000000 		.4byte	.LASF91
 8144 087a 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 175


 8145 087b 5A       		.byte	0x5a
 8146 087c 86080000 		.4byte	0x886
 8147 0880 05       		.uleb128 0x5
 8148 0881 03       		.byte	0x3
 8149 0882 00000000 		.4byte	version
 8150 0886 05       		.uleb128 0x5
 8151 0887 BD000000 		.4byte	0xbd
 8152 088b 19       		.uleb128 0x19
 8153 088c 58010000 		.4byte	.LASF92
 8154 0890 05       		.byte	0x5
 8155 0891 64       		.byte	0x64
 8156 0892 CD000000 		.4byte	0xcd
 8157 0896 05       		.uleb128 0x5
 8158 0897 03       		.byte	0x3
 8159 0898 00000000 		.4byte	lado1
 8160 089c 19       		.uleb128 0x19
 8161 089d 5E010000 		.4byte	.LASF93
 8162 08a1 05       		.byte	0x5
 8163 08a2 65       		.byte	0x65
 8164 08a3 CD000000 		.4byte	0xcd
 8165 08a7 05       		.uleb128 0x5
 8166 08a8 03       		.byte	0x3
 8167 08a9 00000000 		.4byte	lado2
 8168 08ad 19       		.uleb128 0x19
 8169 08ae 64010000 		.4byte	.LASF94
 8170 08b2 05       		.byte	0x5
 8171 08b3 66       		.byte	0x66
 8172 08b4 CD000000 		.4byte	0xcd
 8173 08b8 05       		.uleb128 0x5
 8174 08b9 03       		.byte	0x3
 8175 08ba 00000000 		.4byte	lado3
 8176 08be 19       		.uleb128 0x19
 8177 08bf 6A010000 		.4byte	.LASF95
 8178 08c3 05       		.byte	0x5
 8179 08c4 67       		.byte	0x67
 8180 08c5 CD000000 		.4byte	0xcd
 8181 08c9 05       		.uleb128 0x5
 8182 08ca 03       		.byte	0x3
 8183 08cb 00000000 		.4byte	lado4
 8184 08cf 06       		.uleb128 0x6
 8185 08d0 81000000 		.4byte	0x81
 8186 08d4 DF080000 		.4byte	0x8df
 8187 08d8 07       		.uleb128 0x7
 8188 08d9 B6000000 		.4byte	0xb6
 8189 08dd 20       		.byte	0x20
 8190 08de 00       		.byte	0
 8191 08df 19       		.uleb128 0x19
 8192 08e0 2C030000 		.4byte	.LASF96
 8193 08e4 05       		.byte	0x5
 8194 08e5 6B       		.byte	0x6b
 8195 08e6 F0080000 		.4byte	0x8f0
 8196 08ea 05       		.uleb128 0x5
 8197 08eb 03       		.byte	0x3
 8198 08ec 00000000 		.4byte	nombre
 8199 08f0 05       		.uleb128 0x5
 8200 08f1 CF080000 		.4byte	0x8cf
 8201 08f5 1A       		.uleb128 0x1a
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 176


 8202 08f6 6E697400 		.ascii	"nit\000"
 8203 08fa 05       		.byte	0x5
 8204 08fb 6C       		.byte	0x6c
 8205 08fc 06090000 		.4byte	0x906
 8206 0900 05       		.uleb128 0x5
 8207 0901 03       		.byte	0x3
 8208 0902 00000000 		.4byte	nit
 8209 0906 05       		.uleb128 0x5
 8210 0907 1F050000 		.4byte	0x51f
 8211 090b 06       		.uleb128 0x6
 8212 090c 81000000 		.4byte	0x81
 8213 0910 1B090000 		.4byte	0x91b
 8214 0914 07       		.uleb128 0x7
 8215 0915 B6000000 		.4byte	0xb6
 8216 0919 13       		.byte	0x13
 8217 091a 00       		.byte	0
 8218 091b 19       		.uleb128 0x19
 8219 091c B3010000 		.4byte	.LASF97
 8220 0920 05       		.byte	0x5
 8221 0921 6D       		.byte	0x6d
 8222 0922 2C090000 		.4byte	0x92c
 8223 0926 05       		.uleb128 0x5
 8224 0927 03       		.byte	0x3
 8225 0928 00000000 		.4byte	telefono
 8226 092c 05       		.uleb128 0x5
 8227 092d 0B090000 		.4byte	0x90b
 8228 0931 19       		.uleb128 0x19
 8229 0932 D9000000 		.4byte	.LASF98
 8230 0936 05       		.byte	0x5
 8231 0937 6E       		.byte	0x6e
 8232 0938 42090000 		.4byte	0x942
 8233 093c 05       		.uleb128 0x5
 8234 093d 03       		.byte	0x3
 8235 093e 00000000 		.4byte	direccion
 8236 0942 05       		.uleb128 0x5
 8237 0943 CF080000 		.4byte	0x8cf
 8238 0947 06       		.uleb128 0x6
 8239 0948 81000000 		.4byte	0x81
 8240 094c 57090000 		.4byte	0x957
 8241 0950 07       		.uleb128 0x7
 8242 0951 B6000000 		.4byte	0xb6
 8243 0955 1F       		.byte	0x1f
 8244 0956 00       		.byte	0
 8245 0957 19       		.uleb128 0x19
 8246 0958 10010000 		.4byte	.LASF99
 8247 095c 05       		.byte	0x5
 8248 095d 6F       		.byte	0x6f
 8249 095e 68090000 		.4byte	0x968
 8250 0962 05       		.uleb128 0x5
 8251 0963 03       		.byte	0x3
 8252 0964 00000000 		.4byte	lema1
 8253 0968 05       		.uleb128 0x5
 8254 0969 47090000 		.4byte	0x947
 8255 096d 19       		.uleb128 0x19
 8256 096e 16010000 		.4byte	.LASF100
 8257 0972 05       		.byte	0x5
 8258 0973 70       		.byte	0x70
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 177


 8259 0974 7E090000 		.4byte	0x97e
 8260 0978 05       		.uleb128 0x5
 8261 0979 03       		.byte	0x3
 8262 097a 00000000 		.4byte	lema2
 8263 097e 05       		.uleb128 0x5
 8264 097f 47090000 		.4byte	0x947
 8265 0983 06       		.uleb128 0x6
 8266 0984 81000000 		.4byte	0x81
 8267 0988 93090000 		.4byte	0x993
 8268 098c 07       		.uleb128 0x7
 8269 098d B6000000 		.4byte	0xb6
 8270 0991 01       		.byte	0x1
 8271 0992 00       		.byte	0
 8272 0993 19       		.uleb128 0x19
 8273 0994 48030000 		.4byte	.LASF101
 8274 0998 05       		.byte	0x5
 8275 0999 71       		.byte	0x71
 8276 099a A4090000 		.4byte	0x9a4
 8277 099e 05       		.uleb128 0x5
 8278 099f 03       		.byte	0x3
 8279 09a0 00000000 		.4byte	id_logo
 8280 09a4 05       		.uleb128 0x5
 8281 09a5 83090000 		.4byte	0x983
 8282 09a9 1A       		.uleb128 0x1a
 8283 09aa 6B6D00   		.ascii	"km\000"
 8284 09ad 05       		.byte	0x5
 8285 09ae 72       		.byte	0x72
 8286 09af B9090000 		.4byte	0x9b9
 8287 09b3 05       		.uleb128 0x5
 8288 09b4 03       		.byte	0x3
 8289 09b5 00000000 		.4byte	km
 8290 09b9 05       		.uleb128 0x5
 8291 09ba 83090000 		.4byte	0x983
 8292 09be 19       		.uleb128 0x19
 8293 09bf 7B040000 		.4byte	.LASF102
 8294 09c3 05       		.byte	0x5
 8295 09c4 73       		.byte	0x73
 8296 09c5 EC070000 		.4byte	0x7ec
 8297 09c9 05       		.uleb128 0x5
 8298 09ca 03       		.byte	0x3
 8299 09cb 00000000 		.4byte	fecha
 8300 09cf 19       		.uleb128 0x19
 8301 09d0 9B000000 		.4byte	.LASF103
 8302 09d4 05       		.byte	0x5
 8303 09d5 74       		.byte	0x74
 8304 09d6 83090000 		.4byte	0x983
 8305 09da 05       		.uleb128 0x5
 8306 09db 03       		.byte	0x3
 8307 09dc 00000000 		.4byte	hora
 8308 09e0 19       		.uleb128 0x19
 8309 09e1 B9000000 		.4byte	.LASF104
 8310 09e5 05       		.byte	0x5
 8311 09e6 88       		.byte	0x88
 8312 09e7 73010000 		.4byte	0x173
 8313 09eb 05       		.uleb128 0x5
 8314 09ec 03       		.byte	0x3
 8315 09ed 00000000 		.4byte	rventa1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 178


 8316 09f1 19       		.uleb128 0x19
 8317 09f2 C1000000 		.4byte	.LASF105
 8318 09f6 05       		.byte	0x5
 8319 09f7 89       		.byte	0x89
 8320 09f8 73010000 		.4byte	0x173
 8321 09fc 05       		.uleb128 0x5
 8322 09fd 03       		.byte	0x3
 8323 09fe 00000000 		.4byte	rventa2
 8324 0a02 19       		.uleb128 0x19
 8325 0a03 C9000000 		.4byte	.LASF106
 8326 0a07 05       		.byte	0x5
 8327 0a08 8A       		.byte	0x8a
 8328 0a09 73010000 		.4byte	0x173
 8329 0a0d 05       		.uleb128 0x5
 8330 0a0e 03       		.byte	0x3
 8331 0a0f 00000000 		.4byte	rventa3
 8332 0a13 19       		.uleb128 0x19
 8333 0a14 D1000000 		.4byte	.LASF107
 8334 0a18 05       		.byte	0x5
 8335 0a19 8B       		.byte	0x8b
 8336 0a1a 73010000 		.4byte	0x173
 8337 0a1e 05       		.uleb128 0x5
 8338 0a1f 03       		.byte	0x3
 8339 0a20 00000000 		.4byte	rventa4
 8340 0a24 19       		.uleb128 0x19
 8341 0a25 85000000 		.4byte	.LASF108
 8342 0a29 05       		.byte	0x5
 8343 0a2a 90       		.byte	0x90
 8344 0a2b 81000000 		.4byte	0x81
 8345 0a2f 05       		.uleb128 0x5
 8346 0a30 03       		.byte	0x3
 8347 0a31 00000000 		.4byte	ok_RF
 8348 0a35 19       		.uleb128 0x19
 8349 0a36 8B040000 		.4byte	.LASF109
 8350 0a3a 05       		.byte	0x5
 8351 0a3b 91       		.byte	0x91
 8352 0a3c 81000000 		.4byte	0x81
 8353 0a40 05       		.uleb128 0x5
 8354 0a41 03       		.byte	0x3
 8355 0a42 00000000 		.4byte	ok_datosRF
 8356 0a46 06       		.uleb128 0x6
 8357 0a47 81000000 		.4byte	0x81
 8358 0a4b 560A0000 		.4byte	0xa56
 8359 0a4f 07       		.uleb128 0x7
 8360 0a50 B6000000 		.4byte	0xb6
 8361 0a54 C7       		.byte	0xc7
 8362 0a55 00       		.byte	0
 8363 0a56 19       		.uleb128 0x19
 8364 0a57 DF010000 		.4byte	.LASF110
 8365 0a5b 05       		.byte	0x5
 8366 0a5c 92       		.byte	0x92
 8367 0a5d 460A0000 		.4byte	0xa46
 8368 0a61 05       		.uleb128 0x5
 8369 0a62 03       		.byte	0x3
 8370 0a63 00000000 		.4byte	rf_mod
 8371 0a67 06       		.uleb128 0x6
 8372 0a68 81000000 		.4byte	0x81
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 179


 8373 0a6c 770A0000 		.4byte	0xa77
 8374 0a70 07       		.uleb128 0x7
 8375 0a71 B6000000 		.4byte	0xb6
 8376 0a75 3F       		.byte	0x3f
 8377 0a76 00       		.byte	0
 8378 0a77 19       		.uleb128 0x19
 8379 0a78 05010000 		.4byte	.LASF111
 8380 0a7c 05       		.byte	0x5
 8381 0a7d 97       		.byte	0x97
 8382 0a7e 670A0000 		.4byte	0xa67
 8383 0a82 05       		.uleb128 0x5
 8384 0a83 03       		.byte	0x3
 8385 0a84 00000000 		.4byte	buffer_i2c
 8386 0a88 19       		.uleb128 0x19
 8387 0a89 33030000 		.4byte	.LASF112
 8388 0a8d 05       		.byte	0x5
 8389 0a8e 9C       		.byte	0x9c
 8390 0a8f 81000000 		.4byte	0x81
 8391 0a93 05       		.uleb128 0x5
 8392 0a94 03       		.byte	0x3
 8393 0a95 00000000 		.4byte	crc_total
 8394 0a99 19       		.uleb128 0x19
 8395 0a9a 35020000 		.4byte	.LASF113
 8396 0a9e 05       		.byte	0x5
 8397 0a9f A0       		.byte	0xa0
 8398 0aa0 83090000 		.4byte	0x983
 8399 0aa4 05       		.uleb128 0x5
 8400 0aa5 03       		.byte	0x3
 8401 0aa6 00000000 		.4byte	print1
 8402 0aaa 19       		.uleb128 0x19
 8403 0aab 3C020000 		.4byte	.LASF114
 8404 0aaf 05       		.byte	0x5
 8405 0ab0 A1       		.byte	0xa1
 8406 0ab1 83090000 		.4byte	0x983
 8407 0ab5 05       		.uleb128 0x5
 8408 0ab6 03       		.byte	0x3
 8409 0ab7 00000000 		.4byte	print2
 8410 0abb 19       		.uleb128 0x19
 8411 0abc BE020000 		.4byte	.LASF115
 8412 0ac0 01       		.byte	0x1
 8413 0ac1 2F       		.byte	0x2f
 8414 0ac2 81000000 		.4byte	0x81
 8415 0ac6 05       		.uleb128 0x5
 8416 0ac7 03       		.byte	0x3
 8417 0ac8 00000000 		.4byte	rx_timeout
 8418 0acc 19       		.uleb128 0x19
 8419 0acd 70010000 		.4byte	.LASF116
 8420 0ad1 01       		.byte	0x1
 8421 0ad2 30       		.byte	0x30
 8422 0ad3 23080000 		.4byte	0x823
 8423 0ad7 05       		.uleb128 0x5
 8424 0ad8 03       		.byte	0x3
 8425 0ad9 00000000 		.4byte	msn_tc
 8426 0add 06       		.uleb128 0x6
 8427 0ade 81000000 		.4byte	0x81
 8428 0ae2 ED0A0000 		.4byte	0xaed
 8429 0ae6 07       		.uleb128 0x7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 180


 8430 0ae7 B6000000 		.4byte	0xb6
 8431 0aeb 0C       		.byte	0xc
 8432 0aec 00       		.byte	0
 8433 0aed 19       		.uleb128 0x19
 8434 0aee 7E010000 		.4byte	.LASF117
 8435 0af2 01       		.byte	0x1
 8436 0af3 31       		.byte	0x31
 8437 0af4 DD0A0000 		.4byte	0xadd
 8438 0af8 05       		.uleb128 0x5
 8439 0af9 03       		.byte	0x3
 8440 0afa 00000000 		.4byte	msn_te
 8441 0afe 06       		.uleb128 0x6
 8442 0aff 81000000 		.4byte	0x81
 8443 0b03 0E0B0000 		.4byte	0xb0e
 8444 0b07 07       		.uleb128 0x7
 8445 0b08 B6000000 		.4byte	0xb6
 8446 0b0c 0D       		.byte	0xd
 8447 0b0d 00       		.byte	0
 8448 0b0e 19       		.uleb128 0x19
 8449 0b0f 77010000 		.4byte	.LASF118
 8450 0b13 01       		.byte	0x1
 8451 0b14 32       		.byte	0x32
 8452 0b15 FE0A0000 		.4byte	0xafe
 8453 0b19 05       		.uleb128 0x5
 8454 0b1a 03       		.byte	0x3
 8455 0b1b 00000000 		.4byte	msn_td
 8456 0b1f 19       		.uleb128 0x19
 8457 0b20 D4010000 		.4byte	.LASF119
 8458 0b24 01       		.byte	0x1
 8459 0b25 33       		.byte	0x33
 8460 0b26 1F050000 		.4byte	0x51f
 8461 0b2a 05       		.uleb128 0x5
 8462 0b2b 03       		.byte	0x3
 8463 0b2c 00000000 		.4byte	msn_lecact
 8464 0b30 19       		.uleb128 0x19
 8465 0b31 FA000000 		.4byte	.LASF120
 8466 0b35 01       		.byte	0x1
 8467 0b36 34       		.byte	0x34
 8468 0b37 23080000 		.4byte	0x823
 8469 0b3b 05       		.uleb128 0x5
 8470 0b3c 03       		.byte	0x3
 8471 0b3d 00000000 		.4byte	msn_lecaan
 8472 0b41 19       		.uleb128 0x19
 8473 0b42 29020000 		.4byte	.LASF121
 8474 0b46 01       		.byte	0x1
 8475 0b47 35       		.byte	0x35
 8476 0b48 9C040000 		.4byte	0x49c
 8477 0b4c 05       		.uleb128 0x5
 8478 0b4d 03       		.byte	0x3
 8479 0b4e 00000000 		.4byte	msn_tventas
 8480 0b52 00       		.byte	0
 8481              		.section	.debug_abbrev,"",%progbits
 8482              	.Ldebug_abbrev0:
 8483 0000 01       		.uleb128 0x1
 8484 0001 11       		.uleb128 0x11
 8485 0002 01       		.byte	0x1
 8486 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 181


 8487 0004 0E       		.uleb128 0xe
 8488 0005 13       		.uleb128 0x13
 8489 0006 0B       		.uleb128 0xb
 8490 0007 03       		.uleb128 0x3
 8491 0008 0E       		.uleb128 0xe
 8492 0009 1B       		.uleb128 0x1b
 8493 000a 0E       		.uleb128 0xe
 8494 000b 55       		.uleb128 0x55
 8495 000c 17       		.uleb128 0x17
 8496 000d 11       		.uleb128 0x11
 8497 000e 01       		.uleb128 0x1
 8498 000f 10       		.uleb128 0x10
 8499 0010 17       		.uleb128 0x17
 8500 0011 00       		.byte	0
 8501 0012 00       		.byte	0
 8502 0013 02       		.uleb128 0x2
 8503 0014 24       		.uleb128 0x24
 8504 0015 00       		.byte	0
 8505 0016 0B       		.uleb128 0xb
 8506 0017 0B       		.uleb128 0xb
 8507 0018 3E       		.uleb128 0x3e
 8508 0019 0B       		.uleb128 0xb
 8509 001a 03       		.uleb128 0x3
 8510 001b 0E       		.uleb128 0xe
 8511 001c 00       		.byte	0
 8512 001d 00       		.byte	0
 8513 001e 03       		.uleb128 0x3
 8514 001f 16       		.uleb128 0x16
 8515 0020 00       		.byte	0
 8516 0021 03       		.uleb128 0x3
 8517 0022 0E       		.uleb128 0xe
 8518 0023 3A       		.uleb128 0x3a
 8519 0024 0B       		.uleb128 0xb
 8520 0025 3B       		.uleb128 0x3b
 8521 0026 0B       		.uleb128 0xb
 8522 0027 49       		.uleb128 0x49
 8523 0028 13       		.uleb128 0x13
 8524 0029 00       		.byte	0
 8525 002a 00       		.byte	0
 8526 002b 04       		.uleb128 0x4
 8527 002c 24       		.uleb128 0x24
 8528 002d 00       		.byte	0
 8529 002e 0B       		.uleb128 0xb
 8530 002f 0B       		.uleb128 0xb
 8531 0030 3E       		.uleb128 0x3e
 8532 0031 0B       		.uleb128 0xb
 8533 0032 03       		.uleb128 0x3
 8534 0033 08       		.uleb128 0x8
 8535 0034 00       		.byte	0
 8536 0035 00       		.byte	0
 8537 0036 05       		.uleb128 0x5
 8538 0037 35       		.uleb128 0x35
 8539 0038 00       		.byte	0
 8540 0039 49       		.uleb128 0x49
 8541 003a 13       		.uleb128 0x13
 8542 003b 00       		.byte	0
 8543 003c 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 182


 8544 003d 06       		.uleb128 0x6
 8545 003e 01       		.uleb128 0x1
 8546 003f 01       		.byte	0x1
 8547 0040 49       		.uleb128 0x49
 8548 0041 13       		.uleb128 0x13
 8549 0042 01       		.uleb128 0x1
 8550 0043 13       		.uleb128 0x13
 8551 0044 00       		.byte	0
 8552 0045 00       		.byte	0
 8553 0046 07       		.uleb128 0x7
 8554 0047 21       		.uleb128 0x21
 8555 0048 00       		.byte	0
 8556 0049 49       		.uleb128 0x49
 8557 004a 13       		.uleb128 0x13
 8558 004b 2F       		.uleb128 0x2f
 8559 004c 0B       		.uleb128 0xb
 8560 004d 00       		.byte	0
 8561 004e 00       		.byte	0
 8562 004f 08       		.uleb128 0x8
 8563 0050 13       		.uleb128 0x13
 8564 0051 01       		.byte	0x1
 8565 0052 03       		.uleb128 0x3
 8566 0053 0E       		.uleb128 0xe
 8567 0054 0B       		.uleb128 0xb
 8568 0055 0B       		.uleb128 0xb
 8569 0056 3A       		.uleb128 0x3a
 8570 0057 0B       		.uleb128 0xb
 8571 0058 3B       		.uleb128 0x3b
 8572 0059 0B       		.uleb128 0xb
 8573 005a 01       		.uleb128 0x1
 8574 005b 13       		.uleb128 0x13
 8575 005c 00       		.byte	0
 8576 005d 00       		.byte	0
 8577 005e 09       		.uleb128 0x9
 8578 005f 0D       		.uleb128 0xd
 8579 0060 00       		.byte	0
 8580 0061 03       		.uleb128 0x3
 8581 0062 08       		.uleb128 0x8
 8582 0063 3A       		.uleb128 0x3a
 8583 0064 0B       		.uleb128 0xb
 8584 0065 3B       		.uleb128 0x3b
 8585 0066 0B       		.uleb128 0xb
 8586 0067 49       		.uleb128 0x49
 8587 0068 13       		.uleb128 0x13
 8588 0069 38       		.uleb128 0x38
 8589 006a 0B       		.uleb128 0xb
 8590 006b 00       		.byte	0
 8591 006c 00       		.byte	0
 8592 006d 0A       		.uleb128 0xa
 8593 006e 0D       		.uleb128 0xd
 8594 006f 00       		.byte	0
 8595 0070 03       		.uleb128 0x3
 8596 0071 0E       		.uleb128 0xe
 8597 0072 3A       		.uleb128 0x3a
 8598 0073 0B       		.uleb128 0xb
 8599 0074 3B       		.uleb128 0x3b
 8600 0075 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 183


 8601 0076 49       		.uleb128 0x49
 8602 0077 13       		.uleb128 0x13
 8603 0078 38       		.uleb128 0x38
 8604 0079 0B       		.uleb128 0xb
 8605 007a 00       		.byte	0
 8606 007b 00       		.byte	0
 8607 007c 0B       		.uleb128 0xb
 8608 007d 2E       		.uleb128 0x2e
 8609 007e 00       		.byte	0
 8610 007f 3F       		.uleb128 0x3f
 8611 0080 19       		.uleb128 0x19
 8612 0081 03       		.uleb128 0x3
 8613 0082 0E       		.uleb128 0xe
 8614 0083 3A       		.uleb128 0x3a
 8615 0084 0B       		.uleb128 0xb
 8616 0085 3B       		.uleb128 0x3b
 8617 0086 0B       		.uleb128 0xb
 8618 0087 27       		.uleb128 0x27
 8619 0088 19       		.uleb128 0x19
 8620 0089 11       		.uleb128 0x11
 8621 008a 01       		.uleb128 0x1
 8622 008b 12       		.uleb128 0x12
 8623 008c 06       		.uleb128 0x6
 8624 008d 40       		.uleb128 0x40
 8625 008e 18       		.uleb128 0x18
 8626 008f 9642     		.uleb128 0x2116
 8627 0091 19       		.uleb128 0x19
 8628 0092 00       		.byte	0
 8629 0093 00       		.byte	0
 8630 0094 0C       		.uleb128 0xc
 8631 0095 2E       		.uleb128 0x2e
 8632 0096 01       		.byte	0x1
 8633 0097 3F       		.uleb128 0x3f
 8634 0098 19       		.uleb128 0x19
 8635 0099 03       		.uleb128 0x3
 8636 009a 0E       		.uleb128 0xe
 8637 009b 3A       		.uleb128 0x3a
 8638 009c 0B       		.uleb128 0xb
 8639 009d 3B       		.uleb128 0x3b
 8640 009e 0B       		.uleb128 0xb
 8641 009f 27       		.uleb128 0x27
 8642 00a0 19       		.uleb128 0x19
 8643 00a1 49       		.uleb128 0x49
 8644 00a2 13       		.uleb128 0x13
 8645 00a3 11       		.uleb128 0x11
 8646 00a4 01       		.uleb128 0x1
 8647 00a5 12       		.uleb128 0x12
 8648 00a6 06       		.uleb128 0x6
 8649 00a7 40       		.uleb128 0x40
 8650 00a8 18       		.uleb128 0x18
 8651 00a9 9642     		.uleb128 0x2116
 8652 00ab 19       		.uleb128 0x19
 8653 00ac 01       		.uleb128 0x1
 8654 00ad 13       		.uleb128 0x13
 8655 00ae 00       		.byte	0
 8656 00af 00       		.byte	0
 8657 00b0 0D       		.uleb128 0xd
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 184


 8658 00b1 05       		.uleb128 0x5
 8659 00b2 00       		.byte	0
 8660 00b3 03       		.uleb128 0x3
 8661 00b4 08       		.uleb128 0x8
 8662 00b5 3A       		.uleb128 0x3a
 8663 00b6 0B       		.uleb128 0xb
 8664 00b7 3B       		.uleb128 0x3b
 8665 00b8 0B       		.uleb128 0xb
 8666 00b9 49       		.uleb128 0x49
 8667 00ba 13       		.uleb128 0x13
 8668 00bb 02       		.uleb128 0x2
 8669 00bc 18       		.uleb128 0x18
 8670 00bd 00       		.byte	0
 8671 00be 00       		.byte	0
 8672 00bf 0E       		.uleb128 0xe
 8673 00c0 34       		.uleb128 0x34
 8674 00c1 00       		.byte	0
 8675 00c2 03       		.uleb128 0x3
 8676 00c3 0E       		.uleb128 0xe
 8677 00c4 3A       		.uleb128 0x3a
 8678 00c5 0B       		.uleb128 0xb
 8679 00c6 3B       		.uleb128 0x3b
 8680 00c7 0B       		.uleb128 0xb
 8681 00c8 49       		.uleb128 0x49
 8682 00c9 13       		.uleb128 0x13
 8683 00ca 02       		.uleb128 0x2
 8684 00cb 18       		.uleb128 0x18
 8685 00cc 00       		.byte	0
 8686 00cd 00       		.byte	0
 8687 00ce 0F       		.uleb128 0xf
 8688 00cf 34       		.uleb128 0x34
 8689 00d0 00       		.byte	0
 8690 00d1 03       		.uleb128 0x3
 8691 00d2 08       		.uleb128 0x8
 8692 00d3 3A       		.uleb128 0x3a
 8693 00d4 0B       		.uleb128 0xb
 8694 00d5 3B       		.uleb128 0x3b
 8695 00d6 0B       		.uleb128 0xb
 8696 00d7 49       		.uleb128 0x49
 8697 00d8 13       		.uleb128 0x13
 8698 00d9 02       		.uleb128 0x2
 8699 00da 18       		.uleb128 0x18
 8700 00db 00       		.byte	0
 8701 00dc 00       		.byte	0
 8702 00dd 10       		.uleb128 0x10
 8703 00de 2E       		.uleb128 0x2e
 8704 00df 01       		.byte	0x1
 8705 00e0 3F       		.uleb128 0x3f
 8706 00e1 19       		.uleb128 0x19
 8707 00e2 03       		.uleb128 0x3
 8708 00e3 0E       		.uleb128 0xe
 8709 00e4 3A       		.uleb128 0x3a
 8710 00e5 0B       		.uleb128 0xb
 8711 00e6 3B       		.uleb128 0x3b
 8712 00e7 0B       		.uleb128 0xb
 8713 00e8 27       		.uleb128 0x27
 8714 00e9 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 185


 8715 00ea 11       		.uleb128 0x11
 8716 00eb 01       		.uleb128 0x1
 8717 00ec 12       		.uleb128 0x12
 8718 00ed 06       		.uleb128 0x6
 8719 00ee 40       		.uleb128 0x40
 8720 00ef 18       		.uleb128 0x18
 8721 00f0 9642     		.uleb128 0x2116
 8722 00f2 19       		.uleb128 0x19
 8723 00f3 01       		.uleb128 0x1
 8724 00f4 13       		.uleb128 0x13
 8725 00f5 00       		.byte	0
 8726 00f6 00       		.byte	0
 8727 00f7 11       		.uleb128 0x11
 8728 00f8 2E       		.uleb128 0x2e
 8729 00f9 01       		.byte	0x1
 8730 00fa 3F       		.uleb128 0x3f
 8731 00fb 19       		.uleb128 0x19
 8732 00fc 03       		.uleb128 0x3
 8733 00fd 0E       		.uleb128 0xe
 8734 00fe 3A       		.uleb128 0x3a
 8735 00ff 0B       		.uleb128 0xb
 8736 0100 3B       		.uleb128 0x3b
 8737 0101 05       		.uleb128 0x5
 8738 0102 27       		.uleb128 0x27
 8739 0103 19       		.uleb128 0x19
 8740 0104 11       		.uleb128 0x11
 8741 0105 01       		.uleb128 0x1
 8742 0106 12       		.uleb128 0x12
 8743 0107 06       		.uleb128 0x6
 8744 0108 40       		.uleb128 0x40
 8745 0109 18       		.uleb128 0x18
 8746 010a 9642     		.uleb128 0x2116
 8747 010c 19       		.uleb128 0x19
 8748 010d 01       		.uleb128 0x1
 8749 010e 13       		.uleb128 0x13
 8750 010f 00       		.byte	0
 8751 0110 00       		.byte	0
 8752 0111 12       		.uleb128 0x12
 8753 0112 05       		.uleb128 0x5
 8754 0113 00       		.byte	0
 8755 0114 03       		.uleb128 0x3
 8756 0115 08       		.uleb128 0x8
 8757 0116 3A       		.uleb128 0x3a
 8758 0117 0B       		.uleb128 0xb
 8759 0118 3B       		.uleb128 0x3b
 8760 0119 05       		.uleb128 0x5
 8761 011a 49       		.uleb128 0x49
 8762 011b 13       		.uleb128 0x13
 8763 011c 02       		.uleb128 0x2
 8764 011d 18       		.uleb128 0x18
 8765 011e 00       		.byte	0
 8766 011f 00       		.byte	0
 8767 0120 13       		.uleb128 0x13
 8768 0121 2E       		.uleb128 0x2e
 8769 0122 01       		.byte	0x1
 8770 0123 3F       		.uleb128 0x3f
 8771 0124 19       		.uleb128 0x19
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 186


 8772 0125 03       		.uleb128 0x3
 8773 0126 0E       		.uleb128 0xe
 8774 0127 3A       		.uleb128 0x3a
 8775 0128 0B       		.uleb128 0xb
 8776 0129 3B       		.uleb128 0x3b
 8777 012a 05       		.uleb128 0x5
 8778 012b 27       		.uleb128 0x27
 8779 012c 19       		.uleb128 0x19
 8780 012d 49       		.uleb128 0x49
 8781 012e 13       		.uleb128 0x13
 8782 012f 11       		.uleb128 0x11
 8783 0130 01       		.uleb128 0x1
 8784 0131 12       		.uleb128 0x12
 8785 0132 06       		.uleb128 0x6
 8786 0133 40       		.uleb128 0x40
 8787 0134 18       		.uleb128 0x18
 8788 0135 9642     		.uleb128 0x2116
 8789 0137 19       		.uleb128 0x19
 8790 0138 01       		.uleb128 0x1
 8791 0139 13       		.uleb128 0x13
 8792 013a 00       		.byte	0
 8793 013b 00       		.byte	0
 8794 013c 14       		.uleb128 0x14
 8795 013d 34       		.uleb128 0x34
 8796 013e 00       		.byte	0
 8797 013f 03       		.uleb128 0x3
 8798 0140 08       		.uleb128 0x8
 8799 0141 3A       		.uleb128 0x3a
 8800 0142 0B       		.uleb128 0xb
 8801 0143 3B       		.uleb128 0x3b
 8802 0144 05       		.uleb128 0x5
 8803 0145 49       		.uleb128 0x49
 8804 0146 13       		.uleb128 0x13
 8805 0147 02       		.uleb128 0x2
 8806 0148 18       		.uleb128 0x18
 8807 0149 00       		.byte	0
 8808 014a 00       		.byte	0
 8809 014b 15       		.uleb128 0x15
 8810 014c 05       		.uleb128 0x5
 8811 014d 00       		.byte	0
 8812 014e 03       		.uleb128 0x3
 8813 014f 0E       		.uleb128 0xe
 8814 0150 3A       		.uleb128 0x3a
 8815 0151 0B       		.uleb128 0xb
 8816 0152 3B       		.uleb128 0x3b
 8817 0153 05       		.uleb128 0x5
 8818 0154 49       		.uleb128 0x49
 8819 0155 13       		.uleb128 0x13
 8820 0156 02       		.uleb128 0x2
 8821 0157 18       		.uleb128 0x18
 8822 0158 00       		.byte	0
 8823 0159 00       		.byte	0
 8824 015a 16       		.uleb128 0x16
 8825 015b 34       		.uleb128 0x34
 8826 015c 00       		.byte	0
 8827 015d 03       		.uleb128 0x3
 8828 015e 0E       		.uleb128 0xe
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 187


 8829 015f 3A       		.uleb128 0x3a
 8830 0160 0B       		.uleb128 0xb
 8831 0161 3B       		.uleb128 0x3b
 8832 0162 05       		.uleb128 0x5
 8833 0163 49       		.uleb128 0x49
 8834 0164 13       		.uleb128 0x13
 8835 0165 02       		.uleb128 0x2
 8836 0166 18       		.uleb128 0x18
 8837 0167 00       		.byte	0
 8838 0168 00       		.byte	0
 8839 0169 17       		.uleb128 0x17
 8840 016a 0F       		.uleb128 0xf
 8841 016b 00       		.byte	0
 8842 016c 0B       		.uleb128 0xb
 8843 016d 0B       		.uleb128 0xb
 8844 016e 49       		.uleb128 0x49
 8845 016f 13       		.uleb128 0x13
 8846 0170 00       		.byte	0
 8847 0171 00       		.byte	0
 8848 0172 18       		.uleb128 0x18
 8849 0173 34       		.uleb128 0x34
 8850 0174 00       		.byte	0
 8851 0175 03       		.uleb128 0x3
 8852 0176 0E       		.uleb128 0xe
 8853 0177 3A       		.uleb128 0x3a
 8854 0178 0B       		.uleb128 0xb
 8855 0179 3B       		.uleb128 0x3b
 8856 017a 05       		.uleb128 0x5
 8857 017b 49       		.uleb128 0x49
 8858 017c 13       		.uleb128 0x13
 8859 017d 3F       		.uleb128 0x3f
 8860 017e 19       		.uleb128 0x19
 8861 017f 3C       		.uleb128 0x3c
 8862 0180 19       		.uleb128 0x19
 8863 0181 00       		.byte	0
 8864 0182 00       		.byte	0
 8865 0183 19       		.uleb128 0x19
 8866 0184 34       		.uleb128 0x34
 8867 0185 00       		.byte	0
 8868 0186 03       		.uleb128 0x3
 8869 0187 0E       		.uleb128 0xe
 8870 0188 3A       		.uleb128 0x3a
 8871 0189 0B       		.uleb128 0xb
 8872 018a 3B       		.uleb128 0x3b
 8873 018b 0B       		.uleb128 0xb
 8874 018c 49       		.uleb128 0x49
 8875 018d 13       		.uleb128 0x13
 8876 018e 3F       		.uleb128 0x3f
 8877 018f 19       		.uleb128 0x19
 8878 0190 02       		.uleb128 0x2
 8879 0191 18       		.uleb128 0x18
 8880 0192 00       		.byte	0
 8881 0193 00       		.byte	0
 8882 0194 1A       		.uleb128 0x1a
 8883 0195 34       		.uleb128 0x34
 8884 0196 00       		.byte	0
 8885 0197 03       		.uleb128 0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 188


 8886 0198 08       		.uleb128 0x8
 8887 0199 3A       		.uleb128 0x3a
 8888 019a 0B       		.uleb128 0xb
 8889 019b 3B       		.uleb128 0x3b
 8890 019c 0B       		.uleb128 0xb
 8891 019d 49       		.uleb128 0x49
 8892 019e 13       		.uleb128 0x13
 8893 019f 3F       		.uleb128 0x3f
 8894 01a0 19       		.uleb128 0x19
 8895 01a1 02       		.uleb128 0x2
 8896 01a2 18       		.uleb128 0x18
 8897 01a3 00       		.byte	0
 8898 01a4 00       		.byte	0
 8899 01a5 00       		.byte	0
 8900              		.section	.debug_aranges,"",%progbits
 8901 0000 64000000 		.4byte	0x64
 8902 0004 0200     		.2byte	0x2
 8903 0006 00000000 		.4byte	.Ldebug_info0
 8904 000a 04       		.byte	0x4
 8905 000b 00       		.byte	0
 8906 000c 0000     		.2byte	0
 8907 000e 0000     		.2byte	0
 8908 0010 00000000 		.4byte	.LFB63
 8909 0014 14000000 		.4byte	.LFE63-.LFB63
 8910 0018 00000000 		.4byte	.LFB64
 8911 001c 98000000 		.4byte	.LFE64-.LFB64
 8912 0020 00000000 		.4byte	.LFB65
 8913 0024 EC000000 		.4byte	.LFE65-.LFB65
 8914 0028 00000000 		.4byte	.LFB66
 8915 002c 36000000 		.4byte	.LFE66-.LFB66
 8916 0030 00000000 		.4byte	.LFB67
 8917 0034 7C010000 		.4byte	.LFE67-.LFB67
 8918 0038 00000000 		.4byte	.LFB68
 8919 003c 24000000 		.4byte	.LFE68-.LFB68
 8920 0040 00000000 		.4byte	.LFB69
 8921 0044 10060000 		.4byte	.LFE69-.LFB69
 8922 0048 00000000 		.4byte	.LFB70
 8923 004c 7C080000 		.4byte	.LFE70-.LFB70
 8924 0050 00000000 		.4byte	.LFB71
 8925 0054 54020000 		.4byte	.LFE71-.LFB71
 8926 0058 00000000 		.4byte	.LFB72
 8927 005c 9C170000 		.4byte	.LFE72-.LFB72
 8928 0060 00000000 		.4byte	0
 8929 0064 00000000 		.4byte	0
 8930              		.section	.debug_ranges,"",%progbits
 8931              	.Ldebug_ranges0:
 8932 0000 00000000 		.4byte	.LFB63
 8933 0004 14000000 		.4byte	.LFE63
 8934 0008 00000000 		.4byte	.LFB64
 8935 000c 98000000 		.4byte	.LFE64
 8936 0010 00000000 		.4byte	.LFB65
 8937 0014 EC000000 		.4byte	.LFE65
 8938 0018 00000000 		.4byte	.LFB66
 8939 001c 36000000 		.4byte	.LFE66
 8940 0020 00000000 		.4byte	.LFB67
 8941 0024 7C010000 		.4byte	.LFE67
 8942 0028 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 189


 8943 002c 24000000 		.4byte	.LFE68
 8944 0030 00000000 		.4byte	.LFB69
 8945 0034 10060000 		.4byte	.LFE69
 8946 0038 00000000 		.4byte	.LFB70
 8947 003c 7C080000 		.4byte	.LFE70
 8948 0040 00000000 		.4byte	.LFB71
 8949 0044 54020000 		.4byte	.LFE71
 8950 0048 00000000 		.4byte	.LFB72
 8951 004c 9C170000 		.4byte	.LFE72
 8952 0050 00000000 		.4byte	0
 8953 0054 00000000 		.4byte	0
 8954              		.section	.debug_line,"",%progbits
 8955              	.Ldebug_line0:
 8956 0000 600E0000 		.section	.debug_str,"MS",%progbits,1
 8956      02006E01 
 8956      00000201 
 8956      FB0E0D00 
 8956      01010101 
 8957              	.LASF33:
 8958 0000 70617373 		.ascii	"password\000"
 8958      776F7264 
 8958      00
 8959              	.LASF72:
 8960 0009 666C756A 		.ascii	"flujo_LCD1\000"
 8960      6F5F4C43 
 8960      443100
 8961              	.LASF73:
 8962 0014 666C756A 		.ascii	"flujo_LCD2\000"
 8962      6F5F4C43 
 8962      443200
 8963              	.LASF74:
 8964 001f 666C756A 		.ascii	"flujo_LCD3\000"
 8964      6F5F4C43 
 8964      443300
 8965              	.LASF75:
 8966 002a 666C756A 		.ascii	"flujo_LCD4\000"
 8966      6F5F4C43 
 8966      443400
 8967              	.LASF79:
 8968 0035 636F756E 		.ascii	"count_protector2\000"
 8968      745F7072 
 8968      6F746563 
 8968      746F7232 
 8968      00
 8969              	.LASF59:
 8970 0046 69645F63 		.ascii	"id_coma1\000"
 8970      6F6D6131 
 8970      00
 8971              	.LASF62:
 8972 004f 69645F63 		.ascii	"id_coma2\000"
 8972      6F6D6132 
 8972      00
 8973              	.LASF46:
 8974 0058 62756666 		.ascii	"buffer\000"
 8974      657200
 8975              	.LASF8:
 8976 005f 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 190


 8976      676E6564 
 8976      20696E74 
 8976      00
 8977              	.LASF91:
 8978 006c 76657273 		.ascii	"version\000"
 8978      696F6E00 
 8979              	.LASF9:
 8980 0074 5F5F696E 		.ascii	"__int32_t\000"
 8980      7433325F 
 8980      7400
 8981              	.LASF51:
 8982 007e 70726563 		.ascii	"precio\000"
 8982      696F00
 8983              	.LASF108:
 8984 0085 6F6B5F52 		.ascii	"ok_RF\000"
 8984      4600
 8985              	.LASF52:
 8986 008b 6E756D5F 		.ascii	"num_man\000"
 8986      6D616E00 
 8987              	.LASF49:
 8988 0093 64656369 		.ascii	"decimal\000"
 8988      6D616C00 
 8989              	.LASF103:
 8990 009b 686F7261 		.ascii	"hora\000"
 8990      00
 8991              	.LASF70:
 8992 00a0 7465636C 		.ascii	"teclas1\000"
 8992      61733100 
 8993              	.LASF71:
 8994 00a8 7465636C 		.ascii	"teclas2\000"
 8994      61733200 
 8995              	.LASF23:
 8996 00b0 706F7369 		.ascii	"posicion\000"
 8996      63696F6E 
 8996      00
 8997              	.LASF104:
 8998 00b9 7276656E 		.ascii	"rventa1\000"
 8998      74613100 
 8999              	.LASF105:
 9000 00c1 7276656E 		.ascii	"rventa2\000"
 9000      74613200 
 9001              	.LASF106:
 9002 00c9 7276656E 		.ascii	"rventa3\000"
 9002      74613300 
 9003              	.LASF107:
 9004 00d1 7276656E 		.ascii	"rventa4\000"
 9004      74613400 
 9005              	.LASF98:
 9006 00d9 64697265 		.ascii	"direccion\000"
 9006      6363696F 
 9006      6E00
 9007              	.LASF85:
 9008 00e3 70726F78 		.ascii	"prox_caso\000"
 9008      5F636173 
 9008      6F00
 9009              	.LASF28:
 9010 00ed 70726573 		.ascii	"preset\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 191


 9010      657400
 9011              	.LASF13:
 9012 00f4 666C6F61 		.ascii	"float\000"
 9012      7400
 9013              	.LASF120:
 9014 00fa 6D736E5F 		.ascii	"msn_lecaan\000"
 9014      6C656361 
 9014      616E00
 9015              	.LASF111:
 9016 0105 62756666 		.ascii	"buffer_i2c\000"
 9016      65725F69 
 9016      326300
 9017              	.LASF99:
 9018 0110 6C656D61 		.ascii	"lema1\000"
 9018      3100
 9019              	.LASF100:
 9020 0116 6C656D61 		.ascii	"lema2\000"
 9020      3200
 9021              	.LASF30:
 9022 011c 696D7072 		.ascii	"imprimir\000"
 9022      696D6972 
 9022      00
 9023              	.LASF7:
 9024 0125 6C6F6E67 		.ascii	"long long unsigned int\000"
 9024      206C6F6E 
 9024      6720756E 
 9024      7369676E 
 9024      65642069 
 9025              	.LASF84:
 9026 013c 696D6167 		.ascii	"imagen_grado4\000"
 9026      656E5F67 
 9026      7261646F 
 9026      3400
 9027              	.LASF123:
 9028 014a 2E5C5072 		.ascii	".\\Protocolo.c\000"
 9028      6F746F63 
 9028      6F6C6F2E 
 9028      6300
 9029              	.LASF92:
 9030 0158 6C61646F 		.ascii	"lado1\000"
 9030      3100
 9031              	.LASF93:
 9032 015e 6C61646F 		.ascii	"lado2\000"
 9032      3200
 9033              	.LASF94:
 9034 0164 6C61646F 		.ascii	"lado3\000"
 9034      3300
 9035              	.LASF95:
 9036 016a 6C61646F 		.ascii	"lado4\000"
 9036      3400
 9037              	.LASF116:
 9038 0170 6D736E5F 		.ascii	"msn_tc\000"
 9038      746300
 9039              	.LASF118:
 9040 0177 6D736E5F 		.ascii	"msn_td\000"
 9040      746400
 9041              	.LASF117:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 192


 9042 017e 6D736E5F 		.ascii	"msn_te\000"
 9042      746500
 9043              	.LASF54:
 9044 0185 53757274 		.ascii	"Surtidor_rxBuffer\000"
 9044      69646F72 
 9044      5F727842 
 9044      75666665 
 9044      7200
 9045              	.LASF29:
 9046 0197 706C6163 		.ascii	"placa\000"
 9046      6100
 9047              	.LASF37:
 9048 019d 7665725F 		.ascii	"ver_pos\000"
 9048      706F7300 
 9049              	.LASF25:
 9050 01a5 766F6C75 		.ascii	"volumen\000"
 9050      6D656E00 
 9051              	.LASF43:
 9052 01ad 76656E74 		.ascii	"venta\000"
 9052      6100
 9053              	.LASF97:
 9054 01b3 74656C65 		.ascii	"telefono\000"
 9054      666F6E6F 
 9054      00
 9055              	.LASF60:
 9056 01bc 69645F74 		.ascii	"id_teclado1\000"
 9056      65636C61 
 9056      646F3100 
 9057              	.LASF63:
 9058 01c8 69645F74 		.ascii	"id_teclado2\000"
 9058      65636C61 
 9058      646F3200 
 9059              	.LASF119:
 9060 01d4 6D736E5F 		.ascii	"msn_lecact\000"
 9060      6C656361 
 9060      637400
 9061              	.LASF110:
 9062 01df 72665F6D 		.ascii	"rf_mod\000"
 9062      6F6400
 9063              	.LASF42:
 9064 01e6 64657465 		.ascii	"detener\000"
 9064      6E657200 
 9065              	.LASF40:
 9066 01ee 636F6D61 		.ascii	"comand_exten\000"
 9066      6E645F65 
 9066      7874656E 
 9066      00
 9067              	.LASF77:
 9068 01fb 42756666 		.ascii	"Buffer_LCD2\000"
 9068      65725F4C 
 9068      43443200 
 9069              	.LASF15:
 9070 0207 63686172 		.ascii	"char\000"
 9070      00
 9071              	.LASF86:
 9072 020c 626C6F71 		.ascii	"bloqueo_LCD\000"
 9072      75656F5F 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 193


 9072      4C434400 
 9073              	.LASF20:
 9074 0218 6D616E67 		.ascii	"mangueras\000"
 9074      75657261 
 9074      7300
 9075              	.LASF12:
 9076 0222 75696E74 		.ascii	"uint16\000"
 9076      313600
 9077              	.LASF121:
 9078 0229 6D736E5F 		.ascii	"msn_tventas\000"
 9078      7476656E 
 9078      74617300 
 9079              	.LASF113:
 9080 0235 7072696E 		.ascii	"print1\000"
 9080      743100
 9081              	.LASF114:
 9082 023c 7072696E 		.ascii	"print2\000"
 9082      743200
 9083              	.LASF31:
 9084 0243 7469706F 		.ascii	"tipo_venta\000"
 9084      5F76656E 
 9084      746100
 9085              	.LASF34:
 9086 024e 7475726E 		.ascii	"turno\000"
 9086      6F00
 9087              	.LASF18:
 9088 0254 746F7461 		.ascii	"totales\000"
 9088      6C657300 
 9089              	.LASF80:
 9090 025c 70617373 		.ascii	"password_lcd\000"
 9090      776F7264 
 9090      5F6C6364 
 9090      00
 9091              	.LASF56:
 9092 0269 636F756E 		.ascii	"count_teclas1\000"
 9092      745F7465 
 9092      636C6173 
 9092      3100
 9093              	.LASF61:
 9094 0277 636F756E 		.ascii	"count_teclas2\000"
 9094      745F7465 
 9094      636C6173 
 9094      3200
 9095              	.LASF64:
 9096 0285 706F7378 		.ascii	"posx1\000"
 9096      3100
 9097              	.LASF67:
 9098 028b 706F7378 		.ascii	"posx2\000"
 9098      3200
 9099              	.LASF6:
 9100 0291 6C6F6E67 		.ascii	"long long int\000"
 9100      206C6F6E 
 9100      6720696E 
 9100      7400
 9101              	.LASF26:
 9102 029f 70726F64 		.ascii	"producto\000"
 9102      7563746F 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 194


 9102      00
 9103              	.LASF50:
 9104 02a8 63616D62 		.ascii	"cambiar_precio\000"
 9104      6961725F 
 9104      70726563 
 9104      696F00
 9105              	.LASF32:
 9106 02b7 63656475 		.ascii	"cedula\000"
 9106      6C6100
 9107              	.LASF115:
 9108 02be 72785F74 		.ascii	"rx_timeout\000"
 9108      696D656F 
 9108      757400
 9109              	.LASF81:
 9110 02c9 696D6167 		.ascii	"imagen_grado1\000"
 9110      656E5F67 
 9110      7261646F 
 9110      3100
 9111              	.LASF82:
 9112 02d7 696D6167 		.ascii	"imagen_grado2\000"
 9112      656E5F67 
 9112      7261646F 
 9112      3200
 9113              	.LASF83:
 9114 02e5 696D6167 		.ascii	"imagen_grado3\000"
 9114      656E5F67 
 9114      7261646F 
 9114      3300
 9115              	.LASF65:
 9116 02f3 706F7379 		.ascii	"posy1\000"
 9116      3100
 9117              	.LASF68:
 9118 02f9 706F7379 		.ascii	"posy2\000"
 9118      3200
 9119              	.LASF47:
 9120 02ff 73697A65 		.ascii	"size\000"
 9120      00
 9121              	.LASF22:
 9122 0304 72656369 		.ascii	"recibo\000"
 9122      626F00
 9123              	.LASF24:
 9124 030b 64696E65 		.ascii	"dinero\000"
 9124      726F00
 9125              	.LASF76:
 9126 0312 42756666 		.ascii	"Buffer_LCD1\000"
 9126      65725F4C 
 9126      43443100 
 9127              	.LASF17:
 9128 031e 65737461 		.ascii	"estado\000"
 9128      646F00
 9129              	.LASF87:
 9130 0325 70707578 		.ascii	"ppux10\000"
 9130      313000
 9131              	.LASF96:
 9132 032c 6E6F6D62 		.ascii	"nombre\000"
 9132      726500
 9133              	.LASF112:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 195


 9134 0333 6372635F 		.ascii	"crc_total\000"
 9134      746F7461 
 9134      6C00
 9135              	.LASF53:
 9136 033d 6E6D616E 		.ascii	"nmangueras\000"
 9136      67756572 
 9136      617300
 9137              	.LASF101:
 9138 0348 69645F6C 		.ascii	"id_logo\000"
 9138      6F676F00 
 9139              	.LASF2:
 9140 0350 73686F72 		.ascii	"short int\000"
 9140      7420696E 
 9140      7400
 9141              	.LASF4:
 9142 035a 6C6F6E67 		.ascii	"long int\000"
 9142      20696E74 
 9142      00
 9143              	.LASF55:
 9144 0363 49544D5F 		.ascii	"ITM_RxBuffer\000"
 9144      52784275 
 9144      66666572 
 9144      00
 9145              	.LASF21:
 9146 0370 73757274 		.ascii	"surtidor\000"
 9146      69646F72 
 9146      00
 9147              	.LASF57:
 9148 0379 636F6D61 		.ascii	"comas1\000"
 9148      733100
 9149              	.LASF58:
 9150 0380 636F6D61 		.ascii	"comas2\000"
 9150      733200
 9151              	.LASF48:
 9152 0387 74656D70 		.ascii	"temp\000"
 9152      00
 9153              	.LASF88:
 9154 038c 6E6F6D62 		.ascii	"nombre_pro1\000"
 9154      72655F70 
 9154      726F3100 
 9155              	.LASF90:
 9156 0398 6E6F6D62 		.ascii	"nombre_pro3\000"
 9156      72655F70 
 9156      726F3300 
 9157              	.LASF38:
 9158 03a4 65737461 		.ascii	"estado_ex\000"
 9158      646F5F65 
 9158      7800
 9159              	.LASF44:
 9160 03ae 70726F67 		.ascii	"programar\000"
 9160      72616D61 
 9160      7200
 9161              	.LASF16:
 9162 03b8 73697A65 		.ascii	"sizetype\000"
 9162      74797065 
 9162      00
 9163              	.LASF5:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 196


 9164 03c1 6C6F6E67 		.ascii	"long unsigned int\000"
 9164      20756E73 
 9164      69676E65 
 9164      6420696E 
 9164      7400
 9165              	.LASF10:
 9166 03d3 696E7433 		.ascii	"int32_t\000"
 9166      325F7400 
 9167              	.LASF35:
 9168 03db 6175746F 		.ascii	"autorizado\000"
 9168      72697A61 
 9168      646F00
 9169              	.LASF1:
 9170 03e6 756E7369 		.ascii	"unsigned char\000"
 9170      676E6564 
 9170      20636861 
 9170      7200
 9171              	.LASF36:
 9172 03f4 6765745F 		.ascii	"get_estado\000"
 9172      65737461 
 9172      646F00
 9173              	.LASF122:
 9174 03ff 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 9174      4320342E 
 9174      382E3420 
 9174      32303134 
 9174      30353236 
 9175 0432 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 9175      20726576 
 9175      6973696F 
 9175      6E203231 
 9175      31333538 
 9176 0465 30202D66 		.ascii	"0 -ffunction-sections\000"
 9176      66756E63 
 9176      74696F6E 
 9176      2D736563 
 9176      74696F6E 
 9177              	.LASF102:
 9178 047b 66656368 		.ascii	"fecha\000"
 9178      6100
 9179              	.LASF41:
 9180 0481 7665725F 		.ascii	"ver_error\000"
 9180      6572726F 
 9180      7200
 9181              	.LASF109:
 9182 048b 6F6B5F64 		.ascii	"ok_datosRF\000"
 9182      61746F73 
 9182      524600
 9183              	.LASF89:
 9184 0496 6E6F6D62 		.ascii	"nombre_pro2\000"
 9184      72655F70 
 9184      726F3200 
 9185              	.LASF0:
 9186 04a2 7369676E 		.ascii	"signed char\000"
 9186      65642063 
 9186      68617200 
 9187              	.LASF45:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\cc3fClzk.s 			page 197


 9188 04ae 76616C6F 		.ascii	"valor\000"
 9188      7200
 9189              	.LASF78:
 9190 04b4 636F756E 		.ascii	"count_protector\000"
 9190      745F7072 
 9190      6F746563 
 9190      746F7200 
 9191              	.LASF3:
 9192 04c4 73686F72 		.ascii	"short unsigned int\000"
 9192      7420756E 
 9192      7369676E 
 9192      65642069 
 9192      6E7400
 9193              	.LASF124:
 9194 04d7 453A5C4D 		.ascii	"E:\\MUX\\MUX_Prime.cydsn\000"
 9194      55585C4D 
 9194      55585F50 
 9194      72696D65 
 9194      2E637964 
 9195              	.LASF11:
 9196 04ee 75696E74 		.ascii	"uint8\000"
 9196      3800
 9197              	.LASF14:
 9198 04f4 646F7562 		.ascii	"double\000"
 9198      6C6500
 9199              	.LASF39:
 9200 04fb 72785F65 		.ascii	"rx_extend\000"
 9200      7874656E 
 9200      6400
 9201              	.LASF27:
 9202 0505 6D616E67 		.ascii	"manguera\000"
 9202      75657261 
 9202      00
 9203              	.LASF19:
 9204 050e 67726164 		.ascii	"grado\000"
 9204      6F00
 9205              	.LASF125:
 9206 0514 52785F53 		.ascii	"Rx_Surtidor\000"
 9206      75727469 
 9206      646F7200 
 9207              	.LASF66:
 9208 0520 73697A65 		.ascii	"sizeletra1\000"
 9208      6C657472 
 9208      613100
 9209              	.LASF69:
 9210 052b 73697A65 		.ascii	"sizeletra2\000"
 9210      6C657472 
 9210      613200
 9211              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
