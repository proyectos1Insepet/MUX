ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Protocolo.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	count_teclas1,1,1
  19              		.comm	comas1,1,1
  20              		.comm	comas2,1,1
  21              		.comm	id_coma1,1,1
  22              		.comm	id_teclado1,1,1
  23              		.comm	count_teclas2,1,1
  24              		.comm	id_coma2,1,1
  25              		.comm	id_teclado2,1,1
  26              		.comm	posx1,2,2
  27              		.comm	posy1,2,2
  28              		.comm	sizeletra1,2,2
  29              		.comm	posx2,2,2
  30              		.comm	posy2,2,2
  31              		.comm	sizeletra2,2,2
  32              		.comm	teclas1,1,1
  33              		.comm	teclas2,1,1
  34              		.comm	flujo_LCD1,1,1
  35              		.comm	flujo_LCD2,1,1
  36              		.comm	flujo_LCD3,1,1
  37              		.comm	flujo_LCD4,1,1
  38              		.comm	Buffer_LCD1,30,4
  39              		.comm	Buffer_LCD2,30,4
  40              		.comm	count_protector,1,1
  41              		.comm	count_protector2,1,1
  42              		.comm	password_lcd,9,4
  43              		.comm	imagen_grado1,2,2
  44              		.comm	imagen_grado2,2,2
  45              		.comm	imagen_grado3,2,2
  46              		.comm	imagen_grado4,2,2
  47              		.comm	prox_caso,16,4
  48              		.comm	bloqueo_LCD,3,4
  49              		.comm	ppux10,1,1
  50              		.comm	nombre_pro1,17,4
  51              		.comm	nombre_pro2,17,4
  52              		.comm	nombre_pro3,17,4
  53              		.comm	version,4,4
  54              		.comm	lado1,93,4
  55              		.comm	lado2,93,4
  56              		.comm	lado3,93,4
  57              		.comm	lado4,93,4
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 2


  58              		.comm	nombre,33,4
  59              		.comm	nit,15,4
  60              		.comm	telefono,20,4
  61              		.comm	direccion,33,4
  62              		.comm	lema1,32,4
  63              		.comm	lema2,32,4
  64              		.comm	id_logo,2,4
  65              		.comm	km,2,4
  66              		.comm	fecha,3,4
  67              		.comm	hora,2,4
  68              		.comm	rventa1,97,4
  69              		.comm	rventa2,97,4
  70              		.comm	rventa3,97,4
  71              		.comm	rventa4,97,4
  72              		.comm	ok_RF,1,1
  73              		.comm	ok_datosRF,1,1
  74              		.comm	rf_mod,200,4
  75              		.comm	buffer_i2c,64,4
  76              		.comm	crc_total,1,1
  77              		.comm	print1,2,4
  78              		.comm	print2,2,4
  79              		.comm	rx_timeout,1,1
  80              		.global	msn_tc
  81              		.data
  82              		.align	2
  83              		.type	msn_tc, %object
  84              		.size	msn_tc, 17
  85              	msn_tc:
  86 0000 544F5441 		.ascii	"TOTALES CORRIENTE"
  86      4C455320 
  86      434F5252 
  86      49454E54 
  86      45
  87              		.global	msn_te
  88 0011 000000   		.align	2
  89              		.type	msn_te, %object
  90              		.size	msn_te, 13
  91              	msn_te:
  92 0014 544F5441 		.ascii	"TOTALES EXTRA"
  92      4C455320 
  92      45585452 
  92      41
  93              		.global	msn_td
  94 0021 000000   		.align	2
  95              		.type	msn_td, %object
  96              		.size	msn_td, 14
  97              	msn_td:
  98 0024 544F5441 		.ascii	"TOTALES DIESEL"
  98      4C455320 
  98      44494553 
  98      454C
  99              		.global	msn_lecact
 100 0032 0000     		.align	2
 101              		.type	msn_lecact, %object
 102              		.size	msn_lecact, 15
 103              	msn_lecact:
 104 0034 4C656374 		.ascii	"Lectura Actual:"
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 3


 104      75726120 
 104      41637475 
 104      616C3A
 105              		.global	msn_lecaan
 106 0043 00       		.align	2
 107              		.type	msn_lecaan, %object
 108              		.size	msn_lecaan, 17
 109              	msn_lecaan:
 110 0044 4C656374 		.ascii	"Lectura Anterior:"
 110      75726120 
 110      416E7465 
 110      72696F72 
 110      3A
 111              		.global	msn_tventas
 112 0055 000000   		.align	2
 113              		.type	msn_tventas, %object
 114              		.size	msn_tventas, 18
 115              	msn_tventas:
 116 0058 546F7461 		.ascii	"Total de Ventas: $"
 116      6C206465 
 116      2056656E 
 116      7461733A 
 116      2024
 117 006a 0000     		.section	.text.Rx_Surtidor,"ax",%progbits
 118              		.align	2
 119              		.global	Rx_Surtidor
 120              		.thumb
 121              		.thumb_func
 122              		.type	Rx_Surtidor, %function
 123              	Rx_Surtidor:
 124              	.LFB63:
 125              		.file 1 ".\\Protocolo.c"
   1:.\Protocolo.c **** /*
   2:.\Protocolo.c **** ***************************************************************************************************
   3:.\Protocolo.c **** *                                           GRP550/700 CODE
   4:.\Protocolo.c **** 
   5:.\Protocolo.c **** *
   6:.\Protocolo.c **** *                             (c) Copyright 2013; Sistemas Insepet LTDA
   7:.\Protocolo.c **** *
   8:.\Protocolo.c **** *               All rights reserved.  Protected by international copyright laws.
   9:.\Protocolo.c **** *               Knowledge of the source code may NOT be used to develop a similar product.
  10:.\Protocolo.c **** *               Please help us continue to provide the Embedded community with the finest
  11:.\Protocolo.c **** *               software available.  Your honesty is greatly appreciated.
  12:.\Protocolo.c **** ***************************************************************************************************
  13:.\Protocolo.c **** */
  14:.\Protocolo.c **** 
  15:.\Protocolo.c **** /*
  16:.\Protocolo.c **** ***************************************************************************************************
  17:.\Protocolo.c **** *
  18:.\Protocolo.c **** *                                             GRP550/700 CODE
  19:.\Protocolo.c **** *
  20:.\Protocolo.c **** *                                             CYPRESS PSoC5LP
  21:.\Protocolo.c **** *                                                with the
  22:.\Protocolo.c **** *                                            CY8C5969AXI-LP035
  23:.\Protocolo.c **** *
  24:.\Protocolo.c **** * Filename      : Protocolo.c
  25:.\Protocolo.c **** * Version       : V1.00
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 4


  26:.\Protocolo.c **** * Programmer(s) : 
  27:.\Protocolo.c ****                   
  28:.\Protocolo.c **** ***************************************************************************************************
  29:.\Protocolo.c **** */
  30:.\Protocolo.c **** 
  31:.\Protocolo.c **** 
  32:.\Protocolo.c **** /*
  33:.\Protocolo.c **** ***************************************************************************************************
  34:.\Protocolo.c **** *                                             INCLUDE FILES
  35:.\Protocolo.c **** ***************************************************************************************************
  36:.\Protocolo.c **** */
  37:.\Protocolo.c **** #include <device.h>
  38:.\Protocolo.c **** #include "VariablesG.h"
  39:.\Protocolo.c **** #include "i2c.h"
  40:.\Protocolo.c **** #include "Print.h"
  41:.\Protocolo.c **** 
  42:.\Protocolo.c **** /*
  43:.\Protocolo.c **** ***************************************************************************************************
  44:.\Protocolo.c **** *                                            	MENSAJES
  45:.\Protocolo.c **** ***************************************************************************************************
  46:.\Protocolo.c **** */
  47:.\Protocolo.c **** uint8 rx_timeout;								//0 inicia espera  1 se cumplio el tiempo
  48:.\Protocolo.c **** uint8 msn_tc[17]="TOTALES CORRIENTE";
  49:.\Protocolo.c **** uint8 msn_te[13]="TOTALES EXTRA";
  50:.\Protocolo.c **** uint8 msn_td[14]="TOTALES DIESEL";
  51:.\Protocolo.c **** uint8 msn_lecact[15]="Lectura Actual:";
  52:.\Protocolo.c **** uint8 msn_lecaan[17]="Lectura Anterior:";
  53:.\Protocolo.c **** uint8 msn_tventas[18]="Total de Ventas: $";
  54:.\Protocolo.c **** 
  55:.\Protocolo.c **** /*
  56:.\Protocolo.c **** ***************************************************************************************************
  57:.\Protocolo.c **** *                                        CY_ISR(modo_mux)
  58:.\Protocolo.c **** *
  59:.\Protocolo.c **** * Description : 
  60:.\Protocolo.c **** *               
  61:.\Protocolo.c **** ***************************************************************************************************
  62:.\Protocolo.c **** */
  63:.\Protocolo.c **** CY_ISR(Rx_Surtidor){
 126              		.loc 1 63 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 1, uses_anonymous_args = 0
 130 0000 80B5     		push	{r7, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 7, -8
 133              		.cfi_offset 14, -4
 134 0002 00AF     		add	r7, sp, #0
 135              		.cfi_def_cfa_register 7
  64:.\Protocolo.c ****     Timer_RxSurtidor_ReadStatusRegister();
 136              		.loc 1 64 0
 137 0004 FFF7FEFF 		bl	Timer_RxSurtidor_ReadStatusRegister
  65:.\Protocolo.c **** 	rx_timeout=1;	
 138              		.loc 1 65 0
 139 0008 014B     		ldr	r3, .L2
 140 000a 0122     		movs	r2, #1
 141 000c 1A70     		strb	r2, [r3]
  66:.\Protocolo.c **** }
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 5


 142              		.loc 1 66 0
 143 000e 80BD     		pop	{r7, pc}
 144              	.L3:
 145              		.align	2
 146              	.L2:
 147 0010 00000000 		.word	rx_timeout
 148              		.cfi_endproc
 149              	.LFE63:
 150              		.size	Rx_Surtidor, .-Rx_Surtidor
 151              		.section	.text.get_estado,"ax",%progbits
 152              		.align	2
 153              		.global	get_estado
 154              		.thumb
 155              		.thumb_func
 156              		.type	get_estado, %function
 157              	get_estado:
 158              	.LFB64:
  67:.\Protocolo.c **** 
  68:.\Protocolo.c **** 
  69:.\Protocolo.c **** /*
  70:.\Protocolo.c **** ***************************************************************************************************
  71:.\Protocolo.c **** *                                         ver_estado( void )
  72:.\Protocolo.c **** *
  73:.\Protocolo.c **** * Description : 
  74:.\Protocolo.c **** *               
  75:.\Protocolo.c **** *
  76:.\Protocolo.c **** * Argument(s) : none
  77:.\Protocolo.c **** *
  78:.\Protocolo.c **** * Return(s)   : none
  79:.\Protocolo.c **** *
  80:.\Protocolo.c **** * Caller(s)   : 
  81:.\Protocolo.c **** *
  82:.\Protocolo.c **** * Note(s)     : none.
  83:.\Protocolo.c **** ***************************************************************************************************
  84:.\Protocolo.c **** */
  85:.\Protocolo.c **** 
  86:.\Protocolo.c **** uint8 get_estado(uint8 dir){
 159              		.loc 1 86 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 16
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 84B0     		sub	sp, sp, #16
 168              		.cfi_def_cfa_offset 24
 169 0004 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 171 0006 0346     		mov	r3, r0
 172 0008 FB71     		strb	r3, [r7, #7]
  87:.\Protocolo.c ****     uint8 estado;
  88:.\Protocolo.c ****     Surtidor_ClearRxBuffer();	
 173              		.loc 1 88 0
 174 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  89:.\Protocolo.c ****     Surtidor_PutChar(dir);
 175              		.loc 1 89 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 6


 176 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 177 0010 1846     		mov	r0, r3
 178 0012 FFF7FEFF 		bl	Surtidor_PutChar
  90:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 179              		.loc 1 90 0
 180 0016 1E48     		ldr	r0, .L9
 181 0018 FFF7FEFF 		bl	isr_1_StartEx
  91:.\Protocolo.c ****     Timer_RxSurtidor_Start();
 182              		.loc 1 91 0
 183 001c FFF7FEFF 		bl	Timer_RxSurtidor_Start
  92:.\Protocolo.c **** 	rx_timeout=0;
 184              		.loc 1 92 0
 185 0020 1C4B     		ldr	r3, .L9+4
 186 0022 0022     		movs	r2, #0
 187 0024 1A70     		strb	r2, [r3]
  93:.\Protocolo.c ****     CyDelay(10);
 188              		.loc 1 93 0
 189 0026 0A20     		movs	r0, #10
 190 0028 FFF7FEFF 		bl	CyDelay
  94:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 191              		.loc 1 94 0
 192 002c 0BE0     		b	.L5
 193              	.L7:
  95:.\Protocolo.c **** 		if(rx_timeout==1){
 194              		.loc 1 95 0
 195 002e 194B     		ldr	r3, .L9+4
 196 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 197 0032 012B     		cmp	r3, #1
 198 0034 07D1     		bne	.L5
  96:.\Protocolo.c **** 			isr_1_Stop();
 199              		.loc 1 96 0
 200 0036 FFF7FEFF 		bl	isr_1_Stop
  97:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 201              		.loc 1 97 0
 202 003a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
  98:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 203              		.loc 1 98 0
 204 003e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
  99:.\Protocolo.c **** 			return 0;
 205              		.loc 1 99 0
 206 0042 0023     		movs	r3, #0
 207 0044 20E0     		b	.L6
 208              	.L5:
  94:.\Protocolo.c **** 		if(rx_timeout==1){
 209              		.loc 1 94 0
 210 0046 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 211 004a 0346     		mov	r3, r0
 212 004c 002B     		cmp	r3, #0
 213 004e EED0     		beq	.L7
 100:.\Protocolo.c **** 		}
 101:.\Protocolo.c **** 	}
 102:.\Protocolo.c ****     estado=Surtidor_ReadRxData();
 214              		.loc 1 102 0
 215 0050 FFF7FEFF 		bl	Surtidor_ReadRxData
 216 0054 0346     		mov	r3, r0
 217 0056 FB73     		strb	r3, [r7, #15]
 103:.\Protocolo.c **** 	if((estado&0x0F)==dir){
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 7


 218              		.loc 1 103 0
 219 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 220 005a 03F00F02 		and	r2, r3, #15
 221 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 222 0060 9A42     		cmp	r2, r3
 223 0062 0AD1     		bne	.L8
 104:.\Protocolo.c **** 		estado=(estado&0xF0)>>4;
 224              		.loc 1 104 0
 225 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 226 0066 1B09     		lsrs	r3, r3, #4
 227 0068 FB73     		strb	r3, [r7, #15]
 105:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 228              		.loc 1 105 0
 229 006a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 106:.\Protocolo.c **** 		isr_1_Stop();
 230              		.loc 1 106 0
 231 006e FFF7FEFF 		bl	isr_1_Stop
 107:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 232              		.loc 1 107 0
 233 0072 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 108:.\Protocolo.c **** 	    return estado;
 234              		.loc 1 108 0
 235 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 236 0078 06E0     		b	.L6
 237              	.L8:
 109:.\Protocolo.c **** 	}
 110:.\Protocolo.c **** 	else{
 111:.\Protocolo.c **** 	    Surtidor_ClearRxBuffer();
 238              		.loc 1 111 0
 239 007a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 112:.\Protocolo.c **** 		isr_1_Stop();
 240              		.loc 1 112 0
 241 007e FFF7FEFF 		bl	isr_1_Stop
 113:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();	
 242              		.loc 1 113 0
 243 0082 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 114:.\Protocolo.c **** 	    return 0;	
 244              		.loc 1 114 0
 245 0086 0023     		movs	r3, #0
 246              	.L6:
 115:.\Protocolo.c **** 	}
 116:.\Protocolo.c **** }
 247              		.loc 1 116 0
 248 0088 1846     		mov	r0, r3
 249 008a 1037     		adds	r7, r7, #16
 250              		.cfi_def_cfa_offset 8
 251 008c BD46     		mov	sp, r7
 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 008e 80BD     		pop	{r7, pc}
 255              	.L10:
 256              		.align	2
 257              	.L9:
 258 0090 00000000 		.word	Rx_Surtidor
 259 0094 00000000 		.word	rx_timeout
 260              		.cfi_endproc
 261              	.LFE64:
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 8


 262              		.size	get_estado, .-get_estado
 263              		.section	.text.ver_pos,"ax",%progbits
 264              		.align	2
 265              		.global	ver_pos
 266              		.thumb
 267              		.thumb_func
 268              		.type	ver_pos, %function
 269              	ver_pos:
 270              	.LFB65:
 117:.\Protocolo.c **** 
 118:.\Protocolo.c **** /*
 119:.\Protocolo.c **** ***************************************************************************************************
 120:.\Protocolo.c **** *                                         ver_pos( void )
 121:.\Protocolo.c **** *
 122:.\Protocolo.c **** * Description : 
 123:.\Protocolo.c **** *               
 124:.\Protocolo.c **** *
 125:.\Protocolo.c **** * Argument(s) : none
 126:.\Protocolo.c **** *
 127:.\Protocolo.c **** * Return(s)   : none
 128:.\Protocolo.c **** *
 129:.\Protocolo.c **** * Caller(s)   : 
 130:.\Protocolo.c **** *
 131:.\Protocolo.c **** * Note(s)     : none.
 132:.\Protocolo.c **** ***************************************************************************************************
 133:.\Protocolo.c **** */
 134:.\Protocolo.c **** uint8 ver_pos (void){
 271              		.loc 1 134 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 8
 274              		@ frame_needed = 1, uses_anonymous_args = 0
 275 0000 80B5     		push	{r7, lr}
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 7, -8
 278              		.cfi_offset 14, -4
 279 0002 82B0     		sub	sp, sp, #8
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 135:.\Protocolo.c **** 	uint8 x;
 136:.\Protocolo.c **** 	lado1.dir=0xff;
 283              		.loc 1 136 0
 284 0006 354B     		ldr	r3, .L21
 285 0008 FF22     		movs	r2, #255
 286 000a 1A70     		strb	r2, [r3]
 137:.\Protocolo.c **** 	lado2.dir=0xff;
 287              		.loc 1 137 0
 288 000c 344B     		ldr	r3, .L21+4
 289 000e FF22     		movs	r2, #255
 290 0010 1A70     		strb	r2, [r3]
 138:.\Protocolo.c **** 	lado3.dir=0xff;
 291              		.loc 1 138 0
 292 0012 344B     		ldr	r3, .L21+8
 293 0014 FF22     		movs	r2, #255
 294 0016 1A70     		strb	r2, [r3]
 139:.\Protocolo.c **** 	lado4.dir=0xff;	
 295              		.loc 1 139 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 9


 296 0018 334B     		ldr	r3, .L21+12
 297 001a FF22     		movs	r2, #255
 298 001c 1A70     		strb	r2, [r3]
 140:.\Protocolo.c **** 	CyDelay(5);
 299              		.loc 1 140 0
 300 001e 0520     		movs	r0, #5
 301 0020 FFF7FEFF 		bl	CyDelay
 141:.\Protocolo.c ****     if(get_estado(0)!=0){
 302              		.loc 1 141 0
 303 0024 0020     		movs	r0, #0
 304 0026 FFF7FEFF 		bl	get_estado
 305 002a 0346     		mov	r3, r0
 306 002c 002B     		cmp	r3, #0
 307 002e 02D0     		beq	.L12
 142:.\Protocolo.c **** 		lado4.dir=0;
 308              		.loc 1 142 0
 309 0030 2D4B     		ldr	r3, .L21+12
 310 0032 0022     		movs	r2, #0
 311 0034 1A70     		strb	r2, [r3]
 312              	.L12:
 143:.\Protocolo.c **** 	}	
 144:.\Protocolo.c ****     for(x=1;x<=15;x++){
 313              		.loc 1 144 0
 314 0036 0123     		movs	r3, #1
 315 0038 FB71     		strb	r3, [r7, #7]
 316 003a 31E0     		b	.L13
 317              	.L19:
 145:.\Protocolo.c **** 		CyDelay(5);
 318              		.loc 1 145 0
 319 003c 0520     		movs	r0, #5
 320 003e FFF7FEFF 		bl	CyDelay
 146:.\Protocolo.c ****         if(get_estado(x)!=0){
 321              		.loc 1 146 0
 322 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 323 0044 1846     		mov	r0, r3
 324 0046 FFF7FEFF 		bl	get_estado
 325 004a 0346     		mov	r3, r0
 326 004c 002B     		cmp	r3, #0
 327 004e 24D0     		beq	.L14
 147:.\Protocolo.c **** 			if(lado1.dir==0xFF){
 328              		.loc 1 147 0
 329 0050 224B     		ldr	r3, .L21
 330 0052 1B78     		ldrb	r3, [r3]
 331 0054 DBB2     		uxtb	r3, r3
 332 0056 FF2B     		cmp	r3, #255
 333 0058 03D1     		bne	.L15
 148:.\Protocolo.c **** 				lado1.dir=x;
 334              		.loc 1 148 0
 335 005a 204A     		ldr	r2, .L21
 336 005c FB79     		ldrb	r3, [r7, #7]
 337 005e 1370     		strb	r3, [r2]
 338 0060 1BE0     		b	.L14
 339              	.L15:
 149:.\Protocolo.c **** 			}
 150:.\Protocolo.c **** 			else if(lado2.dir==0xFF){
 340              		.loc 1 150 0
 341 0062 1F4B     		ldr	r3, .L21+4
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 10


 342 0064 1B78     		ldrb	r3, [r3]
 343 0066 DBB2     		uxtb	r3, r3
 344 0068 FF2B     		cmp	r3, #255
 345 006a 03D1     		bne	.L16
 151:.\Protocolo.c **** 				lado2.dir=x;
 346              		.loc 1 151 0
 347 006c 1C4A     		ldr	r2, .L21+4
 348 006e FB79     		ldrb	r3, [r7, #7]
 349 0070 1370     		strb	r3, [r2]
 350 0072 12E0     		b	.L14
 351              	.L16:
 152:.\Protocolo.c **** 			}
 153:.\Protocolo.c **** 			else if(lado3.dir==0xFF){
 352              		.loc 1 153 0
 353 0074 1B4B     		ldr	r3, .L21+8
 354 0076 1B78     		ldrb	r3, [r3]
 355 0078 DBB2     		uxtb	r3, r3
 356 007a FF2B     		cmp	r3, #255
 357 007c 03D1     		bne	.L17
 154:.\Protocolo.c **** 				lado3.dir=x;
 358              		.loc 1 154 0
 359 007e 194A     		ldr	r2, .L21+8
 360 0080 FB79     		ldrb	r3, [r7, #7]
 361 0082 1370     		strb	r3, [r2]
 362 0084 09E0     		b	.L14
 363              	.L17:
 155:.\Protocolo.c **** 			}
 156:.\Protocolo.c **** 			else if(lado4.dir==0xFF){
 364              		.loc 1 156 0
 365 0086 184B     		ldr	r3, .L21+12
 366 0088 1B78     		ldrb	r3, [r3]
 367 008a DBB2     		uxtb	r3, r3
 368 008c FF2B     		cmp	r3, #255
 369 008e 04D1     		bne	.L14
 157:.\Protocolo.c **** 				lado4.dir=x;
 370              		.loc 1 157 0
 371 0090 154A     		ldr	r2, .L21+12
 372 0092 FB79     		ldrb	r3, [r7, #7]
 373 0094 1370     		strb	r3, [r2]
 158:.\Protocolo.c **** 				return 1;
 374              		.loc 1 158 0
 375 0096 0123     		movs	r3, #1
 376 0098 1CE0     		b	.L18
 377              	.L14:
 144:.\Protocolo.c **** 		CyDelay(5);
 378              		.loc 1 144 0 discriminator 2
 379 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 380 009c 0133     		adds	r3, r3, #1
 381 009e FB71     		strb	r3, [r7, #7]
 382              	.L13:
 144:.\Protocolo.c **** 		CyDelay(5);
 383              		.loc 1 144 0 is_stmt 0 discriminator 1
 384 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 385 00a2 0F2B     		cmp	r3, #15
 386 00a4 CAD9     		bls	.L19
 159:.\Protocolo.c **** 			}			
 160:.\Protocolo.c **** 		}
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 11


 161:.\Protocolo.c **** 	}
 162:.\Protocolo.c **** 	if((lado1.dir!=0xFF)&&(lado2.dir!=0xFF)&&(lado3.dir!=0xFF)&&(lado4.dir!=0xFF)){
 387              		.loc 1 162 0 is_stmt 1
 388 00a6 0D4B     		ldr	r3, .L21
 389 00a8 1B78     		ldrb	r3, [r3]
 390 00aa DBB2     		uxtb	r3, r3
 391 00ac FF2B     		cmp	r3, #255
 392 00ae 10D0     		beq	.L20
 393              		.loc 1 162 0 is_stmt 0 discriminator 1
 394 00b0 0B4B     		ldr	r3, .L21+4
 395 00b2 1B78     		ldrb	r3, [r3]
 396 00b4 DBB2     		uxtb	r3, r3
 397 00b6 FF2B     		cmp	r3, #255
 398 00b8 0BD0     		beq	.L20
 399              		.loc 1 162 0 discriminator 2
 400 00ba 0A4B     		ldr	r3, .L21+8
 401 00bc 1B78     		ldrb	r3, [r3]
 402 00be DBB2     		uxtb	r3, r3
 403 00c0 FF2B     		cmp	r3, #255
 404 00c2 06D0     		beq	.L20
 405              		.loc 1 162 0 discriminator 3
 406 00c4 084B     		ldr	r3, .L21+12
 407 00c6 1B78     		ldrb	r3, [r3]
 408 00c8 DBB2     		uxtb	r3, r3
 409 00ca FF2B     		cmp	r3, #255
 410 00cc 01D0     		beq	.L20
 163:.\Protocolo.c **** 		return 1;
 411              		.loc 1 163 0 is_stmt 1
 412 00ce 0123     		movs	r3, #1
 413 00d0 00E0     		b	.L18
 414              	.L20:
 164:.\Protocolo.c **** 	}
 165:.\Protocolo.c **** 	else{
 166:.\Protocolo.c **** 		return 0;
 415              		.loc 1 166 0
 416 00d2 0023     		movs	r3, #0
 417              	.L18:
 167:.\Protocolo.c **** 	}
 168:.\Protocolo.c **** }
 418              		.loc 1 168 0
 419 00d4 1846     		mov	r0, r3
 420 00d6 0837     		adds	r7, r7, #8
 421              		.cfi_def_cfa_offset 8
 422 00d8 BD46     		mov	sp, r7
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 00da 80BD     		pop	{r7, pc}
 426              	.L22:
 427              		.align	2
 428              	.L21:
 429 00dc 00000000 		.word	lado1
 430 00e0 00000000 		.word	lado2
 431 00e4 00000000 		.word	lado3
 432 00e8 00000000 		.word	lado4
 433              		.cfi_endproc
 434              	.LFE65:
 435              		.size	ver_pos, .-ver_pos
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 12


 436              		.section	.text.ver_error,"ax",%progbits
 437              		.align	2
 438              		.global	ver_error
 439              		.thumb
 440              		.thumb_func
 441              		.type	ver_error, %function
 442              	ver_error:
 443              	.LFB66:
 169:.\Protocolo.c **** 
 170:.\Protocolo.c **** /*
 171:.\Protocolo.c **** ***************************************************************************************************
 172:.\Protocolo.c **** *                                         void ver_error(uint8 val)
 173:.\Protocolo.c **** *
 174:.\Protocolo.c **** * Description : 
 175:.\Protocolo.c **** *               
 176:.\Protocolo.c **** *
 177:.\Protocolo.c **** * Argument(s) : none
 178:.\Protocolo.c **** *
 179:.\Protocolo.c **** * Return(s)   : none
 180:.\Protocolo.c **** *
 181:.\Protocolo.c **** * Caller(s)   : 
 182:.\Protocolo.c **** *
 183:.\Protocolo.c **** * Note(s)     : none.
 184:.\Protocolo.c **** ***************************************************************************************************
 185:.\Protocolo.c **** */
 186:.\Protocolo.c **** void ver_error(uint8 val){
 444              		.loc 1 186 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 16
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0000 80B5     		push	{r7, lr}
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 84B0     		sub	sp, sp, #16
 453              		.cfi_def_cfa_offset 24
 454 0004 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 456 0006 0346     		mov	r3, r0
 457 0008 FB71     		strb	r3, [r7, #7]
 187:.\Protocolo.c ****     uint8 estado;
 188:.\Protocolo.c ****     Surtidor_PutChar(val);
 458              		.loc 1 188 0
 459 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 460 000c 1846     		mov	r0, r3
 461 000e FFF7FEFF 		bl	Surtidor_PutChar
 189:.\Protocolo.c ****     CyDelay(200);
 462              		.loc 1 189 0
 463 0012 C820     		movs	r0, #200
 464 0014 FFF7FEFF 		bl	CyDelay
 190:.\Protocolo.c ****     if(Surtidor_GetRxBufferSize()>=1){
 465              		.loc 1 190 0
 466 0018 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 467 001c 0346     		mov	r3, r0
 468 001e 002B     		cmp	r3, #0
 469 0020 06D0     		beq	.L23
 191:.\Protocolo.c ****        estado=(Surtidor_ReadRxData()&0xF0)>>4;
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 13


 470              		.loc 1 191 0
 471 0022 FFF7FEFF 		bl	Surtidor_ReadRxData
 472 0026 0346     		mov	r3, r0
 473 0028 1B09     		lsrs	r3, r3, #4
 474 002a FB73     		strb	r3, [r7, #15]
 192:.\Protocolo.c ****        Surtidor_ClearRxBuffer();
 475              		.loc 1 192 0
 476 002c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 477              	.L23:
 193:.\Protocolo.c ****        if(estado==0){
 194:.\Protocolo.c **** 
 195:.\Protocolo.c ****        }
 196:.\Protocolo.c ****     }    
 197:.\Protocolo.c **** }
 478              		.loc 1 197 0
 479 0030 1037     		adds	r7, r7, #16
 480              		.cfi_def_cfa_offset 8
 481 0032 BD46     		mov	sp, r7
 482              		.cfi_def_cfa_register 13
 483              		@ sp needed
 484 0034 80BD     		pop	{r7, pc}
 485              		.cfi_endproc
 486              	.LFE66:
 487              		.size	ver_error, .-ver_error
 488 0036 00BF     		.section	.rodata
 489              		.align	2
 490              	.LC0:
 491 0000 FF       		.byte	-1
 492 0001 E9       		.byte	-23
 493 0002 FE       		.byte	-2
 494 0003 E0       		.byte	-32
 495 0004 E1       		.byte	-31
 496 0005 E0       		.byte	-32
 497 0006 FB       		.byte	-5
 498 0007 EE       		.byte	-18
 499 0008 F0       		.byte	-16
 500 0009 000000   		.section	.text.estado_ex,"ax",%progbits
 501              		.align	2
 502              		.global	estado_ex
 503              		.thumb
 504              		.thumb_func
 505              		.type	estado_ex, %function
 506              	estado_ex:
 507              	.LFB67:
 198:.\Protocolo.c **** 
 199:.\Protocolo.c **** /*
 200:.\Protocolo.c **** ***************************************************************************************************
 201:.\Protocolo.c **** *                                         estado_ex(uint8 val)
 202:.\Protocolo.c **** *
 203:.\Protocolo.c **** * Description : 
 204:.\Protocolo.c **** *               
 205:.\Protocolo.c **** *
 206:.\Protocolo.c **** * Argument(s) : none
 207:.\Protocolo.c **** *
 208:.\Protocolo.c **** * Return(s)   : none
 209:.\Protocolo.c **** *
 210:.\Protocolo.c **** * Caller(s)   : 
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 14


 211:.\Protocolo.c **** *
 212:.\Protocolo.c **** * Note(s)     : none.
 213:.\Protocolo.c **** ***************************************************************************************************
 214:.\Protocolo.c **** */
 215:.\Protocolo.c **** uint8 estado_ex(uint8 val){
 508              		.loc 1 215 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 40
 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512 0000 90B5     		push	{r4, r7, lr}
 513              		.cfi_def_cfa_offset 12
 514              		.cfi_offset 4, -12
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 8BB0     		sub	sp, sp, #44
 518              		.cfi_def_cfa_offset 56
 519 0004 00AF     		add	r7, sp, #0
 520              		.cfi_def_cfa_register 7
 521 0006 0346     		mov	r3, r0
 522 0008 FB71     		strb	r3, [r7, #7]
 216:.\Protocolo.c ****     uint8 rx_extend[19],x,comand_exten[9]={0xFF,0xE9,0xFE,0xE0,0xE1,0xE0,0xFB,0xEE,0xF0};
 523              		.loc 1 216 0
 524 000a 594A     		ldr	r2, .L43
 525 000c 07F10803 		add	r3, r7, #8
 526 0010 1068     		ldr	r0, [r2]	@ unaligned
 527 0012 5168     		ldr	r1, [r2, #4]	@ unaligned
 528 0014 03C3     		stmia	r3!, {r0, r1}
 529 0016 127A     		ldrb	r2, [r2, #8]
 530 0018 1A70     		strb	r2, [r3]
 217:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 531              		.loc 1 217 0
 532 001a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 218:.\Protocolo.c ****     Surtidor_PutChar(0x20|val);
 533              		.loc 1 218 0
 534 001e FB79     		ldrb	r3, [r7, #7]
 535 0020 43F02003 		orr	r3, r3, #32
 536 0024 DBB2     		uxtb	r3, r3
 537 0026 1846     		mov	r0, r3
 538 0028 FFF7FEFF 		bl	Surtidor_PutChar
 219:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 539              		.loc 1 219 0
 540 002c 5148     		ldr	r0, .L43+4
 541 002e FFF7FEFF 		bl	isr_1_StartEx
 220:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 542              		.loc 1 220 0
 543 0032 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 221:.\Protocolo.c ****     rx_timeout=0;
 544              		.loc 1 221 0
 545 0036 504B     		ldr	r3, .L43+8
 546 0038 0022     		movs	r2, #0
 547 003a 1A70     		strb	r2, [r3]
 222:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 548              		.loc 1 222 0
 549 003c 0BE0     		b	.L26
 550              	.L28:
 223:.\Protocolo.c **** 		if(rx_timeout==1){
 551              		.loc 1 223 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 15


 552 003e 4E4B     		ldr	r3, .L43+8
 553 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 554 0042 012B     		cmp	r3, #1
 555 0044 07D1     		bne	.L26
 224:.\Protocolo.c **** 			isr_1_Stop();
 556              		.loc 1 224 0
 557 0046 FFF7FEFF 		bl	isr_1_Stop
 225:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 558              		.loc 1 225 0
 559 004a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 226:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 560              		.loc 1 226 0
 561 004e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 227:.\Protocolo.c **** 			return 0;
 562              		.loc 1 227 0
 563 0052 0023     		movs	r3, #0
 564 0054 88E0     		b	.L41
 565              	.L26:
 222:.\Protocolo.c **** 		if(rx_timeout==1){
 566              		.loc 1 222 0
 567 0056 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 568 005a 0346     		mov	r3, r0
 569 005c 002B     		cmp	r3, #0
 570 005e EED0     		beq	.L28
 228:.\Protocolo.c **** 		}
 229:.\Protocolo.c **** 	}
 230:.\Protocolo.c **** 	isr_1_Stop();
 571              		.loc 1 230 0
 572 0060 FFF7FEFF 		bl	isr_1_Stop
 231:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 573              		.loc 1 231 0
 574 0064 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 232:.\Protocolo.c ****     if(Surtidor_ReadRxData()==(0xD0|val)){
 575              		.loc 1 232 0
 576 0068 FFF7FEFF 		bl	Surtidor_ReadRxData
 577 006c 0346     		mov	r3, r0
 578 006e 1A46     		mov	r2, r3
 579 0070 FB79     		ldrb	r3, [r7, #7]
 580 0072 63F02F03 		orn	r3, r3, #47
 581 0076 DBB2     		uxtb	r3, r3
 582 0078 9A42     		cmp	r2, r3
 583 007a 74D1     		bne	.L29
 233:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 584              		.loc 1 233 0
 585 007c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 234:.\Protocolo.c **** 		CyDelay(5);
 586              		.loc 1 234 0
 587 0080 0520     		movs	r0, #5
 588 0082 FFF7FEFF 		bl	CyDelay
 235:.\Protocolo.c ****         for(x=0;x<=8;x++){
 589              		.loc 1 235 0
 590 0086 0023     		movs	r3, #0
 591 0088 87F82730 		strb	r3, [r7, #39]
 592 008c 0EE0     		b	.L30
 593              	.L31:
 236:.\Protocolo.c ****            Surtidor_PutChar(comand_exten[x]); 
 594              		.loc 1 236 0 discriminator 3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 16


 595 008e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 596 0092 07F12802 		add	r2, r7, #40
 597 0096 1344     		add	r3, r3, r2
 598 0098 13F8203C 		ldrb	r3, [r3, #-32]	@ zero_extendqisi2
 599 009c 1846     		mov	r0, r3
 600 009e FFF7FEFF 		bl	Surtidor_PutChar
 235:.\Protocolo.c ****         for(x=0;x<=8;x++){
 601              		.loc 1 235 0 discriminator 3
 602 00a2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 603 00a6 0133     		adds	r3, r3, #1
 604 00a8 87F82730 		strb	r3, [r7, #39]
 605              	.L30:
 235:.\Protocolo.c ****         for(x=0;x<=8;x++){
 606              		.loc 1 235 0 is_stmt 0 discriminator 1
 607 00ac 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 608 00b0 082B     		cmp	r3, #8
 609 00b2 ECD9     		bls	.L31
 237:.\Protocolo.c ****         }
 238:.\Protocolo.c **** 		isr_1_StartEx(Rx_Surtidor);
 610              		.loc 1 238 0 is_stmt 1
 611 00b4 2F48     		ldr	r0, .L43+4
 612 00b6 FFF7FEFF 		bl	isr_1_StartEx
 239:.\Protocolo.c **** 	    Timer_RxSurtidor_Start();	
 613              		.loc 1 239 0
 614 00ba FFF7FEFF 		bl	Timer_RxSurtidor_Start
 240:.\Protocolo.c **** 	    rx_timeout=0;
 615              		.loc 1 240 0
 616 00be 2E4B     		ldr	r3, .L43+8
 617 00c0 0022     		movs	r2, #0
 618 00c2 1A70     		strb	r2, [r3]
 241:.\Protocolo.c **** 		while(Surtidor_GetRxBufferSize()!=19){
 619              		.loc 1 241 0
 620 00c4 0BE0     		b	.L32
 621              	.L33:
 242:.\Protocolo.c **** 			if(rx_timeout==1){
 622              		.loc 1 242 0
 623 00c6 2C4B     		ldr	r3, .L43+8
 624 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 625 00ca 012B     		cmp	r3, #1
 626 00cc 07D1     		bne	.L32
 243:.\Protocolo.c **** 				isr_1_Stop();
 627              		.loc 1 243 0
 628 00ce FFF7FEFF 		bl	isr_1_Stop
 244:.\Protocolo.c **** 				Timer_RxSurtidor_Stop();
 629              		.loc 1 244 0
 630 00d2 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 245:.\Protocolo.c **** 	    		Surtidor_ClearRxBuffer();			
 631              		.loc 1 245 0
 632 00d6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 246:.\Protocolo.c **** 				return 0;
 633              		.loc 1 246 0
 634 00da 0023     		movs	r3, #0
 635 00dc 44E0     		b	.L41
 636              	.L32:
 241:.\Protocolo.c **** 			if(rx_timeout==1){
 637              		.loc 1 241 0
 638 00de FFF7FEFF 		bl	Surtidor_GetRxBufferSize
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 17


 639 00e2 0346     		mov	r3, r0
 640 00e4 132B     		cmp	r3, #19
 641 00e6 EED1     		bne	.L33
 247:.\Protocolo.c **** 			}
 248:.\Protocolo.c **** 		}       
 249:.\Protocolo.c **** 		isr_1_Stop();
 642              		.loc 1 249 0
 643 00e8 FFF7FEFF 		bl	isr_1_Stop
 250:.\Protocolo.c **** 		Timer_RxSurtidor_Stop();		
 644              		.loc 1 250 0
 645 00ec FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 251:.\Protocolo.c ****         for(x=0;x<=18;x++){
 646              		.loc 1 251 0
 647 00f0 0023     		movs	r3, #0
 648 00f2 87F82730 		strb	r3, [r7, #39]
 649 00f6 0FE0     		b	.L34
 650              	.L35:
 252:.\Protocolo.c ****            rx_extend[x]=Surtidor_ReadRxData(); 
 651              		.loc 1 252 0 discriminator 3
 652 00f8 97F82740 		ldrb	r4, [r7, #39]	@ zero_extendqisi2
 653 00fc FFF7FEFF 		bl	Surtidor_ReadRxData
 654 0100 0346     		mov	r3, r0
 655 0102 1A46     		mov	r2, r3
 656 0104 07F12803 		add	r3, r7, #40
 657 0108 2344     		add	r3, r3, r4
 658 010a 03F8142C 		strb	r2, [r3, #-20]
 251:.\Protocolo.c ****         for(x=0;x<=18;x++){
 659              		.loc 1 251 0 discriminator 3
 660 010e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 661 0112 0133     		adds	r3, r3, #1
 662 0114 87F82730 		strb	r3, [r7, #39]
 663              	.L34:
 251:.\Protocolo.c ****         for(x=0;x<=18;x++){
 664              		.loc 1 251 0 is_stmt 0 discriminator 1
 665 0118 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 666 011c 122B     		cmp	r3, #18
 667 011e EBD9     		bls	.L35
 253:.\Protocolo.c ****         }
 254:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 668              		.loc 1 254 0 is_stmt 1
 669 0120 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 255:.\Protocolo.c ****         if((rx_extend[0]==0xBA)&&(rx_extend[17]==0x8D)&&(rx_extend[18]==0x8A)&&(rx_extend[12]==0xB1
 670              		.loc 1 255 0
 671 0124 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 672 0126 BA2B     		cmp	r3, #186
 673 0128 1BD1     		bne	.L36
 674              		.loc 1 255 0 is_stmt 0 discriminator 1
 675 012a 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 676 012e 8D2B     		cmp	r3, #141
 677 0130 17D1     		bne	.L36
 678              		.loc 1 255 0 discriminator 2
 679 0132 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 680 0136 8A2B     		cmp	r3, #138
 681 0138 13D1     		bne	.L36
 682              		.loc 1 255 0 discriminator 3
 683 013a 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 684 013e B12B     		cmp	r3, #177
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 18


 685 0140 0FD1     		bne	.L36
 256:.\Protocolo.c ****             switch(rx_extend[14]){
 686              		.loc 1 256 0 is_stmt 1
 687 0142 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 688 0146 B22B     		cmp	r3, #178
 689 0148 05D0     		beq	.L38
 690 014a B32B     		cmp	r3, #179
 691 014c 05D0     		beq	.L39
 692 014e B12B     		cmp	r3, #177
 693 0150 05D1     		bne	.L42
 257:.\Protocolo.c ****                 case 0xB1:
 258:.\Protocolo.c ****                     return 1;
 694              		.loc 1 258 0
 695 0152 0123     		movs	r3, #1
 696 0154 08E0     		b	.L41
 697              	.L38:
 259:.\Protocolo.c ****                 break;
 260:.\Protocolo.c ****                 case 0xB2:
 261:.\Protocolo.c ****                     return 2;
 698              		.loc 1 261 0
 699 0156 0223     		movs	r3, #2
 700 0158 06E0     		b	.L41
 701              	.L39:
 262:.\Protocolo.c ****                 break;
 263:.\Protocolo.c ****                 case 0xB3:
 264:.\Protocolo.c ****                     return 3;
 702              		.loc 1 264 0
 703 015a 0323     		movs	r3, #3
 704 015c 04E0     		b	.L41
 705              	.L42:
 265:.\Protocolo.c ****                 break;
 266:.\Protocolo.c ****                 default:
 267:.\Protocolo.c ****                 	return 0;
 706              		.loc 1 267 0
 707 015e 0023     		movs	r3, #0
 708 0160 02E0     		b	.L41
 709              	.L36:
 268:.\Protocolo.c **** 				break;
 269:.\Protocolo.c ****             }
 270:.\Protocolo.c ****         }
 271:.\Protocolo.c ****         else{
 272:.\Protocolo.c ****             return 0;
 710              		.loc 1 272 0
 711 0162 0023     		movs	r3, #0
 712 0164 00E0     		b	.L41
 713              	.L29:
 273:.\Protocolo.c ****         }
 274:.\Protocolo.c ****     }
 275:.\Protocolo.c ****     else{
 276:.\Protocolo.c ****         return 0;
 714              		.loc 1 276 0
 715 0166 0023     		movs	r3, #0
 716              	.L41:
 277:.\Protocolo.c ****     }
 278:.\Protocolo.c **** }
 717              		.loc 1 278 0
 718 0168 1846     		mov	r0, r3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 19


 719 016a 2C37     		adds	r7, r7, #44
 720              		.cfi_def_cfa_offset 12
 721 016c BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 016e 90BD     		pop	{r4, r7, pc}
 725              	.L44:
 726              		.align	2
 727              	.L43:
 728 0170 00000000 		.word	.LC0
 729 0174 00000000 		.word	Rx_Surtidor
 730 0178 00000000 		.word	rx_timeout
 731              		.cfi_endproc
 732              	.LFE67:
 733              		.size	estado_ex, .-estado_ex
 734              		.section	.text.detener,"ax",%progbits
 735              		.align	2
 736              		.global	detener
 737              		.thumb
 738              		.thumb_func
 739              		.type	detener, %function
 740              	detener:
 741              	.LFB68:
 279:.\Protocolo.c **** 
 280:.\Protocolo.c **** /*
 281:.\Protocolo.c **** ***************************************************************************************************
 282:.\Protocolo.c **** *                                         void detener(uint8 val)
 283:.\Protocolo.c **** *
 284:.\Protocolo.c **** * Description : 
 285:.\Protocolo.c **** *               
 286:.\Protocolo.c **** *
 287:.\Protocolo.c **** * Argument(s) : none
 288:.\Protocolo.c **** *
 289:.\Protocolo.c **** * Return(s)   : none
 290:.\Protocolo.c **** *
 291:.\Protocolo.c **** * Caller(s)   : 
 292:.\Protocolo.c **** *
 293:.\Protocolo.c **** * Note(s)     : none.
 294:.\Protocolo.c **** ***************************************************************************************************
 295:.\Protocolo.c **** */
 296:.\Protocolo.c **** void detener(uint8 val){
 742              		.loc 1 296 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 8
 745              		@ frame_needed = 1, uses_anonymous_args = 0
 746 0000 80B5     		push	{r7, lr}
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 7, -8
 749              		.cfi_offset 14, -4
 750 0002 82B0     		sub	sp, sp, #8
 751              		.cfi_def_cfa_offset 16
 752 0004 00AF     		add	r7, sp, #0
 753              		.cfi_def_cfa_register 7
 754 0006 0346     		mov	r3, r0
 755 0008 FB71     		strb	r3, [r7, #7]
 297:.\Protocolo.c ****     Surtidor_PutChar(0x30|val);
 756              		.loc 1 297 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 20


 757 000a FB79     		ldrb	r3, [r7, #7]
 758 000c 43F03003 		orr	r3, r3, #48
 759 0010 DBB2     		uxtb	r3, r3
 760 0012 1846     		mov	r0, r3
 761 0014 FFF7FEFF 		bl	Surtidor_PutChar
 298:.\Protocolo.c ****     CyDelay(200);
 762              		.loc 1 298 0
 763 0018 C820     		movs	r0, #200
 764 001a FFF7FEFF 		bl	CyDelay
 299:.\Protocolo.c **** }
 765              		.loc 1 299 0
 766 001e 0837     		adds	r7, r7, #8
 767              		.cfi_def_cfa_offset 8
 768 0020 BD46     		mov	sp, r7
 769              		.cfi_def_cfa_register 13
 770              		@ sp needed
 771 0022 80BD     		pop	{r7, pc}
 772              		.cfi_endproc
 773              	.LFE68:
 774              		.size	detener, .-detener
 775              		.section	.text.venta,"ax",%progbits
 776              		.align	2
 777              		.global	venta
 778              		.thumb
 779              		.thumb_func
 780              		.type	venta, %function
 781              	venta:
 782              	.LFB69:
 300:.\Protocolo.c **** 
 301:.\Protocolo.c **** /*
 302:.\Protocolo.c **** ***************************************************************************************************
 303:.\Protocolo.c **** *                                         void venta(uint8 val)
 304:.\Protocolo.c **** *
 305:.\Protocolo.c **** * Description : 
 306:.\Protocolo.c **** *               
 307:.\Protocolo.c **** *
 308:.\Protocolo.c **** * Argument(s) : none
 309:.\Protocolo.c **** *
 310:.\Protocolo.c **** * Return(s)   : none
 311:.\Protocolo.c **** *
 312:.\Protocolo.c **** * Caller(s)   : 
 313:.\Protocolo.c **** *
 314:.\Protocolo.c **** * Note(s)     : none.
 315:.\Protocolo.c **** ***************************************************************************************************
 316:.\Protocolo.c **** */
 317:.\Protocolo.c **** uint8 venta(uint8 dir){
 783              		.loc 1 317 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 16
 786              		@ frame_needed = 1, uses_anonymous_args = 0
 787 0000 80B5     		push	{r7, lr}
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 7, -8
 790              		.cfi_offset 14, -4
 791 0002 84B0     		sub	sp, sp, #16
 792              		.cfi_def_cfa_offset 24
 793 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 21


 794              		.cfi_def_cfa_register 7
 795 0006 0346     		mov	r3, r0
 796 0008 FB71     		strb	r3, [r7, #7]
 318:.\Protocolo.c **** 	uint8 x;
 319:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 797              		.loc 1 319 0
 798 000a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 320:.\Protocolo.c **** 	Surtidor_PutChar(0x40|dir);
 799              		.loc 1 320 0
 800 000e FB79     		ldrb	r3, [r7, #7]
 801 0010 43F04003 		orr	r3, r3, #64
 802 0014 DBB2     		uxtb	r3, r3
 803 0016 1846     		mov	r0, r3
 804 0018 FFF7FEFF 		bl	Surtidor_PutChar
 321:.\Protocolo.c ****     CyDelay(350);
 805              		.loc 1 321 0
 806 001c 4FF4AF70 		mov	r0, #350
 807 0020 FFF7FEFF 		bl	CyDelay
 322:.\Protocolo.c **** 	if((version[1]!=7)&&(Surtidor_GetRxBufferSize()==33)){
 808              		.loc 1 322 0
 809 0024 AB4B     		ldr	r3, .L108
 810 0026 5B78     		ldrb	r3, [r3, #1]
 811 0028 DBB2     		uxtb	r3, r3
 812 002a 072B     		cmp	r3, #7
 813 002c 00F07D81 		beq	.L47
 814              		.loc 1 322 0 is_stmt 0 discriminator 1
 815 0030 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 816 0034 0346     		mov	r3, r0
 817 0036 212B     		cmp	r3, #33
 818 0038 40F07781 		bne	.L47
 323:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[32]==0xF0)){
 819              		.loc 1 323 0 is_stmt 1
 820 003c A64B     		ldr	r3, .L108+4
 821 003e 1B78     		ldrb	r3, [r3]
 822 0040 DBB2     		uxtb	r3, r3
 823 0042 FF2B     		cmp	r3, #255
 824 0044 40F06F81 		bne	.L48
 825              		.loc 1 323 0 is_stmt 0 discriminator 1
 826 0048 A34B     		ldr	r3, .L108+4
 827 004a 9B78     		ldrb	r3, [r3, #2]
 828 004c DBB2     		uxtb	r3, r3
 829 004e F82B     		cmp	r3, #248
 830 0050 40F06981 		bne	.L48
 831              		.loc 1 323 0 discriminator 2
 832 0054 A04B     		ldr	r3, .L108+4
 833 0056 93F82030 		ldrb	r3, [r3, #32]
 834 005a DBB2     		uxtb	r3, r3
 835 005c F02B     		cmp	r3, #240
 836 005e 40F06281 		bne	.L48
 324:.\Protocolo.c **** 			if(dir==lado1.dir){
 837              		.loc 1 324 0 is_stmt 1
 838 0062 9E4B     		ldr	r3, .L108+8
 839 0064 1B78     		ldrb	r3, [r3]
 840 0066 DBB2     		uxtb	r3, r3
 841 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 842 006a 9A42     		cmp	r2, r3
 843 006c 4CD1     		bne	.L49
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 22


 325:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 844              		.loc 1 325 0
 845 006e 9A4B     		ldr	r3, .L108+4
 846 0070 5B7A     		ldrb	r3, [r3, #9]
 847 0072 DBB2     		uxtb	r3, r3
 848 0074 03F00F03 		and	r3, r3, #15
 849 0078 DBB2     		uxtb	r3, r3
 850 007a 0133     		adds	r3, r3, #1
 851 007c DAB2     		uxtb	r2, r3
 852 007e 984B     		ldr	r3, .L108+12
 853 0080 5A76     		strb	r2, [r3, #25]
 326:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 854              		.loc 1 326 0
 855 0082 0023     		movs	r3, #0
 856 0084 FB73     		strb	r3, [r7, #15]
 857 0086 0FE0     		b	.L50
 858              	.L51:
 327:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 859              		.loc 1 327 0 discriminator 3
 860 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 861 008a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 862 008c 0C32     		adds	r2, r2, #12
 863 008e 9249     		ldr	r1, .L108+4
 864 0090 8A5C     		ldrb	r2, [r1, r2]
 865 0092 D2B2     		uxtb	r2, r2
 866 0094 02F00F02 		and	r2, r2, #15
 867 0098 D1B2     		uxtb	r1, r2
 868 009a 914A     		ldr	r2, .L108+12
 869 009c 1344     		add	r3, r3, r2
 870 009e 0A46     		mov	r2, r1
 871 00a0 9A70     		strb	r2, [r3, #2]
 326:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 872              		.loc 1 326 0 discriminator 3
 873 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 874 00a4 0133     		adds	r3, r3, #1
 875 00a6 FB73     		strb	r3, [r7, #15]
 876              	.L50:
 326:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 877              		.loc 1 326 0 is_stmt 0 discriminator 1
 878 00a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 879 00aa 032B     		cmp	r3, #3
 880 00ac ECD9     		bls	.L51
 328:.\Protocolo.c **** 				}
 329:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 881              		.loc 1 329 0 is_stmt 1
 882 00ae 0023     		movs	r3, #0
 883 00b0 FB73     		strb	r3, [r7, #15]
 884 00b2 0FE0     		b	.L52
 885              	.L53:
 330:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 886              		.loc 1 330 0 discriminator 3
 887 00b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 888 00b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 889 00b8 1132     		adds	r2, r2, #17
 890 00ba 8749     		ldr	r1, .L108+4
 891 00bc 8A5C     		ldrb	r2, [r1, r2]
 892 00be D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 23


 893 00c0 02F00F02 		and	r2, r2, #15
 894 00c4 D1B2     		uxtb	r1, r2
 895 00c6 864A     		ldr	r2, .L108+12
 896 00c8 1344     		add	r3, r3, r2
 897 00ca 0A46     		mov	r2, r1
 898 00cc 1A74     		strb	r2, [r3, #16]
 329:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 899              		.loc 1 329 0 discriminator 3
 900 00ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 901 00d0 0133     		adds	r3, r3, #1
 902 00d2 FB73     		strb	r3, [r7, #15]
 903              	.L52:
 329:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 904              		.loc 1 329 0 is_stmt 0 discriminator 1
 905 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 906 00d6 052B     		cmp	r3, #5
 907 00d8 ECD9     		bls	.L53
 331:.\Protocolo.c **** 				}			
 332:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 908              		.loc 1 332 0 is_stmt 1
 909 00da 0023     		movs	r3, #0
 910 00dc FB73     		strb	r3, [r7, #15]
 911 00de 0FE0     		b	.L54
 912              	.L55:
 333:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 913              		.loc 1 333 0 discriminator 3
 914 00e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 915 00e2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 916 00e4 1832     		adds	r2, r2, #24
 917 00e6 7C49     		ldr	r1, .L108+4
 918 00e8 8A5C     		ldrb	r2, [r1, r2]
 919 00ea D2B2     		uxtb	r2, r2
 920 00ec 02F00F02 		and	r2, r2, #15
 921 00f0 D1B2     		uxtb	r1, r2
 922 00f2 7B4A     		ldr	r2, .L108+12
 923 00f4 1344     		add	r3, r3, r2
 924 00f6 0A46     		mov	r2, r1
 925 00f8 DA71     		strb	r2, [r3, #7]
 332:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 926              		.loc 1 332 0 discriminator 3
 927 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 928 00fc 0133     		adds	r3, r3, #1
 929 00fe FB73     		strb	r3, [r7, #15]
 930              	.L54:
 332:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 931              		.loc 1 332 0 is_stmt 0 discriminator 1
 932 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 933 0102 052B     		cmp	r3, #5
 934 0104 ECD9     		bls	.L55
 935 0106 0CE1     		b	.L56
 936              	.L49:
 334:.\Protocolo.c **** 				}
 335:.\Protocolo.c **** 			}
 336:.\Protocolo.c **** 			else if(dir==lado2.dir){
 937              		.loc 1 336 0 is_stmt 1
 938 0108 764B     		ldr	r3, .L108+16
 939 010a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 24


 940 010c DBB2     		uxtb	r3, r3
 941 010e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 942 0110 9A42     		cmp	r2, r3
 943 0112 4CD1     		bne	.L57
 337:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 944              		.loc 1 337 0
 945 0114 704B     		ldr	r3, .L108+4
 946 0116 5B7A     		ldrb	r3, [r3, #9]
 947 0118 DBB2     		uxtb	r3, r3
 948 011a 03F00F03 		and	r3, r3, #15
 949 011e DBB2     		uxtb	r3, r3
 950 0120 0133     		adds	r3, r3, #1
 951 0122 DAB2     		uxtb	r2, r3
 952 0124 704B     		ldr	r3, .L108+20
 953 0126 5A76     		strb	r2, [r3, #25]
 338:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 954              		.loc 1 338 0
 955 0128 0023     		movs	r3, #0
 956 012a FB73     		strb	r3, [r7, #15]
 957 012c 0FE0     		b	.L58
 958              	.L59:
 339:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 959              		.loc 1 339 0 discriminator 3
 960 012e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 961 0130 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 962 0132 0C32     		adds	r2, r2, #12
 963 0134 6849     		ldr	r1, .L108+4
 964 0136 8A5C     		ldrb	r2, [r1, r2]
 965 0138 D2B2     		uxtb	r2, r2
 966 013a 02F00F02 		and	r2, r2, #15
 967 013e D1B2     		uxtb	r1, r2
 968 0140 694A     		ldr	r2, .L108+20
 969 0142 1344     		add	r3, r3, r2
 970 0144 0A46     		mov	r2, r1
 971 0146 9A70     		strb	r2, [r3, #2]
 338:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 972              		.loc 1 338 0 discriminator 3
 973 0148 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 974 014a 0133     		adds	r3, r3, #1
 975 014c FB73     		strb	r3, [r7, #15]
 976              	.L58:
 338:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 977              		.loc 1 338 0 is_stmt 0 discriminator 1
 978 014e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 979 0150 032B     		cmp	r3, #3
 980 0152 ECD9     		bls	.L59
 340:.\Protocolo.c **** 				}
 341:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 981              		.loc 1 341 0 is_stmt 1
 982 0154 0023     		movs	r3, #0
 983 0156 FB73     		strb	r3, [r7, #15]
 984 0158 0FE0     		b	.L60
 985              	.L61:
 342:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 986              		.loc 1 342 0 discriminator 3
 987 015a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 988 015c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 25


 989 015e 1132     		adds	r2, r2, #17
 990 0160 5D49     		ldr	r1, .L108+4
 991 0162 8A5C     		ldrb	r2, [r1, r2]
 992 0164 D2B2     		uxtb	r2, r2
 993 0166 02F00F02 		and	r2, r2, #15
 994 016a D1B2     		uxtb	r1, r2
 995 016c 5E4A     		ldr	r2, .L108+20
 996 016e 1344     		add	r3, r3, r2
 997 0170 0A46     		mov	r2, r1
 998 0172 1A74     		strb	r2, [r3, #16]
 341:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 999              		.loc 1 341 0 discriminator 3
 1000 0174 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1001 0176 0133     		adds	r3, r3, #1
 1002 0178 FB73     		strb	r3, [r7, #15]
 1003              	.L60:
 341:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 1004              		.loc 1 341 0 is_stmt 0 discriminator 1
 1005 017a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1006 017c 052B     		cmp	r3, #5
 1007 017e ECD9     		bls	.L61
 343:.\Protocolo.c **** 				}			
 344:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1008              		.loc 1 344 0 is_stmt 1
 1009 0180 0023     		movs	r3, #0
 1010 0182 FB73     		strb	r3, [r7, #15]
 1011 0184 0FE0     		b	.L62
 1012              	.L63:
 345:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 1013              		.loc 1 345 0 discriminator 3
 1014 0186 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1015 0188 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1016 018a 1832     		adds	r2, r2, #24
 1017 018c 5249     		ldr	r1, .L108+4
 1018 018e 8A5C     		ldrb	r2, [r1, r2]
 1019 0190 D2B2     		uxtb	r2, r2
 1020 0192 02F00F02 		and	r2, r2, #15
 1021 0196 D1B2     		uxtb	r1, r2
 1022 0198 534A     		ldr	r2, .L108+20
 1023 019a 1344     		add	r3, r3, r2
 1024 019c 0A46     		mov	r2, r1
 1025 019e DA71     		strb	r2, [r3, #7]
 344:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 1026              		.loc 1 344 0 discriminator 3
 1027 01a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1028 01a2 0133     		adds	r3, r3, #1
 1029 01a4 FB73     		strb	r3, [r7, #15]
 1030              	.L62:
 344:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 1031              		.loc 1 344 0 is_stmt 0 discriminator 1
 1032 01a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1033 01a8 052B     		cmp	r3, #5
 1034 01aa ECD9     		bls	.L63
 1035 01ac B9E0     		b	.L56
 1036              	.L57:
 346:.\Protocolo.c **** 				}			
 347:.\Protocolo.c **** 			}
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 26


 348:.\Protocolo.c **** 			else if(dir==lado3.dir){
 1037              		.loc 1 348 0 is_stmt 1
 1038 01ae 4F4B     		ldr	r3, .L108+24
 1039 01b0 1B78     		ldrb	r3, [r3]
 1040 01b2 DBB2     		uxtb	r3, r3
 1041 01b4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1042 01b6 9A42     		cmp	r2, r3
 1043 01b8 4CD1     		bne	.L64
 349:.\Protocolo.c **** 				rventa3.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1044              		.loc 1 349 0
 1045 01ba 474B     		ldr	r3, .L108+4
 1046 01bc 5B7A     		ldrb	r3, [r3, #9]
 1047 01be DBB2     		uxtb	r3, r3
 1048 01c0 03F00F03 		and	r3, r3, #15
 1049 01c4 DBB2     		uxtb	r3, r3
 1050 01c6 0133     		adds	r3, r3, #1
 1051 01c8 DAB2     		uxtb	r2, r3
 1052 01ca 494B     		ldr	r3, .L108+28
 1053 01cc 5A76     		strb	r2, [r3, #25]
 350:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 1054              		.loc 1 350 0
 1055 01ce 0023     		movs	r3, #0
 1056 01d0 FB73     		strb	r3, [r7, #15]
 1057 01d2 0FE0     		b	.L65
 1058              	.L66:
 351:.\Protocolo.c **** 					rventa3.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1059              		.loc 1 351 0 discriminator 3
 1060 01d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1061 01d6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1062 01d8 0C32     		adds	r2, r2, #12
 1063 01da 3F49     		ldr	r1, .L108+4
 1064 01dc 8A5C     		ldrb	r2, [r1, r2]
 1065 01de D2B2     		uxtb	r2, r2
 1066 01e0 02F00F02 		and	r2, r2, #15
 1067 01e4 D1B2     		uxtb	r1, r2
 1068 01e6 424A     		ldr	r2, .L108+28
 1069 01e8 1344     		add	r3, r3, r2
 1070 01ea 0A46     		mov	r2, r1
 1071 01ec 9A70     		strb	r2, [r3, #2]
 350:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 1072              		.loc 1 350 0 discriminator 3
 1073 01ee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1074 01f0 0133     		adds	r3, r3, #1
 1075 01f2 FB73     		strb	r3, [r7, #15]
 1076              	.L65:
 350:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 1077              		.loc 1 350 0 is_stmt 0 discriminator 1
 1078 01f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1079 01f6 032B     		cmp	r3, #3
 1080 01f8 ECD9     		bls	.L66
 352:.\Protocolo.c **** 				}
 353:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1081              		.loc 1 353 0 is_stmt 1
 1082 01fa 0023     		movs	r3, #0
 1083 01fc FB73     		strb	r3, [r7, #15]
 1084 01fe 0FE0     		b	.L67
 1085              	.L68:
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 27


 354:.\Protocolo.c **** 					rventa3.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 1086              		.loc 1 354 0 discriminator 3
 1087 0200 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1088 0202 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1089 0204 1132     		adds	r2, r2, #17
 1090 0206 3449     		ldr	r1, .L108+4
 1091 0208 8A5C     		ldrb	r2, [r1, r2]
 1092 020a D2B2     		uxtb	r2, r2
 1093 020c 02F00F02 		and	r2, r2, #15
 1094 0210 D1B2     		uxtb	r1, r2
 1095 0212 374A     		ldr	r2, .L108+28
 1096 0214 1344     		add	r3, r3, r2
 1097 0216 0A46     		mov	r2, r1
 1098 0218 1A74     		strb	r2, [r3, #16]
 353:.\Protocolo.c **** 					rventa3.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 1099              		.loc 1 353 0 discriminator 3
 1100 021a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1101 021c 0133     		adds	r3, r3, #1
 1102 021e FB73     		strb	r3, [r7, #15]
 1103              	.L67:
 353:.\Protocolo.c **** 					rventa3.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 1104              		.loc 1 353 0 is_stmt 0 discriminator 1
 1105 0220 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1106 0222 052B     		cmp	r3, #5
 1107 0224 ECD9     		bls	.L68
 355:.\Protocolo.c **** 				}			
 356:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1108              		.loc 1 356 0 is_stmt 1
 1109 0226 0023     		movs	r3, #0
 1110 0228 FB73     		strb	r3, [r7, #15]
 1111 022a 0FE0     		b	.L69
 1112              	.L70:
 357:.\Protocolo.c **** 					rventa3.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 1113              		.loc 1 357 0 discriminator 3
 1114 022c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1115 022e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1116 0230 1832     		adds	r2, r2, #24
 1117 0232 2949     		ldr	r1, .L108+4
 1118 0234 8A5C     		ldrb	r2, [r1, r2]
 1119 0236 D2B2     		uxtb	r2, r2
 1120 0238 02F00F02 		and	r2, r2, #15
 1121 023c D1B2     		uxtb	r1, r2
 1122 023e 2C4A     		ldr	r2, .L108+28
 1123 0240 1344     		add	r3, r3, r2
 1124 0242 0A46     		mov	r2, r1
 1125 0244 DA71     		strb	r2, [r3, #7]
 356:.\Protocolo.c **** 					rventa3.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 1126              		.loc 1 356 0 discriminator 3
 1127 0246 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1128 0248 0133     		adds	r3, r3, #1
 1129 024a FB73     		strb	r3, [r7, #15]
 1130              	.L69:
 356:.\Protocolo.c **** 					rventa3.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 1131              		.loc 1 356 0 is_stmt 0 discriminator 1
 1132 024c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1133 024e 052B     		cmp	r3, #5
 1134 0250 ECD9     		bls	.L70
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 28


 1135 0252 66E0     		b	.L56
 1136              	.L64:
 358:.\Protocolo.c **** 				}			
 359:.\Protocolo.c **** 			}
 360:.\Protocolo.c **** 			else if(dir==lado4.dir){
 1137              		.loc 1 360 0 is_stmt 1
 1138 0254 274B     		ldr	r3, .L108+32
 1139 0256 1B78     		ldrb	r3, [r3]
 1140 0258 DBB2     		uxtb	r3, r3
 1141 025a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1142 025c 9A42     		cmp	r2, r3
 1143 025e 60D1     		bne	.L56
 361:.\Protocolo.c **** 				rventa4.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1144              		.loc 1 361 0
 1145 0260 1D4B     		ldr	r3, .L108+4
 1146 0262 5B7A     		ldrb	r3, [r3, #9]
 1147 0264 DBB2     		uxtb	r3, r3
 1148 0266 03F00F03 		and	r3, r3, #15
 1149 026a DBB2     		uxtb	r3, r3
 1150 026c 0133     		adds	r3, r3, #1
 1151 026e DAB2     		uxtb	r2, r3
 1152 0270 214B     		ldr	r3, .L108+36
 1153 0272 5A76     		strb	r2, [r3, #25]
 362:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 1154              		.loc 1 362 0
 1155 0274 0023     		movs	r3, #0
 1156 0276 FB73     		strb	r3, [r7, #15]
 1157 0278 0FE0     		b	.L71
 1158              	.L72:
 363:.\Protocolo.c **** 					rventa4.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1159              		.loc 1 363 0 discriminator 3
 1160 027a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1161 027c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1162 027e 0C32     		adds	r2, r2, #12
 1163 0280 1549     		ldr	r1, .L108+4
 1164 0282 8A5C     		ldrb	r2, [r1, r2]
 1165 0284 D2B2     		uxtb	r2, r2
 1166 0286 02F00F02 		and	r2, r2, #15
 1167 028a D1B2     		uxtb	r1, r2
 1168 028c 1A4A     		ldr	r2, .L108+36
 1169 028e 1344     		add	r3, r3, r2
 1170 0290 0A46     		mov	r2, r1
 1171 0292 9A70     		strb	r2, [r3, #2]
 362:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 1172              		.loc 1 362 0 discriminator 3
 1173 0294 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1174 0296 0133     		adds	r3, r3, #1
 1175 0298 FB73     		strb	r3, [r7, #15]
 1176              	.L71:
 362:.\Protocolo.c **** 				for(x=0;x<=3;x++){
 1177              		.loc 1 362 0 is_stmt 0 discriminator 1
 1178 029a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1179 029c 032B     		cmp	r3, #3
 1180 029e ECD9     		bls	.L72
 364:.\Protocolo.c **** 				}
 365:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1181              		.loc 1 365 0 is_stmt 1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 29


 1182 02a0 0023     		movs	r3, #0
 1183 02a2 FB73     		strb	r3, [r7, #15]
 1184 02a4 0FE0     		b	.L73
 1185              	.L74:
 366:.\Protocolo.c **** 					rventa4.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 1186              		.loc 1 366 0 discriminator 3
 1187 02a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1188 02a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1189 02aa 1132     		adds	r2, r2, #17
 1190 02ac 0A49     		ldr	r1, .L108+4
 1191 02ae 8A5C     		ldrb	r2, [r1, r2]
 1192 02b0 D2B2     		uxtb	r2, r2
 1193 02b2 02F00F02 		and	r2, r2, #15
 1194 02b6 D1B2     		uxtb	r1, r2
 1195 02b8 0F4A     		ldr	r2, .L108+36
 1196 02ba 1344     		add	r3, r3, r2
 1197 02bc 0A46     		mov	r2, r1
 1198 02be 1A74     		strb	r2, [r3, #16]
 365:.\Protocolo.c **** 					rventa4.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 1199              		.loc 1 365 0 discriminator 3
 1200 02c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1201 02c2 0133     		adds	r3, r3, #1
 1202 02c4 FB73     		strb	r3, [r7, #15]
 1203              	.L73:
 365:.\Protocolo.c **** 					rventa4.volumen[x]=(Surtidor_rxBuffer[x+17]&0x0F);
 1204              		.loc 1 365 0 is_stmt 0 discriminator 1
 1205 02c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1206 02c8 052B     		cmp	r3, #5
 1207 02ca ECD9     		bls	.L74
 367:.\Protocolo.c **** 				}			
 368:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1208              		.loc 1 368 0 is_stmt 1
 1209 02cc 0023     		movs	r3, #0
 1210 02ce FB73     		strb	r3, [r7, #15]
 1211 02d0 24E0     		b	.L75
 1212              	.L109:
 1213 02d2 00BF     		.align	2
 1214              	.L108:
 1215 02d4 00000000 		.word	version
 1216 02d8 00000000 		.word	Surtidor_rxBuffer
 1217 02dc 00000000 		.word	lado1
 1218 02e0 00000000 		.word	rventa1
 1219 02e4 00000000 		.word	lado2
 1220 02e8 00000000 		.word	rventa2
 1221 02ec 00000000 		.word	lado3
 1222 02f0 00000000 		.word	rventa3
 1223 02f4 00000000 		.word	lado4
 1224 02f8 00000000 		.word	rventa4
 1225              	.L76:
 369:.\Protocolo.c **** 					rventa4.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 1226              		.loc 1 369 0 discriminator 3
 1227 02fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1228 02fe FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1229 0300 1832     		adds	r2, r2, #24
 1230 0302 AA49     		ldr	r1, .L110
 1231 0304 8A5C     		ldrb	r2, [r1, r2]
 1232 0306 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 30


 1233 0308 02F00F02 		and	r2, r2, #15
 1234 030c D1B2     		uxtb	r1, r2
 1235 030e A84A     		ldr	r2, .L110+4
 1236 0310 1344     		add	r3, r3, r2
 1237 0312 0A46     		mov	r2, r1
 1238 0314 DA71     		strb	r2, [r3, #7]
 368:.\Protocolo.c **** 					rventa4.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 1239              		.loc 1 368 0 discriminator 3
 1240 0316 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1241 0318 0133     		adds	r3, r3, #1
 1242 031a FB73     		strb	r3, [r7, #15]
 1243              	.L75:
 368:.\Protocolo.c **** 					rventa4.dinero[x]=(Surtidor_rxBuffer[x+24]&0x0F);
 1244              		.loc 1 368 0 is_stmt 0 discriminator 1
 1245 031c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1246 031e 052B     		cmp	r3, #5
 1247 0320 ECD9     		bls	.L76
 1248              	.L56:
 370:.\Protocolo.c **** 				}			
 371:.\Protocolo.c **** 			}			
 372:.\Protocolo.c **** 			return 1;
 1249              		.loc 1 372 0 is_stmt 1
 1250 0322 0123     		movs	r3, #1
 1251 0324 84E1     		b	.L77
 1252              	.L48:
 373:.\Protocolo.c **** 		}
 374:.\Protocolo.c **** 		else{
 375:.\Protocolo.c **** 			return 0;
 1253              		.loc 1 375 0
 1254 0326 0023     		movs	r3, #0
 1255 0328 82E1     		b	.L77
 1256              	.L47:
 376:.\Protocolo.c **** 		}
 377:.\Protocolo.c **** 	}
 378:.\Protocolo.c **** 	else if((version[1]==7)&&(Surtidor_GetRxBufferSize()==39)){
 1257              		.loc 1 378 0
 1258 032a A24B     		ldr	r3, .L110+8
 1259 032c 5B78     		ldrb	r3, [r3, #1]
 1260 032e DBB2     		uxtb	r3, r3
 1261 0330 072B     		cmp	r3, #7
 1262 0332 40F07C81 		bne	.L78
 1263              		.loc 1 378 0 is_stmt 0 discriminator 1
 1264 0336 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 1265 033a 0346     		mov	r3, r0
 1266 033c 272B     		cmp	r3, #39
 1267 033e 40F07681 		bne	.L78
 379:.\Protocolo.c **** 		if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[2]==0xF8)&&(Surtidor_rxBuffer[38]==0xF0)){
 1268              		.loc 1 379 0 is_stmt 1
 1269 0342 9A4B     		ldr	r3, .L110
 1270 0344 1B78     		ldrb	r3, [r3]
 1271 0346 DBB2     		uxtb	r3, r3
 1272 0348 FF2B     		cmp	r3, #255
 1273 034a 40F06E81 		bne	.L79
 1274              		.loc 1 379 0 is_stmt 0 discriminator 1
 1275 034e 974B     		ldr	r3, .L110
 1276 0350 9B78     		ldrb	r3, [r3, #2]
 1277 0352 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 31


 1278 0354 F82B     		cmp	r3, #248
 1279 0356 40F06881 		bne	.L79
 1280              		.loc 1 379 0 discriminator 2
 1281 035a 944B     		ldr	r3, .L110
 1282 035c 93F82630 		ldrb	r3, [r3, #38]
 1283 0360 DBB2     		uxtb	r3, r3
 1284 0362 F02B     		cmp	r3, #240
 1285 0364 40F06181 		bne	.L79
 380:.\Protocolo.c **** 			if(dir==lado1.dir){
 1286              		.loc 1 380 0 is_stmt 1
 1287 0368 934B     		ldr	r3, .L110+12
 1288 036a 1B78     		ldrb	r3, [r3]
 1289 036c DBB2     		uxtb	r3, r3
 1290 036e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1291 0370 9A42     		cmp	r2, r3
 1292 0372 4CD1     		bne	.L80
 381:.\Protocolo.c **** 				rventa1.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1293              		.loc 1 381 0
 1294 0374 8D4B     		ldr	r3, .L110
 1295 0376 5B7A     		ldrb	r3, [r3, #9]
 1296 0378 DBB2     		uxtb	r3, r3
 1297 037a 03F00F03 		and	r3, r3, #15
 1298 037e DBB2     		uxtb	r3, r3
 1299 0380 0133     		adds	r3, r3, #1
 1300 0382 DAB2     		uxtb	r2, r3
 1301 0384 8D4B     		ldr	r3, .L110+16
 1302 0386 5A76     		strb	r2, [r3, #25]
 382:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1303              		.loc 1 382 0
 1304 0388 0023     		movs	r3, #0
 1305 038a FB73     		strb	r3, [r7, #15]
 1306 038c 0FE0     		b	.L81
 1307              	.L82:
 383:.\Protocolo.c **** 					rventa1.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1308              		.loc 1 383 0 discriminator 3
 1309 038e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1310 0390 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1311 0392 0C32     		adds	r2, r2, #12
 1312 0394 8549     		ldr	r1, .L110
 1313 0396 8A5C     		ldrb	r2, [r1, r2]
 1314 0398 D2B2     		uxtb	r2, r2
 1315 039a 02F00F02 		and	r2, r2, #15
 1316 039e D1B2     		uxtb	r1, r2
 1317 03a0 864A     		ldr	r2, .L110+16
 1318 03a2 1344     		add	r3, r3, r2
 1319 03a4 0A46     		mov	r2, r1
 1320 03a6 9A70     		strb	r2, [r3, #2]
 382:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1321              		.loc 1 382 0 discriminator 3
 1322 03a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1323 03aa 0133     		adds	r3, r3, #1
 1324 03ac FB73     		strb	r3, [r7, #15]
 1325              	.L81:
 382:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1326              		.loc 1 382 0 is_stmt 0 discriminator 1
 1327 03ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1328 03b0 052B     		cmp	r3, #5
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 32


 1329 03b2 ECD9     		bls	.L82
 384:.\Protocolo.c **** 				}
 385:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1330              		.loc 1 385 0 is_stmt 1
 1331 03b4 0023     		movs	r3, #0
 1332 03b6 FB73     		strb	r3, [r7, #15]
 1333 03b8 0FE0     		b	.L83
 1334              	.L84:
 386:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1335              		.loc 1 386 0 discriminator 3
 1336 03ba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1337 03bc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1338 03be 1332     		adds	r2, r2, #19
 1339 03c0 7A49     		ldr	r1, .L110
 1340 03c2 8A5C     		ldrb	r2, [r1, r2]
 1341 03c4 D2B2     		uxtb	r2, r2
 1342 03c6 02F00F02 		and	r2, r2, #15
 1343 03ca D1B2     		uxtb	r1, r2
 1344 03cc 7B4A     		ldr	r2, .L110+16
 1345 03ce 1344     		add	r3, r3, r2
 1346 03d0 0A46     		mov	r2, r1
 1347 03d2 1A74     		strb	r2, [r3, #16]
 385:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1348              		.loc 1 385 0 discriminator 3
 1349 03d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1350 03d6 0133     		adds	r3, r3, #1
 1351 03d8 FB73     		strb	r3, [r7, #15]
 1352              	.L83:
 385:.\Protocolo.c **** 					rventa1.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1353              		.loc 1 385 0 is_stmt 0 discriminator 1
 1354 03da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1355 03dc 072B     		cmp	r3, #7
 1356 03de ECD9     		bls	.L84
 387:.\Protocolo.c **** 				}			
 388:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1357              		.loc 1 388 0 is_stmt 1
 1358 03e0 0023     		movs	r3, #0
 1359 03e2 FB73     		strb	r3, [r7, #15]
 1360 03e4 0FE0     		b	.L85
 1361              	.L86:
 389:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1362              		.loc 1 389 0 discriminator 3
 1363 03e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1364 03e8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1365 03ea 1C32     		adds	r2, r2, #28
 1366 03ec 6F49     		ldr	r1, .L110
 1367 03ee 8A5C     		ldrb	r2, [r1, r2]
 1368 03f0 D2B2     		uxtb	r2, r2
 1369 03f2 02F00F02 		and	r2, r2, #15
 1370 03f6 D1B2     		uxtb	r1, r2
 1371 03f8 704A     		ldr	r2, .L110+16
 1372 03fa 1344     		add	r3, r3, r2
 1373 03fc 0A46     		mov	r2, r1
 1374 03fe DA71     		strb	r2, [r3, #7]
 388:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1375              		.loc 1 388 0 discriminator 3
 1376 0400 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 33


 1377 0402 0133     		adds	r3, r3, #1
 1378 0404 FB73     		strb	r3, [r7, #15]
 1379              	.L85:
 388:.\Protocolo.c **** 					rventa1.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1380              		.loc 1 388 0 is_stmt 0 discriminator 1
 1381 0406 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1382 0408 072B     		cmp	r3, #7
 1383 040a ECD9     		bls	.L86
 1384 040c 0BE1     		b	.L87
 1385              	.L80:
 390:.\Protocolo.c **** 				}
 391:.\Protocolo.c **** 			}
 392:.\Protocolo.c **** 			else if(dir==lado2.dir){
 1386              		.loc 1 392 0 is_stmt 1
 1387 040e 6C4B     		ldr	r3, .L110+20
 1388 0410 1B78     		ldrb	r3, [r3]
 1389 0412 DBB2     		uxtb	r3, r3
 1390 0414 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1391 0416 9A42     		cmp	r2, r3
 1392 0418 4CD1     		bne	.L88
 393:.\Protocolo.c **** 				rventa2.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1393              		.loc 1 393 0
 1394 041a 644B     		ldr	r3, .L110
 1395 041c 5B7A     		ldrb	r3, [r3, #9]
 1396 041e DBB2     		uxtb	r3, r3
 1397 0420 03F00F03 		and	r3, r3, #15
 1398 0424 DBB2     		uxtb	r3, r3
 1399 0426 0133     		adds	r3, r3, #1
 1400 0428 DAB2     		uxtb	r2, r3
 1401 042a 664B     		ldr	r3, .L110+24
 1402 042c 5A76     		strb	r2, [r3, #25]
 394:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1403              		.loc 1 394 0
 1404 042e 0023     		movs	r3, #0
 1405 0430 FB73     		strb	r3, [r7, #15]
 1406 0432 0FE0     		b	.L89
 1407              	.L90:
 395:.\Protocolo.c **** 					rventa2.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1408              		.loc 1 395 0 discriminator 3
 1409 0434 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1410 0436 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1411 0438 0C32     		adds	r2, r2, #12
 1412 043a 5C49     		ldr	r1, .L110
 1413 043c 8A5C     		ldrb	r2, [r1, r2]
 1414 043e D2B2     		uxtb	r2, r2
 1415 0440 02F00F02 		and	r2, r2, #15
 1416 0444 D1B2     		uxtb	r1, r2
 1417 0446 5F4A     		ldr	r2, .L110+24
 1418 0448 1344     		add	r3, r3, r2
 1419 044a 0A46     		mov	r2, r1
 1420 044c 9A70     		strb	r2, [r3, #2]
 394:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1421              		.loc 1 394 0 discriminator 3
 1422 044e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1423 0450 0133     		adds	r3, r3, #1
 1424 0452 FB73     		strb	r3, [r7, #15]
 1425              	.L89:
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 34


 394:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1426              		.loc 1 394 0 is_stmt 0 discriminator 1
 1427 0454 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1428 0456 052B     		cmp	r3, #5
 1429 0458 ECD9     		bls	.L90
 396:.\Protocolo.c **** 				}
 397:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1430              		.loc 1 397 0 is_stmt 1
 1431 045a 0023     		movs	r3, #0
 1432 045c FB73     		strb	r3, [r7, #15]
 1433 045e 0FE0     		b	.L91
 1434              	.L92:
 398:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1435              		.loc 1 398 0 discriminator 3
 1436 0460 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1437 0462 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1438 0464 1332     		adds	r2, r2, #19
 1439 0466 5149     		ldr	r1, .L110
 1440 0468 8A5C     		ldrb	r2, [r1, r2]
 1441 046a D2B2     		uxtb	r2, r2
 1442 046c 02F00F02 		and	r2, r2, #15
 1443 0470 D1B2     		uxtb	r1, r2
 1444 0472 544A     		ldr	r2, .L110+24
 1445 0474 1344     		add	r3, r3, r2
 1446 0476 0A46     		mov	r2, r1
 1447 0478 1A74     		strb	r2, [r3, #16]
 397:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1448              		.loc 1 397 0 discriminator 3
 1449 047a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1450 047c 0133     		adds	r3, r3, #1
 1451 047e FB73     		strb	r3, [r7, #15]
 1452              	.L91:
 397:.\Protocolo.c **** 					rventa2.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1453              		.loc 1 397 0 is_stmt 0 discriminator 1
 1454 0480 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1455 0482 072B     		cmp	r3, #7
 1456 0484 ECD9     		bls	.L92
 399:.\Protocolo.c **** 				}			
 400:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1457              		.loc 1 400 0 is_stmt 1
 1458 0486 0023     		movs	r3, #0
 1459 0488 FB73     		strb	r3, [r7, #15]
 1460 048a 0FE0     		b	.L93
 1461              	.L94:
 401:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1462              		.loc 1 401 0 discriminator 3
 1463 048c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1464 048e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1465 0490 1C32     		adds	r2, r2, #28
 1466 0492 4649     		ldr	r1, .L110
 1467 0494 8A5C     		ldrb	r2, [r1, r2]
 1468 0496 D2B2     		uxtb	r2, r2
 1469 0498 02F00F02 		and	r2, r2, #15
 1470 049c D1B2     		uxtb	r1, r2
 1471 049e 494A     		ldr	r2, .L110+24
 1472 04a0 1344     		add	r3, r3, r2
 1473 04a2 0A46     		mov	r2, r1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 35


 1474 04a4 DA71     		strb	r2, [r3, #7]
 400:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1475              		.loc 1 400 0 discriminator 3
 1476 04a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1477 04a8 0133     		adds	r3, r3, #1
 1478 04aa FB73     		strb	r3, [r7, #15]
 1479              	.L93:
 400:.\Protocolo.c **** 					rventa2.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1480              		.loc 1 400 0 is_stmt 0 discriminator 1
 1481 04ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1482 04ae 072B     		cmp	r3, #7
 1483 04b0 ECD9     		bls	.L94
 1484 04b2 B8E0     		b	.L87
 1485              	.L88:
 402:.\Protocolo.c **** 				}			
 403:.\Protocolo.c **** 			}
 404:.\Protocolo.c **** 			else if(dir==lado3.dir){
 1486              		.loc 1 404 0 is_stmt 1
 1487 04b4 444B     		ldr	r3, .L110+28
 1488 04b6 1B78     		ldrb	r3, [r3]
 1489 04b8 DBB2     		uxtb	r3, r3
 1490 04ba FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1491 04bc 9A42     		cmp	r2, r3
 1492 04be 4CD1     		bne	.L95
 405:.\Protocolo.c **** 				rventa3.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1493              		.loc 1 405 0
 1494 04c0 3A4B     		ldr	r3, .L110
 1495 04c2 5B7A     		ldrb	r3, [r3, #9]
 1496 04c4 DBB2     		uxtb	r3, r3
 1497 04c6 03F00F03 		and	r3, r3, #15
 1498 04ca DBB2     		uxtb	r3, r3
 1499 04cc 0133     		adds	r3, r3, #1
 1500 04ce DAB2     		uxtb	r2, r3
 1501 04d0 3E4B     		ldr	r3, .L110+32
 1502 04d2 5A76     		strb	r2, [r3, #25]
 406:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1503              		.loc 1 406 0
 1504 04d4 0023     		movs	r3, #0
 1505 04d6 FB73     		strb	r3, [r7, #15]
 1506 04d8 0FE0     		b	.L96
 1507              	.L97:
 407:.\Protocolo.c **** 					rventa3.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1508              		.loc 1 407 0 discriminator 3
 1509 04da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1510 04dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1511 04de 0C32     		adds	r2, r2, #12
 1512 04e0 3249     		ldr	r1, .L110
 1513 04e2 8A5C     		ldrb	r2, [r1, r2]
 1514 04e4 D2B2     		uxtb	r2, r2
 1515 04e6 02F00F02 		and	r2, r2, #15
 1516 04ea D1B2     		uxtb	r1, r2
 1517 04ec 374A     		ldr	r2, .L110+32
 1518 04ee 1344     		add	r3, r3, r2
 1519 04f0 0A46     		mov	r2, r1
 1520 04f2 9A70     		strb	r2, [r3, #2]
 406:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1521              		.loc 1 406 0 discriminator 3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 36


 1522 04f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1523 04f6 0133     		adds	r3, r3, #1
 1524 04f8 FB73     		strb	r3, [r7, #15]
 1525              	.L96:
 406:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1526              		.loc 1 406 0 is_stmt 0 discriminator 1
 1527 04fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1528 04fc 052B     		cmp	r3, #5
 1529 04fe ECD9     		bls	.L97
 408:.\Protocolo.c **** 				}
 409:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1530              		.loc 1 409 0 is_stmt 1
 1531 0500 0023     		movs	r3, #0
 1532 0502 FB73     		strb	r3, [r7, #15]
 1533 0504 0FE0     		b	.L98
 1534              	.L99:
 410:.\Protocolo.c **** 					rventa3.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1535              		.loc 1 410 0 discriminator 3
 1536 0506 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1537 0508 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1538 050a 1332     		adds	r2, r2, #19
 1539 050c 2749     		ldr	r1, .L110
 1540 050e 8A5C     		ldrb	r2, [r1, r2]
 1541 0510 D2B2     		uxtb	r2, r2
 1542 0512 02F00F02 		and	r2, r2, #15
 1543 0516 D1B2     		uxtb	r1, r2
 1544 0518 2C4A     		ldr	r2, .L110+32
 1545 051a 1344     		add	r3, r3, r2
 1546 051c 0A46     		mov	r2, r1
 1547 051e 1A74     		strb	r2, [r3, #16]
 409:.\Protocolo.c **** 					rventa3.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1548              		.loc 1 409 0 discriminator 3
 1549 0520 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1550 0522 0133     		adds	r3, r3, #1
 1551 0524 FB73     		strb	r3, [r7, #15]
 1552              	.L98:
 409:.\Protocolo.c **** 					rventa3.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1553              		.loc 1 409 0 is_stmt 0 discriminator 1
 1554 0526 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1555 0528 072B     		cmp	r3, #7
 1556 052a ECD9     		bls	.L99
 411:.\Protocolo.c **** 				}			
 412:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1557              		.loc 1 412 0 is_stmt 1
 1558 052c 0023     		movs	r3, #0
 1559 052e FB73     		strb	r3, [r7, #15]
 1560 0530 0FE0     		b	.L100
 1561              	.L101:
 413:.\Protocolo.c **** 					rventa3.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1562              		.loc 1 413 0 discriminator 3
 1563 0532 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1564 0534 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1565 0536 1C32     		adds	r2, r2, #28
 1566 0538 1C49     		ldr	r1, .L110
 1567 053a 8A5C     		ldrb	r2, [r1, r2]
 1568 053c D2B2     		uxtb	r2, r2
 1569 053e 02F00F02 		and	r2, r2, #15
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 37


 1570 0542 D1B2     		uxtb	r1, r2
 1571 0544 214A     		ldr	r2, .L110+32
 1572 0546 1344     		add	r3, r3, r2
 1573 0548 0A46     		mov	r2, r1
 1574 054a DA71     		strb	r2, [r3, #7]
 412:.\Protocolo.c **** 					rventa3.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1575              		.loc 1 412 0 discriminator 3
 1576 054c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1577 054e 0133     		adds	r3, r3, #1
 1578 0550 FB73     		strb	r3, [r7, #15]
 1579              	.L100:
 412:.\Protocolo.c **** 					rventa3.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1580              		.loc 1 412 0 is_stmt 0 discriminator 1
 1581 0552 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1582 0554 072B     		cmp	r3, #7
 1583 0556 ECD9     		bls	.L101
 1584 0558 65E0     		b	.L87
 1585              	.L95:
 414:.\Protocolo.c **** 				}			
 415:.\Protocolo.c **** 			}
 416:.\Protocolo.c **** 			else if(dir==lado4.dir){
 1586              		.loc 1 416 0 is_stmt 1
 1587 055a 1D4B     		ldr	r3, .L110+36
 1588 055c 1B78     		ldrb	r3, [r3]
 1589 055e DBB2     		uxtb	r3, r3
 1590 0560 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1591 0562 9A42     		cmp	r2, r3
 1592 0564 5FD1     		bne	.L87
 417:.\Protocolo.c **** 				rventa4.producto=(Surtidor_rxBuffer[9]&0x0F)+1;
 1593              		.loc 1 417 0
 1594 0566 114B     		ldr	r3, .L110
 1595 0568 5B7A     		ldrb	r3, [r3, #9]
 1596 056a DBB2     		uxtb	r3, r3
 1597 056c 03F00F03 		and	r3, r3, #15
 1598 0570 DBB2     		uxtb	r3, r3
 1599 0572 0133     		adds	r3, r3, #1
 1600 0574 DAB2     		uxtb	r2, r3
 1601 0576 0E4B     		ldr	r3, .L110+4
 1602 0578 5A76     		strb	r2, [r3, #25]
 418:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1603              		.loc 1 418 0
 1604 057a 0023     		movs	r3, #0
 1605 057c FB73     		strb	r3, [r7, #15]
 1606 057e 0FE0     		b	.L102
 1607              	.L103:
 419:.\Protocolo.c **** 					rventa4.ppu[x]=(Surtidor_rxBuffer[x+12]&0x0F);
 1608              		.loc 1 419 0 discriminator 3
 1609 0580 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1610 0582 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1611 0584 0C32     		adds	r2, r2, #12
 1612 0586 0949     		ldr	r1, .L110
 1613 0588 8A5C     		ldrb	r2, [r1, r2]
 1614 058a D2B2     		uxtb	r2, r2
 1615 058c 02F00F02 		and	r2, r2, #15
 1616 0590 D1B2     		uxtb	r1, r2
 1617 0592 074A     		ldr	r2, .L110+4
 1618 0594 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 38


 1619 0596 0A46     		mov	r2, r1
 1620 0598 9A70     		strb	r2, [r3, #2]
 418:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1621              		.loc 1 418 0 discriminator 3
 1622 059a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1623 059c 0133     		adds	r3, r3, #1
 1624 059e FB73     		strb	r3, [r7, #15]
 1625              	.L102:
 418:.\Protocolo.c **** 				for(x=0;x<=5;x++){
 1626              		.loc 1 418 0 is_stmt 0 discriminator 1
 1627 05a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1628 05a2 052B     		cmp	r3, #5
 1629 05a4 ECD9     		bls	.L103
 420:.\Protocolo.c **** 				}
 421:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1630              		.loc 1 421 0 is_stmt 1
 1631 05a6 0023     		movs	r3, #0
 1632 05a8 FB73     		strb	r3, [r7, #15]
 1633 05aa 23E0     		b	.L104
 1634              	.L111:
 1635              		.align	2
 1636              	.L110:
 1637 05ac 00000000 		.word	Surtidor_rxBuffer
 1638 05b0 00000000 		.word	rventa4
 1639 05b4 00000000 		.word	version
 1640 05b8 00000000 		.word	lado1
 1641 05bc 00000000 		.word	rventa1
 1642 05c0 00000000 		.word	lado2
 1643 05c4 00000000 		.word	rventa2
 1644 05c8 00000000 		.word	lado3
 1645 05cc 00000000 		.word	rventa3
 1646 05d0 00000000 		.word	lado4
 1647              	.L105:
 422:.\Protocolo.c **** 					rventa4.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1648              		.loc 1 422 0 discriminator 3
 1649 05d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1650 05d6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1651 05d8 1332     		adds	r2, r2, #19
 1652 05da 1749     		ldr	r1, .L112
 1653 05dc 8A5C     		ldrb	r2, [r1, r2]
 1654 05de D2B2     		uxtb	r2, r2
 1655 05e0 02F00F02 		and	r2, r2, #15
 1656 05e4 D1B2     		uxtb	r1, r2
 1657 05e6 154A     		ldr	r2, .L112+4
 1658 05e8 1344     		add	r3, r3, r2
 1659 05ea 0A46     		mov	r2, r1
 1660 05ec 1A74     		strb	r2, [r3, #16]
 421:.\Protocolo.c **** 					rventa4.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1661              		.loc 1 421 0 discriminator 3
 1662 05ee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1663 05f0 0133     		adds	r3, r3, #1
 1664 05f2 FB73     		strb	r3, [r7, #15]
 1665              	.L104:
 421:.\Protocolo.c **** 					rventa4.volumen[x]=(Surtidor_rxBuffer[x+19]&0x0F);
 1666              		.loc 1 421 0 is_stmt 0 discriminator 1
 1667 05f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1668 05f6 072B     		cmp	r3, #7
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 39


 1669 05f8 ECD9     		bls	.L105
 423:.\Protocolo.c **** 				}			
 424:.\Protocolo.c **** 				for(x=0;x<=7;x++){
 1670              		.loc 1 424 0 is_stmt 1
 1671 05fa 0023     		movs	r3, #0
 1672 05fc FB73     		strb	r3, [r7, #15]
 1673 05fe 0FE0     		b	.L106
 1674              	.L107:
 425:.\Protocolo.c **** 					rventa4.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1675              		.loc 1 425 0 discriminator 3
 1676 0600 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1677 0602 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1678 0604 1C32     		adds	r2, r2, #28
 1679 0606 0C49     		ldr	r1, .L112
 1680 0608 8A5C     		ldrb	r2, [r1, r2]
 1681 060a D2B2     		uxtb	r2, r2
 1682 060c 02F00F02 		and	r2, r2, #15
 1683 0610 D1B2     		uxtb	r1, r2
 1684 0612 0A4A     		ldr	r2, .L112+4
 1685 0614 1344     		add	r3, r3, r2
 1686 0616 0A46     		mov	r2, r1
 1687 0618 DA71     		strb	r2, [r3, #7]
 424:.\Protocolo.c **** 					rventa4.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1688              		.loc 1 424 0 discriminator 3
 1689 061a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1690 061c 0133     		adds	r3, r3, #1
 1691 061e FB73     		strb	r3, [r7, #15]
 1692              	.L106:
 424:.\Protocolo.c **** 					rventa4.dinero[x]=(Surtidor_rxBuffer[x+28]&0x0F);
 1693              		.loc 1 424 0 is_stmt 0 discriminator 1
 1694 0620 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1695 0622 072B     		cmp	r3, #7
 1696 0624 ECD9     		bls	.L107
 1697              	.L87:
 426:.\Protocolo.c **** 				}			
 427:.\Protocolo.c **** 			}			
 428:.\Protocolo.c **** 			return 1;
 1698              		.loc 1 428 0 is_stmt 1
 1699 0626 0123     		movs	r3, #1
 1700 0628 02E0     		b	.L77
 1701              	.L79:
 429:.\Protocolo.c **** 		}
 430:.\Protocolo.c **** 		else{
 431:.\Protocolo.c **** 			return 0;
 1702              		.loc 1 431 0
 1703 062a 0023     		movs	r3, #0
 1704 062c 00E0     		b	.L77
 1705              	.L78:
 432:.\Protocolo.c **** 		}
 433:.\Protocolo.c **** 	}
 434:.\Protocolo.c **** 	return 0;
 1706              		.loc 1 434 0
 1707 062e 0023     		movs	r3, #0
 1708              	.L77:
 435:.\Protocolo.c **** }
 1709              		.loc 1 435 0
 1710 0630 1846     		mov	r0, r3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 40


 1711 0632 1037     		adds	r7, r7, #16
 1712              		.cfi_def_cfa_offset 8
 1713 0634 BD46     		mov	sp, r7
 1714              		.cfi_def_cfa_register 13
 1715              		@ sp needed
 1716 0636 80BD     		pop	{r7, pc}
 1717              	.L113:
 1718              		.align	2
 1719              	.L112:
 1720 0638 00000000 		.word	Surtidor_rxBuffer
 1721 063c 00000000 		.word	rventa4
 1722              		.cfi_endproc
 1723              	.LFE69:
 1724              		.size	venta, .-venta
 1725              		.section	.text.programar,"ax",%progbits
 1726              		.align	2
 1727              		.global	programar
 1728              		.thumb
 1729              		.thumb_func
 1730              		.type	programar, %function
 1731              	programar:
 1732              	.LFB70:
 436:.\Protocolo.c **** 
 437:.\Protocolo.c **** /*
 438:.\Protocolo.c **** ***************************************************************************************************
 439:.\Protocolo.c **** *                                         uint8 programar(uint8 dir)
 440:.\Protocolo.c **** *
 441:.\Protocolo.c **** * Description : 
 442:.\Protocolo.c **** *               
 443:.\Protocolo.c **** *
 444:.\Protocolo.c **** * Argument(s) : none
 445:.\Protocolo.c **** *
 446:.\Protocolo.c **** * Return(s)   : none
 447:.\Protocolo.c **** *
 448:.\Protocolo.c **** * Caller(s)   : 
 449:.\Protocolo.c **** *
 450:.\Protocolo.c **** * Note(s)     : none.
 451:.\Protocolo.c **** ***************************************************************************************************
 452:.\Protocolo.c **** */
 453:.\Protocolo.c **** uint8 programar(uint8 dir, uint8 grado, uint8 *valor, uint8 preset){
 1733              		.loc 1 453 0
 1734              		.cfi_startproc
 1735              		@ args = 0, pretend = 0, frame = 32
 1736              		@ frame_needed = 1, uses_anonymous_args = 0
 1737 0000 80B5     		push	{r7, lr}
 1738              		.cfi_def_cfa_offset 8
 1739              		.cfi_offset 7, -8
 1740              		.cfi_offset 14, -4
 1741 0002 88B0     		sub	sp, sp, #32
 1742              		.cfi_def_cfa_offset 40
 1743 0004 00AF     		add	r7, sp, #0
 1744              		.cfi_def_cfa_register 7
 1745 0006 3A60     		str	r2, [r7]
 1746 0008 1A46     		mov	r2, r3
 1747 000a 0346     		mov	r3, r0
 1748 000c FB71     		strb	r3, [r7, #7]
 1749 000e 0B46     		mov	r3, r1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 41


 1750 0010 BB71     		strb	r3, [r7, #6]
 1751 0012 1346     		mov	r3, r2
 1752 0014 7B71     		strb	r3, [r7, #5]
 454:.\Protocolo.c **** 	uint8 buffer[18]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,temp,i,decimal;
 1753              		.loc 1 454 0
 1754 0016 07F10803 		add	r3, r7, #8
 1755 001a 0022     		movs	r2, #0
 1756 001c 1A60     		str	r2, [r3]
 1757 001e 0433     		adds	r3, r3, #4
 1758 0020 0022     		movs	r2, #0
 1759 0022 1A60     		str	r2, [r3]
 1760 0024 0433     		adds	r3, r3, #4
 1761 0026 0022     		movs	r2, #0
 1762 0028 1A60     		str	r2, [r3]
 1763 002a 0433     		adds	r3, r3, #4
 1764 002c 0022     		movs	r2, #0
 1765 002e 1A60     		str	r2, [r3]
 1766 0030 0433     		adds	r3, r3, #4
 1767 0032 0022     		movs	r2, #0
 1768 0034 1A80     		strh	r2, [r3]	@ movhi
 1769 0036 0233     		adds	r3, r3, #2
 455:.\Protocolo.c **** 	temp=4;
 1770              		.loc 1 455 0
 1771 0038 0423     		movs	r3, #4
 1772 003a BB77     		strb	r3, [r7, #30]
 456:.\Protocolo.c **** 	if(preset==3){
 1773              		.loc 1 456 0
 1774 003c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1775 003e 032B     		cmp	r3, #3
 1776 0040 01D1     		bne	.L115
 457:.\Protocolo.c **** 		preset=2;
 1777              		.loc 1 457 0
 1778 0042 0223     		movs	r3, #2
 1779 0044 7B71     		strb	r3, [r7, #5]
 1780              	.L115:
 458:.\Protocolo.c **** 	}
 459:.\Protocolo.c **** 	if(((version[1]==5)||(version[1]==6))&&(preset==1)){
 1781              		.loc 1 459 0
 1782 0046 B34B     		ldr	r3, .L158
 1783 0048 5B78     		ldrb	r3, [r3, #1]
 1784 004a DBB2     		uxtb	r3, r3
 1785 004c 052B     		cmp	r3, #5
 1786 004e 04D0     		beq	.L116
 1787              		.loc 1 459 0 is_stmt 0 discriminator 2
 1788 0050 B04B     		ldr	r3, .L158
 1789 0052 5B78     		ldrb	r3, [r3, #1]
 1790 0054 DBB2     		uxtb	r3, r3
 1791 0056 062B     		cmp	r3, #6
 1792 0058 04D1     		bne	.L117
 1793              	.L116:
 1794              		.loc 1 459 0 discriminator 3
 1795 005a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1796 005c 012B     		cmp	r3, #1
 1797 005e 01D1     		bne	.L117
 460:.\Protocolo.c **** 		temp=3;
 1798              		.loc 1 460 0 is_stmt 1
 1799 0060 0323     		movs	r3, #3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 42


 1800 0062 BB77     		strb	r3, [r7, #30]
 1801              	.L117:
 461:.\Protocolo.c **** 	}
 462:.\Protocolo.c **** 	if((version[1]==5)&&(preset==2)){
 1802              		.loc 1 462 0
 1803 0064 AB4B     		ldr	r3, .L158
 1804 0066 5B78     		ldrb	r3, [r3, #1]
 1805 0068 DBB2     		uxtb	r3, r3
 1806 006a 052B     		cmp	r3, #5
 1807 006c 04D1     		bne	.L118
 1808              		.loc 1 462 0 is_stmt 0 discriminator 1
 1809 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1810 0070 022B     		cmp	r3, #2
 1811 0072 01D1     		bne	.L118
 463:.\Protocolo.c **** 		temp=5;
 1812              		.loc 1 463 0 is_stmt 1
 1813 0074 0523     		movs	r3, #5
 1814 0076 BB77     		strb	r3, [r7, #30]
 1815              	.L118:
 464:.\Protocolo.c **** 	}
 465:.\Protocolo.c **** 	if((version[1]==7)&&(preset==1)){
 1816              		.loc 1 465 0
 1817 0078 A64B     		ldr	r3, .L158
 1818 007a 5B78     		ldrb	r3, [r3, #1]
 1819 007c DBB2     		uxtb	r3, r3
 1820 007e 072B     		cmp	r3, #7
 1821 0080 04D1     		bne	.L119
 1822              		.loc 1 465 0 is_stmt 0 discriminator 1
 1823 0082 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1824 0084 012B     		cmp	r3, #1
 1825 0086 01D1     		bne	.L119
 466:.\Protocolo.c **** 		temp=0;
 1826              		.loc 1 466 0 is_stmt 1
 1827 0088 0023     		movs	r3, #0
 1828 008a BB77     		strb	r3, [r7, #30]
 1829              	.L119:
 467:.\Protocolo.c **** 	}
 468:.\Protocolo.c **** 	if((version[1]==7)&&(preset==2)){
 1830              		.loc 1 468 0
 1831 008c A14B     		ldr	r3, .L158
 1832 008e 5B78     		ldrb	r3, [r3, #1]
 1833 0090 DBB2     		uxtb	r3, r3
 1834 0092 072B     		cmp	r3, #7
 1835 0094 04D1     		bne	.L120
 1836              		.loc 1 468 0 is_stmt 0 discriminator 1
 1837 0096 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1838 0098 022B     		cmp	r3, #2
 1839 009a 01D1     		bne	.L120
 469:.\Protocolo.c **** 		temp=2;
 1840              		.loc 1 469 0 is_stmt 1
 1841 009c 0223     		movs	r3, #2
 1842 009e BB77     		strb	r3, [r7, #30]
 1843              	.L120:
 470:.\Protocolo.c **** 	}	
 471:.\Protocolo.c **** 	decimal=0;
 1844              		.loc 1 471 0
 1845 00a0 0023     		movs	r3, #0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 43


 1846 00a2 3B77     		strb	r3, [r7, #28]
 472:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1847              		.loc 1 472 0
 1848 00a4 0123     		movs	r3, #1
 1849 00a6 7B77     		strb	r3, [r7, #29]
 1850 00a8 0AE0     		b	.L121
 1851              	.L123:
 473:.\Protocolo.c **** 		if(valor[i]=='.'){
 1852              		.loc 1 473 0
 1853 00aa 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1854 00ac 3A68     		ldr	r2, [r7]
 1855 00ae 1344     		add	r3, r3, r2
 1856 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1857 00b2 2E2B     		cmp	r3, #46
 1858 00b4 01D1     		bne	.L122
 474:.\Protocolo.c **** 			decimal=i;	
 1859              		.loc 1 474 0
 1860 00b6 7B7F     		ldrb	r3, [r7, #29]
 1861 00b8 3B77     		strb	r3, [r7, #28]
 1862              	.L122:
 472:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1863              		.loc 1 472 0 discriminator 2
 1864 00ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1865 00bc 0133     		adds	r3, r3, #1
 1866 00be 7B77     		strb	r3, [r7, #29]
 1867              	.L121:
 472:.\Protocolo.c **** 	for(i=1;i<=7;i++){
 1868              		.loc 1 472 0 is_stmt 0 discriminator 1
 1869 00c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 1870 00c2 072B     		cmp	r3, #7
 1871 00c4 F1D9     		bls	.L123
 475:.\Protocolo.c **** 		}
 476:.\Protocolo.c **** 	}
 477:.\Protocolo.c **** 	if(decimal>4){
 1872              		.loc 1 477 0 is_stmt 1
 1873 00c6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1874 00c8 042B     		cmp	r3, #4
 1875 00ca 01D9     		bls	.L124
 478:.\Protocolo.c **** 		return 0;
 1876              		.loc 1 478 0
 1877 00cc 0023     		movs	r3, #0
 1878 00ce CFE3     		b	.L157
 1879              	.L124:
 479:.\Protocolo.c **** 	}
 480:.\Protocolo.c **** 	if(version[1]!=7){		
 1880              		.loc 1 480 0
 1881 00d0 904B     		ldr	r3, .L158
 1882 00d2 5B78     		ldrb	r3, [r3, #1]
 1883 00d4 DBB2     		uxtb	r3, r3
 1884 00d6 072B     		cmp	r3, #7
 1885 00d8 00F00582 		beq	.L126
 481:.\Protocolo.c **** 		buffer[0]=0xFF;
 1886              		.loc 1 481 0
 1887 00dc FF23     		movs	r3, #255
 1888 00de 3B72     		strb	r3, [r7, #8]
 482:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 1889              		.loc 1 482 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 44


 1890 00e0 BB7F     		ldrb	r3, [r7, #30]
 1891 00e2 63F01F03 		orn	r3, r3, #31
 1892 00e6 DBB2     		uxtb	r3, r3
 1893 00e8 7B72     		strb	r3, [r7, #9]
 483:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 1894              		.loc 1 483 0
 1895 00ea 7B79     		ldrb	r3, [r7, #5]
 1896 00ec 63F00F03 		orn	r3, r3, #15
 1897 00f0 DBB2     		uxtb	r3, r3
 1898 00f2 BB72     		strb	r3, [r7, #10]
 484:.\Protocolo.c **** 		buffer[3]=0xF4;
 1899              		.loc 1 484 0
 1900 00f4 F423     		movs	r3, #244
 1901 00f6 FB72     		strb	r3, [r7, #11]
 485:.\Protocolo.c **** 		buffer[4]=0xF8;	
 1902              		.loc 1 485 0
 1903 00f8 F823     		movs	r3, #248
 1904 00fa 3B73     		strb	r3, [r7, #12]
 486:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 1905              		.loc 1 486 0
 1906 00fc 3B68     		ldr	r3, [r7]
 1907 00fe 0133     		adds	r3, r3, #1
 1908 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1909 0102 63F01F03 		orn	r3, r3, #31
 1910 0106 DBB2     		uxtb	r3, r3
 1911 0108 7B73     		strb	r3, [r7, #13]
 487:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 1912              		.loc 1 487 0
 1913 010a 3B68     		ldr	r3, [r7]
 1914 010c 0233     		adds	r3, r3, #2
 1915 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1916 0110 63F01F03 		orn	r3, r3, #31
 1917 0114 DBB2     		uxtb	r3, r3
 1918 0116 BB73     		strb	r3, [r7, #14]
 488:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 1919              		.loc 1 488 0
 1920 0118 3B68     		ldr	r3, [r7]
 1921 011a 0333     		adds	r3, r3, #3
 1922 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1923 011e 63F01F03 		orn	r3, r3, #31
 1924 0122 DBB2     		uxtb	r3, r3
 1925 0124 FB73     		strb	r3, [r7, #15]
 489:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 1926              		.loc 1 489 0
 1927 0126 3B68     		ldr	r3, [r7]
 1928 0128 0433     		adds	r3, r3, #4
 1929 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1930 012c 63F01F03 		orn	r3, r3, #31
 1931 0130 DBB2     		uxtb	r3, r3
 1932 0132 3B74     		strb	r3, [r7, #16]
 490:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 1933              		.loc 1 490 0
 1934 0134 3B68     		ldr	r3, [r7]
 1935 0136 0533     		adds	r3, r3, #5
 1936 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1937 013a 63F01F03 		orn	r3, r3, #31
 1938 013e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 45


 1939 0140 7B74     		strb	r3, [r7, #17]
 491:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);
 1940              		.loc 1 491 0
 1941 0142 3B68     		ldr	r3, [r7]
 1942 0144 0633     		adds	r3, r3, #6
 1943 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1944 0148 63F01F03 		orn	r3, r3, #31
 1945 014c DBB2     		uxtb	r3, r3
 1946 014e BB74     		strb	r3, [r7, #18]
 492:.\Protocolo.c **** 		if(version[2]==2){
 1947              		.loc 1 492 0
 1948 0150 704B     		ldr	r3, .L158
 1949 0152 9B78     		ldrb	r3, [r3, #2]
 1950 0154 DBB2     		uxtb	r3, r3
 1951 0156 022B     		cmp	r3, #2
 1952 0158 40F0A580 		bne	.L127
 493:.\Protocolo.c **** 			if(decimal==4){
 1953              		.loc 1 493 0
 1954 015c 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1955 015e 042B     		cmp	r3, #4
 1956 0160 29D1     		bne	.L128
 494:.\Protocolo.c **** 				buffer[5]=(valor[2]|0xE0);
 1957              		.loc 1 494 0
 1958 0162 3B68     		ldr	r3, [r7]
 1959 0164 0233     		adds	r3, r3, #2
 1960 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1961 0168 63F01F03 		orn	r3, r3, #31
 1962 016c DBB2     		uxtb	r3, r3
 1963 016e 7B73     		strb	r3, [r7, #13]
 495:.\Protocolo.c **** 				buffer[6]=(valor[3]|0xE0);
 1964              		.loc 1 495 0
 1965 0170 3B68     		ldr	r3, [r7]
 1966 0172 0333     		adds	r3, r3, #3
 1967 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1968 0176 63F01F03 		orn	r3, r3, #31
 1969 017a DBB2     		uxtb	r3, r3
 1970 017c BB73     		strb	r3, [r7, #14]
 496:.\Protocolo.c **** 				buffer[7]=(valor[5]|0xE0);
 1971              		.loc 1 496 0
 1972 017e 3B68     		ldr	r3, [r7]
 1973 0180 0533     		adds	r3, r3, #5
 1974 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1975 0184 63F01F03 		orn	r3, r3, #31
 1976 0188 DBB2     		uxtb	r3, r3
 1977 018a FB73     		strb	r3, [r7, #15]
 497:.\Protocolo.c **** 				buffer[8]=(valor[6]|0xE0);
 1978              		.loc 1 497 0
 1979 018c 3B68     		ldr	r3, [r7]
 1980 018e 0633     		adds	r3, r3, #6
 1981 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1982 0192 63F01F03 		orn	r3, r3, #31
 1983 0196 DBB2     		uxtb	r3, r3
 1984 0198 3B74     		strb	r3, [r7, #16]
 498:.\Protocolo.c **** 				buffer[9]=(valor[7]|0xE0);
 1985              		.loc 1 498 0
 1986 019a 3B68     		ldr	r3, [r7]
 1987 019c 0733     		adds	r3, r3, #7
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 46


 1988 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1989 01a0 63F01F03 		orn	r3, r3, #31
 1990 01a4 DBB2     		uxtb	r3, r3
 1991 01a6 7B74     		strb	r3, [r7, #17]
 499:.\Protocolo.c **** 				buffer[10]=(valor[8]|0xE0);
 1992              		.loc 1 499 0
 1993 01a8 3B68     		ldr	r3, [r7]
 1994 01aa 0833     		adds	r3, r3, #8
 1995 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1996 01ae 63F01F03 		orn	r3, r3, #31
 1997 01b2 DBB2     		uxtb	r3, r3
 1998 01b4 BB74     		strb	r3, [r7, #18]
 1999              	.L128:
 500:.\Protocolo.c **** 			}
 501:.\Protocolo.c **** 			if(decimal==3){
 2000              		.loc 1 501 0
 2001 01b6 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2002 01b8 032B     		cmp	r3, #3
 2003 01ba 29D1     		bne	.L129
 502:.\Protocolo.c **** 				buffer[5]=(valor[1]|0xE0);
 2004              		.loc 1 502 0
 2005 01bc 3B68     		ldr	r3, [r7]
 2006 01be 0133     		adds	r3, r3, #1
 2007 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2008 01c2 63F01F03 		orn	r3, r3, #31
 2009 01c6 DBB2     		uxtb	r3, r3
 2010 01c8 7B73     		strb	r3, [r7, #13]
 503:.\Protocolo.c **** 				buffer[6]=(valor[2]|0xE0);
 2011              		.loc 1 503 0
 2012 01ca 3B68     		ldr	r3, [r7]
 2013 01cc 0233     		adds	r3, r3, #2
 2014 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2015 01d0 63F01F03 		orn	r3, r3, #31
 2016 01d4 DBB2     		uxtb	r3, r3
 2017 01d6 BB73     		strb	r3, [r7, #14]
 504:.\Protocolo.c **** 				buffer[7]=(valor[4]|0xE0);
 2018              		.loc 1 504 0
 2019 01d8 3B68     		ldr	r3, [r7]
 2020 01da 0433     		adds	r3, r3, #4
 2021 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2022 01de 63F01F03 		orn	r3, r3, #31
 2023 01e2 DBB2     		uxtb	r3, r3
 2024 01e4 FB73     		strb	r3, [r7, #15]
 505:.\Protocolo.c **** 				buffer[8]=(valor[5]|0xE0);
 2025              		.loc 1 505 0
 2026 01e6 3B68     		ldr	r3, [r7]
 2027 01e8 0533     		adds	r3, r3, #5
 2028 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2029 01ec 63F01F03 		orn	r3, r3, #31
 2030 01f0 DBB2     		uxtb	r3, r3
 2031 01f2 3B74     		strb	r3, [r7, #16]
 506:.\Protocolo.c **** 				buffer[9]=(valor[6]|0xE0);
 2032              		.loc 1 506 0
 2033 01f4 3B68     		ldr	r3, [r7]
 2034 01f6 0633     		adds	r3, r3, #6
 2035 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2036 01fa 63F01F03 		orn	r3, r3, #31
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 47


 2037 01fe DBB2     		uxtb	r3, r3
 2038 0200 7B74     		strb	r3, [r7, #17]
 507:.\Protocolo.c **** 				buffer[10]=(valor[7]|0xE0);
 2039              		.loc 1 507 0
 2040 0202 3B68     		ldr	r3, [r7]
 2041 0204 0733     		adds	r3, r3, #7
 2042 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2043 0208 63F01F03 		orn	r3, r3, #31
 2044 020c DBB2     		uxtb	r3, r3
 2045 020e BB74     		strb	r3, [r7, #18]
 2046              	.L129:
 508:.\Protocolo.c **** 			}
 509:.\Protocolo.c **** 			if(decimal==2){
 2047              		.loc 1 509 0
 2048 0210 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2049 0212 022B     		cmp	r3, #2
 2050 0214 24D1     		bne	.L130
 510:.\Protocolo.c **** 				buffer[5]=0xE0;
 2051              		.loc 1 510 0
 2052 0216 E023     		movs	r3, #224
 2053 0218 7B73     		strb	r3, [r7, #13]
 511:.\Protocolo.c **** 				buffer[6]=(valor[1]|0xE0);
 2054              		.loc 1 511 0
 2055 021a 3B68     		ldr	r3, [r7]
 2056 021c 0133     		adds	r3, r3, #1
 2057 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2058 0220 63F01F03 		orn	r3, r3, #31
 2059 0224 DBB2     		uxtb	r3, r3
 2060 0226 BB73     		strb	r3, [r7, #14]
 512:.\Protocolo.c **** 				buffer[7]=(valor[3]|0xE0);
 2061              		.loc 1 512 0
 2062 0228 3B68     		ldr	r3, [r7]
 2063 022a 0333     		adds	r3, r3, #3
 2064 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2065 022e 63F01F03 		orn	r3, r3, #31
 2066 0232 DBB2     		uxtb	r3, r3
 2067 0234 FB73     		strb	r3, [r7, #15]
 513:.\Protocolo.c **** 				buffer[8]=(valor[4]|0xE0);
 2068              		.loc 1 513 0
 2069 0236 3B68     		ldr	r3, [r7]
 2070 0238 0433     		adds	r3, r3, #4
 2071 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2072 023c 63F01F03 		orn	r3, r3, #31
 2073 0240 DBB2     		uxtb	r3, r3
 2074 0242 3B74     		strb	r3, [r7, #16]
 514:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);	
 2075              		.loc 1 514 0
 2076 0244 3B68     		ldr	r3, [r7]
 2077 0246 0533     		adds	r3, r3, #5
 2078 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2079 024a 63F01F03 		orn	r3, r3, #31
 2080 024e DBB2     		uxtb	r3, r3
 2081 0250 7B74     		strb	r3, [r7, #17]
 515:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 2082              		.loc 1 515 0
 2083 0252 3B68     		ldr	r3, [r7]
 2084 0254 0633     		adds	r3, r3, #6
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 48


 2085 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2086 0258 63F01F03 		orn	r3, r3, #31
 2087 025c DBB2     		uxtb	r3, r3
 2088 025e BB74     		strb	r3, [r7, #18]
 2089              	.L130:
 516:.\Protocolo.c **** 			}
 517:.\Protocolo.c **** 			if(decimal==0){
 2090              		.loc 1 517 0
 2091 0260 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2092 0262 002B     		cmp	r3, #0
 2093 0264 1FD1     		bne	.L127
 518:.\Protocolo.c **** 				buffer[5]=0xE0;
 2094              		.loc 1 518 0
 2095 0266 E023     		movs	r3, #224
 2096 0268 7B73     		strb	r3, [r7, #13]
 519:.\Protocolo.c **** 				buffer[6]=0xE0;
 2097              		.loc 1 519 0
 2098 026a E023     		movs	r3, #224
 2099 026c BB73     		strb	r3, [r7, #14]
 520:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2100              		.loc 1 520 0
 2101 026e 3B68     		ldr	r3, [r7]
 2102 0270 0133     		adds	r3, r3, #1
 2103 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2104 0274 63F01F03 		orn	r3, r3, #31
 2105 0278 DBB2     		uxtb	r3, r3
 2106 027a FB73     		strb	r3, [r7, #15]
 521:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2107              		.loc 1 521 0
 2108 027c 3B68     		ldr	r3, [r7]
 2109 027e 0233     		adds	r3, r3, #2
 2110 0280 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2111 0282 63F01F03 		orn	r3, r3, #31
 2112 0286 DBB2     		uxtb	r3, r3
 2113 0288 3B74     		strb	r3, [r7, #16]
 522:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2114              		.loc 1 522 0
 2115 028a 3B68     		ldr	r3, [r7]
 2116 028c 0333     		adds	r3, r3, #3
 2117 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2118 0290 63F01F03 		orn	r3, r3, #31
 2119 0294 DBB2     		uxtb	r3, r3
 2120 0296 7B74     		strb	r3, [r7, #17]
 523:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 2121              		.loc 1 523 0
 2122 0298 3B68     		ldr	r3, [r7]
 2123 029a 0433     		adds	r3, r3, #4
 2124 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2125 029e 63F01F03 		orn	r3, r3, #31
 2126 02a2 DBB2     		uxtb	r3, r3
 2127 02a4 BB74     		strb	r3, [r7, #18]
 2128              	.L127:
 524:.\Protocolo.c **** 			}			
 525:.\Protocolo.c **** 		}
 526:.\Protocolo.c **** 		buffer[11]=0xFB;
 2129              		.loc 1 526 0
 2130 02a6 FB23     		movs	r3, #251
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 49


 2131 02a8 FB74     		strb	r3, [r7, #19]
 527:.\Protocolo.c **** 		buffer[12]=0;
 2132              		.loc 1 527 0
 2133 02aa 0023     		movs	r3, #0
 2134 02ac 3B75     		strb	r3, [r7, #20]
 528:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 2135              		.loc 1 528 0
 2136 02ae 0023     		movs	r3, #0
 2137 02b0 7B77     		strb	r3, [r7, #29]
 2138 02b2 0FE0     		b	.L131
 2139              	.L132:
 529:.\Protocolo.c **** 			buffer[12]+=(buffer[i]&0x0F);	
 2140              		.loc 1 529 0 discriminator 3
 2141 02b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 2142 02b6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2143 02b8 07F12001 		add	r1, r7, #32
 2144 02bc 0B44     		add	r3, r3, r1
 2145 02be 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2146 02c2 03F00F03 		and	r3, r3, #15
 2147 02c6 DBB2     		uxtb	r3, r3
 2148 02c8 1344     		add	r3, r3, r2
 2149 02ca DBB2     		uxtb	r3, r3
 2150 02cc 3B75     		strb	r3, [r7, #20]
 528:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 2151              		.loc 1 528 0 discriminator 3
 2152 02ce 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2153 02d0 0133     		adds	r3, r3, #1
 2154 02d2 7B77     		strb	r3, [r7, #29]
 2155              	.L131:
 528:.\Protocolo.c **** 		for(i=0;i<=11;i++){
 2156              		.loc 1 528 0 is_stmt 0 discriminator 1
 2157 02d4 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2158 02d6 0B2B     		cmp	r3, #11
 2159 02d8 ECD9     		bls	.L132
 530:.\Protocolo.c **** 		}
 531:.\Protocolo.c **** 		buffer[12]=(((~buffer[12])+1)&0x0F)|0xE0;
 2160              		.loc 1 531 0 is_stmt 1
 2161 02da 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 2162 02dc 5B42     		negs	r3, r3
 2163 02de DBB2     		uxtb	r3, r3
 2164 02e0 DBB2     		uxtb	r3, r3
 2165 02e2 03F00F03 		and	r3, r3, #15
 2166 02e6 DBB2     		uxtb	r3, r3
 2167 02e8 63F01F03 		orn	r3, r3, #31
 2168 02ec DBB2     		uxtb	r3, r3
 2169 02ee DBB2     		uxtb	r3, r3
 2170 02f0 3B75     		strb	r3, [r7, #20]
 532:.\Protocolo.c **** 		buffer[13]=0xF0;
 2171              		.loc 1 532 0
 2172 02f2 F023     		movs	r3, #240
 2173 02f4 7B75     		strb	r3, [r7, #21]
 533:.\Protocolo.c **** 		size=13;
 2174              		.loc 1 533 0
 2175 02f6 0D23     		movs	r3, #13
 2176 02f8 FB77     		strb	r3, [r7, #31]
 534:.\Protocolo.c **** 		if(version[1]==5){
 2177              		.loc 1 534 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 50


 2178 02fa 064B     		ldr	r3, .L158
 2179 02fc 5B78     		ldrb	r3, [r3, #1]
 2180 02fe DBB2     		uxtb	r3, r3
 2181 0300 052B     		cmp	r3, #5
 2182 0302 2CD1     		bne	.L133
 535:.\Protocolo.c **** 			buffer[10]=0xFB;
 2183              		.loc 1 535 0
 2184 0304 FB23     		movs	r3, #251
 2185 0306 BB74     		strb	r3, [r7, #18]
 536:.\Protocolo.c **** 			buffer[11]=0;
 2186              		.loc 1 536 0
 2187 0308 0023     		movs	r3, #0
 2188 030a FB74     		strb	r3, [r7, #19]
 537:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 2189              		.loc 1 537 0
 2190 030c 0023     		movs	r3, #0
 2191 030e 7B77     		strb	r3, [r7, #29]
 2192 0310 12E0     		b	.L134
 2193              	.L159:
 2194 0312 00BF     		.align	2
 2195              	.L158:
 2196 0314 00000000 		.word	version
 2197              	.L135:
 538:.\Protocolo.c **** 				buffer[11]+=(buffer[i]&0x0F);	
 2198              		.loc 1 538 0 discriminator 3
 2199 0318 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 2200 031a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2201 031c 07F12001 		add	r1, r7, #32
 2202 0320 0B44     		add	r3, r3, r1
 2203 0322 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2204 0326 03F00F03 		and	r3, r3, #15
 2205 032a DBB2     		uxtb	r3, r3
 2206 032c 1344     		add	r3, r3, r2
 2207 032e DBB2     		uxtb	r3, r3
 2208 0330 FB74     		strb	r3, [r7, #19]
 537:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 2209              		.loc 1 537 0 discriminator 3
 2210 0332 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2211 0334 0133     		adds	r3, r3, #1
 2212 0336 7B77     		strb	r3, [r7, #29]
 2213              	.L134:
 537:.\Protocolo.c **** 			for(i=0;i<=10;i++){
 2214              		.loc 1 537 0 is_stmt 0 discriminator 1
 2215 0338 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2216 033a 0A2B     		cmp	r3, #10
 2217 033c ECD9     		bls	.L135
 539:.\Protocolo.c **** 			}
 540:.\Protocolo.c **** 			buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 2218              		.loc 1 540 0 is_stmt 1
 2219 033e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2220 0340 5B42     		negs	r3, r3
 2221 0342 DBB2     		uxtb	r3, r3
 2222 0344 DBB2     		uxtb	r3, r3
 2223 0346 03F00F03 		and	r3, r3, #15
 2224 034a DBB2     		uxtb	r3, r3
 2225 034c 63F01F03 		orn	r3, r3, #31
 2226 0350 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 51


 2227 0352 DBB2     		uxtb	r3, r3
 2228 0354 FB74     		strb	r3, [r7, #19]
 541:.\Protocolo.c **** 			buffer[12]=0xF0;
 2229              		.loc 1 541 0
 2230 0356 F023     		movs	r3, #240
 2231 0358 3B75     		strb	r3, [r7, #20]
 542:.\Protocolo.c **** 			size=12;		
 2232              		.loc 1 542 0
 2233 035a 0C23     		movs	r3, #12
 2234 035c FB77     		strb	r3, [r7, #31]
 2235              	.L133:
 543:.\Protocolo.c **** 		}
 544:.\Protocolo.c **** 		if(preset==1){
 2236              		.loc 1 544 0
 2237 035e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2238 0360 012B     		cmp	r3, #1
 2239 0362 40F0C080 		bne	.L126
 545:.\Protocolo.c **** 			buffer[4]=0xF6;
 2240              		.loc 1 545 0
 2241 0366 F623     		movs	r3, #246
 2242 0368 3B73     		strb	r3, [r7, #12]
 546:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 2243              		.loc 1 546 0
 2244 036a BB79     		ldrb	r3, [r7, #6]
 2245 036c 013B     		subs	r3, r3, #1
 2246 036e DBB2     		uxtb	r3, r3
 2247 0370 DBB2     		uxtb	r3, r3
 2248 0372 63F01F03 		orn	r3, r3, #31
 2249 0376 DBB2     		uxtb	r3, r3
 2250 0378 DBB2     		uxtb	r3, r3
 2251 037a 7B73     		strb	r3, [r7, #13]
 547:.\Protocolo.c **** 			buffer[6]=0xF8;
 2252              		.loc 1 547 0
 2253 037c F823     		movs	r3, #248
 2254 037e BB73     		strb	r3, [r7, #14]
 548:.\Protocolo.c **** 			if(decimal==4){
 2255              		.loc 1 548 0
 2256 0380 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2257 0382 042B     		cmp	r3, #4
 2258 0384 22D1     		bne	.L136
 549:.\Protocolo.c **** 				buffer[7]=(valor[2]|0xE0);
 2259              		.loc 1 549 0
 2260 0386 3B68     		ldr	r3, [r7]
 2261 0388 0233     		adds	r3, r3, #2
 2262 038a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2263 038c 63F01F03 		orn	r3, r3, #31
 2264 0390 DBB2     		uxtb	r3, r3
 2265 0392 FB73     		strb	r3, [r7, #15]
 550:.\Protocolo.c **** 				buffer[8]=(valor[3]|0xE0);
 2266              		.loc 1 550 0
 2267 0394 3B68     		ldr	r3, [r7]
 2268 0396 0333     		adds	r3, r3, #3
 2269 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2270 039a 63F01F03 		orn	r3, r3, #31
 2271 039e DBB2     		uxtb	r3, r3
 2272 03a0 3B74     		strb	r3, [r7, #16]
 551:.\Protocolo.c **** 				buffer[9]=(valor[5]|0xE0);
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 52


 2273              		.loc 1 551 0
 2274 03a2 3B68     		ldr	r3, [r7]
 2275 03a4 0533     		adds	r3, r3, #5
 2276 03a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2277 03a8 63F01F03 		orn	r3, r3, #31
 2278 03ac DBB2     		uxtb	r3, r3
 2279 03ae 7B74     		strb	r3, [r7, #17]
 552:.\Protocolo.c **** 				buffer[10]=(valor[6]|0xE0);
 2280              		.loc 1 552 0
 2281 03b0 3B68     		ldr	r3, [r7]
 2282 03b2 0633     		adds	r3, r3, #6
 2283 03b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2284 03b6 63F01F03 		orn	r3, r3, #31
 2285 03ba DBB2     		uxtb	r3, r3
 2286 03bc BB74     		strb	r3, [r7, #18]
 553:.\Protocolo.c **** 				buffer[11]=(valor[7]|0xE0);
 2287              		.loc 1 553 0
 2288 03be 3B68     		ldr	r3, [r7]
 2289 03c0 0733     		adds	r3, r3, #7
 2290 03c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2291 03c4 63F01F03 		orn	r3, r3, #31
 2292 03c8 DBB2     		uxtb	r3, r3
 2293 03ca FB74     		strb	r3, [r7, #19]
 2294              	.L136:
 554:.\Protocolo.c **** 			}
 555:.\Protocolo.c **** 			if(decimal==3){
 2295              		.loc 1 555 0
 2296 03cc 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2297 03ce 032B     		cmp	r3, #3
 2298 03d0 22D1     		bne	.L137
 556:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2299              		.loc 1 556 0
 2300 03d2 3B68     		ldr	r3, [r7]
 2301 03d4 0133     		adds	r3, r3, #1
 2302 03d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2303 03d8 63F01F03 		orn	r3, r3, #31
 2304 03dc DBB2     		uxtb	r3, r3
 2305 03de FB73     		strb	r3, [r7, #15]
 557:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2306              		.loc 1 557 0
 2307 03e0 3B68     		ldr	r3, [r7]
 2308 03e2 0233     		adds	r3, r3, #2
 2309 03e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2310 03e6 63F01F03 		orn	r3, r3, #31
 2311 03ea DBB2     		uxtb	r3, r3
 2312 03ec 3B74     		strb	r3, [r7, #16]
 558:.\Protocolo.c **** 				buffer[9]=(valor[4]|0xE0);
 2313              		.loc 1 558 0
 2314 03ee 3B68     		ldr	r3, [r7]
 2315 03f0 0433     		adds	r3, r3, #4
 2316 03f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2317 03f4 63F01F03 		orn	r3, r3, #31
 2318 03f8 DBB2     		uxtb	r3, r3
 2319 03fa 7B74     		strb	r3, [r7, #17]
 559:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 2320              		.loc 1 559 0
 2321 03fc 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 53


 2322 03fe 0533     		adds	r3, r3, #5
 2323 0400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2324 0402 63F01F03 		orn	r3, r3, #31
 2325 0406 DBB2     		uxtb	r3, r3
 2326 0408 BB74     		strb	r3, [r7, #18]
 560:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);		
 2327              		.loc 1 560 0
 2328 040a 3B68     		ldr	r3, [r7]
 2329 040c 0633     		adds	r3, r3, #6
 2330 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2331 0410 63F01F03 		orn	r3, r3, #31
 2332 0414 DBB2     		uxtb	r3, r3
 2333 0416 FB74     		strb	r3, [r7, #19]
 2334              	.L137:
 561:.\Protocolo.c **** 			}
 562:.\Protocolo.c **** 			if(decimal==2){
 2335              		.loc 1 562 0
 2336 0418 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2337 041a 022B     		cmp	r3, #2
 2338 041c 1DD1     		bne	.L138
 563:.\Protocolo.c **** 				buffer[7]=0xE0;
 2339              		.loc 1 563 0
 2340 041e E023     		movs	r3, #224
 2341 0420 FB73     		strb	r3, [r7, #15]
 564:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 2342              		.loc 1 564 0
 2343 0422 3B68     		ldr	r3, [r7]
 2344 0424 0133     		adds	r3, r3, #1
 2345 0426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2346 0428 63F01F03 		orn	r3, r3, #31
 2347 042c DBB2     		uxtb	r3, r3
 2348 042e 3B74     		strb	r3, [r7, #16]
 565:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2349              		.loc 1 565 0
 2350 0430 3B68     		ldr	r3, [r7]
 2351 0432 0333     		adds	r3, r3, #3
 2352 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2353 0436 63F01F03 		orn	r3, r3, #31
 2354 043a DBB2     		uxtb	r3, r3
 2355 043c 7B74     		strb	r3, [r7, #17]
 566:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 2356              		.loc 1 566 0
 2357 043e 3B68     		ldr	r3, [r7]
 2358 0440 0433     		adds	r3, r3, #4
 2359 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2360 0444 63F01F03 		orn	r3, r3, #31
 2361 0448 DBB2     		uxtb	r3, r3
 2362 044a BB74     		strb	r3, [r7, #18]
 567:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);		
 2363              		.loc 1 567 0
 2364 044c 3B68     		ldr	r3, [r7]
 2365 044e 0533     		adds	r3, r3, #5
 2366 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2367 0452 63F01F03 		orn	r3, r3, #31
 2368 0456 DBB2     		uxtb	r3, r3
 2369 0458 FB74     		strb	r3, [r7, #19]
 2370              	.L138:
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 54


 568:.\Protocolo.c **** 			}
 569:.\Protocolo.c **** 			if(decimal==0){
 2371              		.loc 1 569 0
 2372 045a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2373 045c 002B     		cmp	r3, #0
 2374 045e 18D1     		bne	.L139
 570:.\Protocolo.c **** 				buffer[7]=0xE0;
 2375              		.loc 1 570 0
 2376 0460 E023     		movs	r3, #224
 2377 0462 FB73     		strb	r3, [r7, #15]
 571:.\Protocolo.c **** 				buffer[8]=0xE0;
 2378              		.loc 1 571 0
 2379 0464 E023     		movs	r3, #224
 2380 0466 3B74     		strb	r3, [r7, #16]
 572:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 2381              		.loc 1 572 0
 2382 0468 3B68     		ldr	r3, [r7]
 2383 046a 0133     		adds	r3, r3, #1
 2384 046c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2385 046e 63F01F03 		orn	r3, r3, #31
 2386 0472 DBB2     		uxtb	r3, r3
 2387 0474 7B74     		strb	r3, [r7, #17]
 573:.\Protocolo.c **** 				buffer[10]=(valor[2]|0xE0);
 2388              		.loc 1 573 0
 2389 0476 3B68     		ldr	r3, [r7]
 2390 0478 0233     		adds	r3, r3, #2
 2391 047a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2392 047c 63F01F03 		orn	r3, r3, #31
 2393 0480 DBB2     		uxtb	r3, r3
 2394 0482 BB74     		strb	r3, [r7, #18]
 574:.\Protocolo.c **** 				buffer[11]=(valor[3]|0xE0);		
 2395              		.loc 1 574 0
 2396 0484 3B68     		ldr	r3, [r7]
 2397 0486 0333     		adds	r3, r3, #3
 2398 0488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2399 048a 63F01F03 		orn	r3, r3, #31
 2400 048e DBB2     		uxtb	r3, r3
 2401 0490 FB74     		strb	r3, [r7, #19]
 2402              	.L139:
 575:.\Protocolo.c **** 			}			
 576:.\Protocolo.c **** 			buffer[12]=0xFB;
 2403              		.loc 1 576 0
 2404 0492 FB23     		movs	r3, #251
 2405 0494 3B75     		strb	r3, [r7, #20]
 577:.\Protocolo.c **** 			buffer[13]=0;
 2406              		.loc 1 577 0
 2407 0496 0023     		movs	r3, #0
 2408 0498 7B75     		strb	r3, [r7, #21]
 578:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 2409              		.loc 1 578 0
 2410 049a 0023     		movs	r3, #0
 2411 049c 7B77     		strb	r3, [r7, #29]
 2412 049e 0FE0     		b	.L140
 2413              	.L141:
 579:.\Protocolo.c **** 				buffer[13]+=(buffer[i]&0x0F);	
 2414              		.loc 1 579 0 discriminator 3
 2415 04a0 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 55


 2416 04a2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2417 04a4 07F12001 		add	r1, r7, #32
 2418 04a8 0B44     		add	r3, r3, r1
 2419 04aa 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2420 04ae 03F00F03 		and	r3, r3, #15
 2421 04b2 DBB2     		uxtb	r3, r3
 2422 04b4 1344     		add	r3, r3, r2
 2423 04b6 DBB2     		uxtb	r3, r3
 2424 04b8 7B75     		strb	r3, [r7, #21]
 578:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 2425              		.loc 1 578 0 discriminator 3
 2426 04ba 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2427 04bc 0133     		adds	r3, r3, #1
 2428 04be 7B77     		strb	r3, [r7, #29]
 2429              	.L140:
 578:.\Protocolo.c **** 			for(i=0;i<=12;i++){
 2430              		.loc 1 578 0 is_stmt 0 discriminator 1
 2431 04c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2432 04c2 0C2B     		cmp	r3, #12
 2433 04c4 ECD9     		bls	.L141
 580:.\Protocolo.c **** 			}
 581:.\Protocolo.c **** 			buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;			
 2434              		.loc 1 581 0 is_stmt 1
 2435 04c6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 2436 04c8 5B42     		negs	r3, r3
 2437 04ca DBB2     		uxtb	r3, r3
 2438 04cc DBB2     		uxtb	r3, r3
 2439 04ce 03F00F03 		and	r3, r3, #15
 2440 04d2 DBB2     		uxtb	r3, r3
 2441 04d4 63F01F03 		orn	r3, r3, #31
 2442 04d8 DBB2     		uxtb	r3, r3
 2443 04da DBB2     		uxtb	r3, r3
 2444 04dc 7B75     		strb	r3, [r7, #21]
 582:.\Protocolo.c **** 			buffer[14]=0xF0;
 2445              		.loc 1 582 0
 2446 04de F023     		movs	r3, #240
 2447 04e0 BB75     		strb	r3, [r7, #22]
 583:.\Protocolo.c **** 			size=14;
 2448              		.loc 1 583 0
 2449 04e2 0E23     		movs	r3, #14
 2450 04e4 FB77     		strb	r3, [r7, #31]
 2451              	.L126:
 584:.\Protocolo.c **** 		}	
 585:.\Protocolo.c **** 	}	
 586:.\Protocolo.c **** 	if(version[1]==7){
 2452              		.loc 1 586 0
 2453 04e6 A24B     		ldr	r3, .L160
 2454 04e8 5B78     		ldrb	r3, [r3, #1]
 2455 04ea DBB2     		uxtb	r3, r3
 2456 04ec 072B     		cmp	r3, #7
 2457 04ee 40F06481 		bne	.L142
 587:.\Protocolo.c **** 		buffer[0]=0xFF;
 2458              		.loc 1 587 0
 2459 04f2 FF23     		movs	r3, #255
 2460 04f4 3B72     		strb	r3, [r7, #8]
 588:.\Protocolo.c **** 		buffer[1]=(0xE0|temp);
 2461              		.loc 1 588 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 56


 2462 04f6 BB7F     		ldrb	r3, [r7, #30]
 2463 04f8 63F01F03 		orn	r3, r3, #31
 2464 04fc DBB2     		uxtb	r3, r3
 2465 04fe 7B72     		strb	r3, [r7, #9]
 589:.\Protocolo.c **** 		buffer[2]=(0xF0|preset);
 2466              		.loc 1 589 0
 2467 0500 7B79     		ldrb	r3, [r7, #5]
 2468 0502 63F00F03 		orn	r3, r3, #15
 2469 0506 DBB2     		uxtb	r3, r3
 2470 0508 BB72     		strb	r3, [r7, #10]
 590:.\Protocolo.c **** 		buffer[3]=0xF4;
 2471              		.loc 1 590 0
 2472 050a F423     		movs	r3, #244
 2473 050c FB72     		strb	r3, [r7, #11]
 591:.\Protocolo.c **** 		buffer[4]=0xF8;	
 2474              		.loc 1 591 0
 2475 050e F823     		movs	r3, #248
 2476 0510 3B73     		strb	r3, [r7, #12]
 592:.\Protocolo.c **** 		buffer[5]=(valor[1]|0xE0);
 2477              		.loc 1 592 0
 2478 0512 3B68     		ldr	r3, [r7]
 2479 0514 0133     		adds	r3, r3, #1
 2480 0516 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2481 0518 63F01F03 		orn	r3, r3, #31
 2482 051c DBB2     		uxtb	r3, r3
 2483 051e 7B73     		strb	r3, [r7, #13]
 593:.\Protocolo.c **** 		buffer[6]=(valor[2]|0xE0);
 2484              		.loc 1 593 0
 2485 0520 3B68     		ldr	r3, [r7]
 2486 0522 0233     		adds	r3, r3, #2
 2487 0524 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2488 0526 63F01F03 		orn	r3, r3, #31
 2489 052a DBB2     		uxtb	r3, r3
 2490 052c BB73     		strb	r3, [r7, #14]
 594:.\Protocolo.c **** 		buffer[7]=(valor[3]|0xE0);
 2491              		.loc 1 594 0
 2492 052e 3B68     		ldr	r3, [r7]
 2493 0530 0333     		adds	r3, r3, #3
 2494 0532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2495 0534 63F01F03 		orn	r3, r3, #31
 2496 0538 DBB2     		uxtb	r3, r3
 2497 053a FB73     		strb	r3, [r7, #15]
 595:.\Protocolo.c **** 		buffer[8]=(valor[4]|0xE0);
 2498              		.loc 1 595 0
 2499 053c 3B68     		ldr	r3, [r7]
 2500 053e 0433     		adds	r3, r3, #4
 2501 0540 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2502 0542 63F01F03 		orn	r3, r3, #31
 2503 0546 DBB2     		uxtb	r3, r3
 2504 0548 3B74     		strb	r3, [r7, #16]
 596:.\Protocolo.c **** 		buffer[9]=(valor[5]|0xE0);
 2505              		.loc 1 596 0
 2506 054a 3B68     		ldr	r3, [r7]
 2507 054c 0533     		adds	r3, r3, #5
 2508 054e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2509 0550 63F01F03 		orn	r3, r3, #31
 2510 0554 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 57


 2511 0556 7B74     		strb	r3, [r7, #17]
 597:.\Protocolo.c **** 		buffer[10]=(valor[6]|0xE0);	
 2512              		.loc 1 597 0
 2513 0558 3B68     		ldr	r3, [r7]
 2514 055a 0633     		adds	r3, r3, #6
 2515 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2516 055e 63F01F03 		orn	r3, r3, #31
 2517 0562 DBB2     		uxtb	r3, r3
 2518 0564 BB74     		strb	r3, [r7, #18]
 598:.\Protocolo.c **** 		buffer[11]=(valor[7]|0xE0);
 2519              		.loc 1 598 0
 2520 0566 3B68     		ldr	r3, [r7]
 2521 0568 0733     		adds	r3, r3, #7
 2522 056a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2523 056c 63F01F03 		orn	r3, r3, #31
 2524 0570 DBB2     		uxtb	r3, r3
 2525 0572 FB74     		strb	r3, [r7, #19]
 599:.\Protocolo.c **** 		buffer[12]=0xE0;
 2526              		.loc 1 599 0
 2527 0574 E023     		movs	r3, #224
 2528 0576 3B75     		strb	r3, [r7, #20]
 600:.\Protocolo.c **** 		buffer[13]=0xFB;
 2529              		.loc 1 600 0
 2530 0578 FB23     		movs	r3, #251
 2531 057a 7B75     		strb	r3, [r7, #21]
 601:.\Protocolo.c **** 		buffer[14]=0;
 2532              		.loc 1 601 0
 2533 057c 0023     		movs	r3, #0
 2534 057e BB75     		strb	r3, [r7, #22]
 602:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2535              		.loc 1 602 0
 2536 0580 0023     		movs	r3, #0
 2537 0582 7B77     		strb	r3, [r7, #29]
 2538 0584 0FE0     		b	.L143
 2539              	.L144:
 603:.\Protocolo.c **** 			buffer[14]+=(buffer[i]&0x0F);	
 2540              		.loc 1 603 0 discriminator 3
 2541 0586 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 2542 0588 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2543 058a 07F12001 		add	r1, r7, #32
 2544 058e 0B44     		add	r3, r3, r1
 2545 0590 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2546 0594 03F00F03 		and	r3, r3, #15
 2547 0598 DBB2     		uxtb	r3, r3
 2548 059a 1344     		add	r3, r3, r2
 2549 059c DBB2     		uxtb	r3, r3
 2550 059e BB75     		strb	r3, [r7, #22]
 602:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2551              		.loc 1 602 0 discriminator 3
 2552 05a0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2553 05a2 0133     		adds	r3, r3, #1
 2554 05a4 7B77     		strb	r3, [r7, #29]
 2555              	.L143:
 602:.\Protocolo.c **** 		for(i=0;i<=13;i++){
 2556              		.loc 1 602 0 is_stmt 0 discriminator 1
 2557 05a6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2558 05a8 0D2B     		cmp	r3, #13
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 58


 2559 05aa ECD9     		bls	.L144
 604:.\Protocolo.c **** 		}
 605:.\Protocolo.c **** 		buffer[14]=(((~buffer[14])+1)&0x0F)|0xE0;
 2560              		.loc 1 605 0 is_stmt 1
 2561 05ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2562 05ae 5B42     		negs	r3, r3
 2563 05b0 DBB2     		uxtb	r3, r3
 2564 05b2 DBB2     		uxtb	r3, r3
 2565 05b4 03F00F03 		and	r3, r3, #15
 2566 05b8 DBB2     		uxtb	r3, r3
 2567 05ba 63F01F03 		orn	r3, r3, #31
 2568 05be DBB2     		uxtb	r3, r3
 2569 05c0 DBB2     		uxtb	r3, r3
 2570 05c2 BB75     		strb	r3, [r7, #22]
 606:.\Protocolo.c **** 		buffer[15]=0xF0;
 2571              		.loc 1 606 0
 2572 05c4 F023     		movs	r3, #240
 2573 05c6 FB75     		strb	r3, [r7, #23]
 607:.\Protocolo.c **** 		size=15;
 2574              		.loc 1 607 0
 2575 05c8 0F23     		movs	r3, #15
 2576 05ca FB77     		strb	r3, [r7, #31]
 608:.\Protocolo.c **** 		if(preset==1){
 2577              		.loc 1 608 0
 2578 05cc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2579 05ce 012B     		cmp	r3, #1
 2580 05d0 40F0F380 		bne	.L142
 609:.\Protocolo.c **** 			buffer[4]=0xF6;
 2581              		.loc 1 609 0
 2582 05d4 F623     		movs	r3, #246
 2583 05d6 3B73     		strb	r3, [r7, #12]
 610:.\Protocolo.c **** 			buffer[5]=(0xE0|(grado-1));
 2584              		.loc 1 610 0
 2585 05d8 BB79     		ldrb	r3, [r7, #6]
 2586 05da 013B     		subs	r3, r3, #1
 2587 05dc DBB2     		uxtb	r3, r3
 2588 05de DBB2     		uxtb	r3, r3
 2589 05e0 63F01F03 		orn	r3, r3, #31
 2590 05e4 DBB2     		uxtb	r3, r3
 2591 05e6 DBB2     		uxtb	r3, r3
 2592 05e8 7B73     		strb	r3, [r7, #13]
 611:.\Protocolo.c **** 			buffer[6]=0xF8;
 2593              		.loc 1 611 0
 2594 05ea F823     		movs	r3, #248
 2595 05ec BB73     		strb	r3, [r7, #14]
 612:.\Protocolo.c **** 			if(decimal==4){
 2596              		.loc 1 612 0
 2597 05ee 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2598 05f0 042B     		cmp	r3, #4
 2599 05f2 2DD1     		bne	.L145
 613:.\Protocolo.c **** 				buffer[7]=(valor[1]|0xE0);
 2600              		.loc 1 613 0
 2601 05f4 3B68     		ldr	r3, [r7]
 2602 05f6 0133     		adds	r3, r3, #1
 2603 05f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2604 05fa 63F01F03 		orn	r3, r3, #31
 2605 05fe DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 59


 2606 0600 FB73     		strb	r3, [r7, #15]
 614:.\Protocolo.c **** 				buffer[8]=(valor[2]|0xE0);
 2607              		.loc 1 614 0
 2608 0602 3B68     		ldr	r3, [r7]
 2609 0604 0233     		adds	r3, r3, #2
 2610 0606 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2611 0608 63F01F03 		orn	r3, r3, #31
 2612 060c DBB2     		uxtb	r3, r3
 2613 060e 3B74     		strb	r3, [r7, #16]
 615:.\Protocolo.c **** 				buffer[9]=(valor[3]|0xE0);
 2614              		.loc 1 615 0
 2615 0610 3B68     		ldr	r3, [r7]
 2616 0612 0333     		adds	r3, r3, #3
 2617 0614 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2618 0616 63F01F03 		orn	r3, r3, #31
 2619 061a DBB2     		uxtb	r3, r3
 2620 061c 7B74     		strb	r3, [r7, #17]
 616:.\Protocolo.c **** 				buffer[10]=(valor[5]|0xE0);
 2621              		.loc 1 616 0
 2622 061e 3B68     		ldr	r3, [r7]
 2623 0620 0533     		adds	r3, r3, #5
 2624 0622 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2625 0624 63F01F03 		orn	r3, r3, #31
 2626 0628 DBB2     		uxtb	r3, r3
 2627 062a BB74     		strb	r3, [r7, #18]
 617:.\Protocolo.c **** 				buffer[11]=(valor[6]|0xE0);
 2628              		.loc 1 617 0
 2629 062c 3B68     		ldr	r3, [r7]
 2630 062e 0633     		adds	r3, r3, #6
 2631 0630 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2632 0632 63F01F03 		orn	r3, r3, #31
 2633 0636 DBB2     		uxtb	r3, r3
 2634 0638 FB74     		strb	r3, [r7, #19]
 618:.\Protocolo.c **** 				buffer[12]=(valor[7]|0xE0);	
 2635              		.loc 1 618 0
 2636 063a 3B68     		ldr	r3, [r7]
 2637 063c 0733     		adds	r3, r3, #7
 2638 063e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2639 0640 63F01F03 		orn	r3, r3, #31
 2640 0644 DBB2     		uxtb	r3, r3
 2641 0646 3B75     		strb	r3, [r7, #20]
 619:.\Protocolo.c **** 				buffer[13]=0xE0;	
 2642              		.loc 1 619 0
 2643 0648 E023     		movs	r3, #224
 2644 064a 7B75     		strb	r3, [r7, #21]
 620:.\Protocolo.c **** 				buffer[14]=0xE0;
 2645              		.loc 1 620 0
 2646 064c E023     		movs	r3, #224
 2647 064e BB75     		strb	r3, [r7, #22]
 2648              	.L145:
 621:.\Protocolo.c **** 			}
 622:.\Protocolo.c **** 			if(decimal==3){
 2649              		.loc 1 622 0
 2650 0650 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2651 0652 032B     		cmp	r3, #3
 2652 0654 2DD1     		bne	.L146
 623:.\Protocolo.c **** 				buffer[7]=0xE0;
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 60


 2653              		.loc 1 623 0
 2654 0656 E023     		movs	r3, #224
 2655 0658 FB73     		strb	r3, [r7, #15]
 624:.\Protocolo.c **** 				buffer[8]=(valor[1]|0xE0);
 2656              		.loc 1 624 0
 2657 065a 3B68     		ldr	r3, [r7]
 2658 065c 0133     		adds	r3, r3, #1
 2659 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2660 0660 63F01F03 		orn	r3, r3, #31
 2661 0664 DBB2     		uxtb	r3, r3
 2662 0666 3B74     		strb	r3, [r7, #16]
 625:.\Protocolo.c **** 				buffer[9]=(valor[2]|0xE0);
 2663              		.loc 1 625 0
 2664 0668 3B68     		ldr	r3, [r7]
 2665 066a 0233     		adds	r3, r3, #2
 2666 066c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2667 066e 63F01F03 		orn	r3, r3, #31
 2668 0672 DBB2     		uxtb	r3, r3
 2669 0674 7B74     		strb	r3, [r7, #17]
 626:.\Protocolo.c **** 				buffer[10]=(valor[4]|0xE0);
 2670              		.loc 1 626 0
 2671 0676 3B68     		ldr	r3, [r7]
 2672 0678 0433     		adds	r3, r3, #4
 2673 067a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2674 067c 63F01F03 		orn	r3, r3, #31
 2675 0680 DBB2     		uxtb	r3, r3
 2676 0682 BB74     		strb	r3, [r7, #18]
 627:.\Protocolo.c **** 				buffer[11]=(valor[5]|0xE0);
 2677              		.loc 1 627 0
 2678 0684 3B68     		ldr	r3, [r7]
 2679 0686 0533     		adds	r3, r3, #5
 2680 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2681 068a 63F01F03 		orn	r3, r3, #31
 2682 068e DBB2     		uxtb	r3, r3
 2683 0690 FB74     		strb	r3, [r7, #19]
 628:.\Protocolo.c **** 				buffer[12]=(valor[6]|0xE0);
 2684              		.loc 1 628 0
 2685 0692 3B68     		ldr	r3, [r7]
 2686 0694 0633     		adds	r3, r3, #6
 2687 0696 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2688 0698 63F01F03 		orn	r3, r3, #31
 2689 069c DBB2     		uxtb	r3, r3
 2690 069e 3B75     		strb	r3, [r7, #20]
 629:.\Protocolo.c **** 				buffer[13]=(valor[7]|0xE0);	
 2691              		.loc 1 629 0
 2692 06a0 3B68     		ldr	r3, [r7]
 2693 06a2 0733     		adds	r3, r3, #7
 2694 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2695 06a6 63F01F03 		orn	r3, r3, #31
 2696 06aa DBB2     		uxtb	r3, r3
 2697 06ac 7B75     		strb	r3, [r7, #21]
 630:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2698              		.loc 1 630 0
 2699 06ae E023     		movs	r3, #224
 2700 06b0 BB75     		strb	r3, [r7, #22]
 2701              	.L146:
 631:.\Protocolo.c **** 			}
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 61


 632:.\Protocolo.c **** 			if(decimal==2){
 2702              		.loc 1 632 0
 2703 06b2 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2704 06b4 022B     		cmp	r3, #2
 2705 06b6 2DD1     		bne	.L147
 633:.\Protocolo.c **** 				buffer[7]=0xE0;
 2706              		.loc 1 633 0
 2707 06b8 E023     		movs	r3, #224
 2708 06ba FB73     		strb	r3, [r7, #15]
 634:.\Protocolo.c **** 				buffer[8]=0xE0;
 2709              		.loc 1 634 0
 2710 06bc E023     		movs	r3, #224
 2711 06be 3B74     		strb	r3, [r7, #16]
 635:.\Protocolo.c **** 				buffer[9]=(valor[1]|0xE0);
 2712              		.loc 1 635 0
 2713 06c0 3B68     		ldr	r3, [r7]
 2714 06c2 0133     		adds	r3, r3, #1
 2715 06c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2716 06c6 63F01F03 		orn	r3, r3, #31
 2717 06ca DBB2     		uxtb	r3, r3
 2718 06cc 7B74     		strb	r3, [r7, #17]
 636:.\Protocolo.c **** 				buffer[10]=(valor[3]|0xE0);
 2719              		.loc 1 636 0
 2720 06ce 3B68     		ldr	r3, [r7]
 2721 06d0 0333     		adds	r3, r3, #3
 2722 06d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2723 06d4 63F01F03 		orn	r3, r3, #31
 2724 06d8 DBB2     		uxtb	r3, r3
 2725 06da BB74     		strb	r3, [r7, #18]
 637:.\Protocolo.c **** 				buffer[11]=(valor[4]|0xE0);
 2726              		.loc 1 637 0
 2727 06dc 3B68     		ldr	r3, [r7]
 2728 06de 0433     		adds	r3, r3, #4
 2729 06e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2730 06e2 63F01F03 		orn	r3, r3, #31
 2731 06e6 DBB2     		uxtb	r3, r3
 2732 06e8 FB74     		strb	r3, [r7, #19]
 638:.\Protocolo.c **** 				buffer[12]=(valor[5]|0xE0);
 2733              		.loc 1 638 0
 2734 06ea 3B68     		ldr	r3, [r7]
 2735 06ec 0533     		adds	r3, r3, #5
 2736 06ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2737 06f0 63F01F03 		orn	r3, r3, #31
 2738 06f4 DBB2     		uxtb	r3, r3
 2739 06f6 3B75     		strb	r3, [r7, #20]
 639:.\Protocolo.c **** 				buffer[13]=(valor[6]|0xE0);	
 2740              		.loc 1 639 0
 2741 06f8 3B68     		ldr	r3, [r7]
 2742 06fa 0633     		adds	r3, r3, #6
 2743 06fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2744 06fe 63F01F03 		orn	r3, r3, #31
 2745 0702 DBB2     		uxtb	r3, r3
 2746 0704 7B75     		strb	r3, [r7, #21]
 640:.\Protocolo.c **** 				buffer[14]=(valor[7]|0xE0);	
 2747              		.loc 1 640 0
 2748 0706 3B68     		ldr	r3, [r7]
 2749 0708 0733     		adds	r3, r3, #7
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 62


 2750 070a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2751 070c 63F01F03 		orn	r3, r3, #31
 2752 0710 DBB2     		uxtb	r3, r3
 2753 0712 BB75     		strb	r3, [r7, #22]
 2754              	.L147:
 641:.\Protocolo.c **** 			}
 642:.\Protocolo.c **** 			if(decimal==0){
 2755              		.loc 1 642 0
 2756 0714 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 2757 0716 002B     		cmp	r3, #0
 2758 0718 23D1     		bne	.L148
 643:.\Protocolo.c **** 				buffer[7]=0xE0;
 2759              		.loc 1 643 0
 2760 071a E023     		movs	r3, #224
 2761 071c FB73     		strb	r3, [r7, #15]
 644:.\Protocolo.c **** 				buffer[8]=0xE0;
 2762              		.loc 1 644 0
 2763 071e E023     		movs	r3, #224
 2764 0720 3B74     		strb	r3, [r7, #16]
 645:.\Protocolo.c **** 				buffer[9]=0xE0;
 2765              		.loc 1 645 0
 2766 0722 E023     		movs	r3, #224
 2767 0724 7B74     		strb	r3, [r7, #17]
 646:.\Protocolo.c **** 				buffer[10]=(valor[1]|0xE0);
 2768              		.loc 1 646 0
 2769 0726 3B68     		ldr	r3, [r7]
 2770 0728 0133     		adds	r3, r3, #1
 2771 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2772 072c 63F01F03 		orn	r3, r3, #31
 2773 0730 DBB2     		uxtb	r3, r3
 2774 0732 BB74     		strb	r3, [r7, #18]
 647:.\Protocolo.c **** 				buffer[11]=(valor[2]|0xE0);
 2775              		.loc 1 647 0
 2776 0734 3B68     		ldr	r3, [r7]
 2777 0736 0233     		adds	r3, r3, #2
 2778 0738 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2779 073a 63F01F03 		orn	r3, r3, #31
 2780 073e DBB2     		uxtb	r3, r3
 2781 0740 FB74     		strb	r3, [r7, #19]
 648:.\Protocolo.c **** 				buffer[12]=(valor[3]|0xE0);
 2782              		.loc 1 648 0
 2783 0742 3B68     		ldr	r3, [r7]
 2784 0744 0333     		adds	r3, r3, #3
 2785 0746 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2786 0748 63F01F03 		orn	r3, r3, #31
 2787 074c DBB2     		uxtb	r3, r3
 2788 074e 3B75     		strb	r3, [r7, #20]
 649:.\Protocolo.c **** 				buffer[13]=(valor[4]|0xE0);	
 2789              		.loc 1 649 0
 2790 0750 3B68     		ldr	r3, [r7]
 2791 0752 0433     		adds	r3, r3, #4
 2792 0754 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2793 0756 63F01F03 		orn	r3, r3, #31
 2794 075a DBB2     		uxtb	r3, r3
 2795 075c 7B75     		strb	r3, [r7, #21]
 650:.\Protocolo.c **** 				buffer[14]=0xE0;	
 2796              		.loc 1 650 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 63


 2797 075e E023     		movs	r3, #224
 2798 0760 BB75     		strb	r3, [r7, #22]
 2799              	.L148:
 651:.\Protocolo.c **** 			}			
 652:.\Protocolo.c **** 			buffer[15]=0xFB;
 2800              		.loc 1 652 0
 2801 0762 FB23     		movs	r3, #251
 2802 0764 FB75     		strb	r3, [r7, #23]
 653:.\Protocolo.c **** 			buffer[16]=0;
 2803              		.loc 1 653 0
 2804 0766 0023     		movs	r3, #0
 2805 0768 3B76     		strb	r3, [r7, #24]
 654:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2806              		.loc 1 654 0
 2807 076a 0023     		movs	r3, #0
 2808 076c 7B77     		strb	r3, [r7, #29]
 2809 076e 11E0     		b	.L149
 2810              	.L161:
 2811              		.align	2
 2812              	.L160:
 2813 0770 00000000 		.word	version
 2814              	.L150:
 655:.\Protocolo.c **** 				buffer[16]+=(buffer[i]&0x0F);	
 2815              		.loc 1 655 0 discriminator 3
 2816 0774 3A7E     		ldrb	r2, [r7, #24]	@ zero_extendqisi2
 2817 0776 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2818 0778 07F12001 		add	r1, r7, #32
 2819 077c 0B44     		add	r3, r3, r1
 2820 077e 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2821 0782 03F00F03 		and	r3, r3, #15
 2822 0786 DBB2     		uxtb	r3, r3
 2823 0788 1344     		add	r3, r3, r2
 2824 078a DBB2     		uxtb	r3, r3
 2825 078c 3B76     		strb	r3, [r7, #24]
 654:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2826              		.loc 1 654 0 discriminator 3
 2827 078e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2828 0790 0133     		adds	r3, r3, #1
 2829 0792 7B77     		strb	r3, [r7, #29]
 2830              	.L149:
 654:.\Protocolo.c **** 			for(i=0;i<=15;i++){
 2831              		.loc 1 654 0 is_stmt 0 discriminator 1
 2832 0794 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2833 0796 0F2B     		cmp	r3, #15
 2834 0798 ECD9     		bls	.L150
 656:.\Protocolo.c **** 			}
 657:.\Protocolo.c **** 			buffer[16]=(((~buffer[16])+1)&0x0F)|0xE0;			
 2835              		.loc 1 657 0 is_stmt 1
 2836 079a 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 2837 079c 5B42     		negs	r3, r3
 2838 079e DBB2     		uxtb	r3, r3
 2839 07a0 DBB2     		uxtb	r3, r3
 2840 07a2 03F00F03 		and	r3, r3, #15
 2841 07a6 DBB2     		uxtb	r3, r3
 2842 07a8 63F01F03 		orn	r3, r3, #31
 2843 07ac DBB2     		uxtb	r3, r3
 2844 07ae DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 64


 2845 07b0 3B76     		strb	r3, [r7, #24]
 658:.\Protocolo.c **** 			buffer[17]=0xF0;
 2846              		.loc 1 658 0
 2847 07b2 F023     		movs	r3, #240
 2848 07b4 7B76     		strb	r3, [r7, #25]
 659:.\Protocolo.c **** 			size=17;
 2849              		.loc 1 659 0
 2850 07b6 1123     		movs	r3, #17
 2851 07b8 FB77     		strb	r3, [r7, #31]
 2852              	.L142:
 660:.\Protocolo.c **** 		}		
 661:.\Protocolo.c **** 	}
 662:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 2853              		.loc 1 662 0
 2854 07ba FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 663:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 2855              		.loc 1 663 0
 2856 07be FB79     		ldrb	r3, [r7, #7]
 2857 07c0 43F02003 		orr	r3, r3, #32
 2858 07c4 DBB2     		uxtb	r3, r3
 2859 07c6 1846     		mov	r0, r3
 2860 07c8 FFF7FEFF 		bl	Surtidor_PutChar
 664:.\Protocolo.c **** 	isr_1_StartEx(Rx_Surtidor);
 2861              		.loc 1 664 0
 2862 07cc 2A48     		ldr	r0, .L162
 2863 07ce FFF7FEFF 		bl	isr_1_StartEx
 665:.\Protocolo.c ****     Timer_RxSurtidor_Start();	
 2864              		.loc 1 665 0
 2865 07d2 FFF7FEFF 		bl	Timer_RxSurtidor_Start
 666:.\Protocolo.c ****     rx_timeout=0;
 2866              		.loc 1 666 0
 2867 07d6 294B     		ldr	r3, .L162+4
 2868 07d8 0022     		movs	r2, #0
 2869 07da 1A70     		strb	r2, [r3]
 667:.\Protocolo.c ****     CyDelay(10);
 2870              		.loc 1 667 0
 2871 07dc 0A20     		movs	r0, #10
 2872 07de FFF7FEFF 		bl	CyDelay
 668:.\Protocolo.c **** 	while(Surtidor_GetRxBufferSize()==0){
 2873              		.loc 1 668 0
 2874 07e2 0BE0     		b	.L151
 2875              	.L152:
 669:.\Protocolo.c **** 		if(rx_timeout==1){
 2876              		.loc 1 669 0
 2877 07e4 254B     		ldr	r3, .L162+4
 2878 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2879 07e8 012B     		cmp	r3, #1
 2880 07ea 07D1     		bne	.L151
 670:.\Protocolo.c **** 			isr_1_Stop();
 2881              		.loc 1 670 0
 2882 07ec FFF7FEFF 		bl	isr_1_Stop
 671:.\Protocolo.c **** 			Timer_RxSurtidor_Stop();
 2883              		.loc 1 671 0
 2884 07f0 FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 672:.\Protocolo.c ****     		Surtidor_ClearRxBuffer();			
 2885              		.loc 1 672 0
 2886 07f4 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 65


 673:.\Protocolo.c **** 			return 0;
 2887              		.loc 1 673 0
 2888 07f8 0023     		movs	r3, #0
 2889 07fa 39E0     		b	.L157
 2890              	.L151:
 668:.\Protocolo.c **** 		if(rx_timeout==1){
 2891              		.loc 1 668 0
 2892 07fc FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 2893 0800 0346     		mov	r3, r0
 2894 0802 002B     		cmp	r3, #0
 2895 0804 EED0     		beq	.L152
 674:.\Protocolo.c **** 		}
 675:.\Protocolo.c **** 	}
 676:.\Protocolo.c **** 	isr_1_Stop();
 2896              		.loc 1 676 0
 2897 0806 FFF7FEFF 		bl	isr_1_Stop
 677:.\Protocolo.c **** 	Timer_RxSurtidor_Stop();	
 2898              		.loc 1 677 0
 2899 080a FFF7FEFF 		bl	Timer_RxSurtidor_Stop
 678:.\Protocolo.c **** 	if(Surtidor_ReadRxData()==(0xD0|dir)){
 2900              		.loc 1 678 0
 2901 080e FFF7FEFF 		bl	Surtidor_ReadRxData
 2902 0812 0346     		mov	r3, r0
 2903 0814 1A46     		mov	r2, r3
 2904 0816 FB79     		ldrb	r3, [r7, #7]
 2905 0818 63F02F03 		orn	r3, r3, #47
 2906 081c DBB2     		uxtb	r3, r3
 2907 081e 9A42     		cmp	r2, r3
 2908 0820 25D1     		bne	.L153
 679:.\Protocolo.c ****         Surtidor_ClearRxBuffer();
 2909              		.loc 1 679 0
 2910 0822 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 680:.\Protocolo.c **** 		CyDelay(10);
 2911              		.loc 1 680 0
 2912 0826 0A20     		movs	r0, #10
 2913 0828 FFF7FEFF 		bl	CyDelay
 681:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2914              		.loc 1 681 0
 2915 082c 0023     		movs	r3, #0
 2916 082e 7B77     		strb	r3, [r7, #29]
 2917 0830 0BE0     		b	.L154
 2918              	.L155:
 682:.\Protocolo.c ****            	Surtidor_PutChar(buffer[i]);
 2919              		.loc 1 682 0 discriminator 3
 2920 0832 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2921 0834 07F12002 		add	r2, r7, #32
 2922 0838 1344     		add	r3, r3, r2
 2923 083a 13F8183C 		ldrb	r3, [r3, #-24]	@ zero_extendqisi2
 2924 083e 1846     		mov	r0, r3
 2925 0840 FFF7FEFF 		bl	Surtidor_PutChar
 681:.\Protocolo.c ****         for(i=0;i<=size;i++){
 2926              		.loc 1 681 0 discriminator 3
 2927 0844 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2928 0846 0133     		adds	r3, r3, #1
 2929 0848 7B77     		strb	r3, [r7, #29]
 2930              	.L154:
 681:.\Protocolo.c ****         for(i=0;i<=size;i++){
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 66


 2931              		.loc 1 681 0 is_stmt 0 discriminator 1
 2932 084a 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2933 084c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2934 084e 9A42     		cmp	r2, r3
 2935 0850 EFD9     		bls	.L155
 683:.\Protocolo.c ****         }
 684:.\Protocolo.c **** 		CyDelay(50);		
 2936              		.loc 1 684 0 is_stmt 1
 2937 0852 3220     		movs	r0, #50
 2938 0854 FFF7FEFF 		bl	CyDelay
 685:.\Protocolo.c **** 		if(get_estado(dir)==0){
 2939              		.loc 1 685 0
 2940 0858 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2941 085a 1846     		mov	r0, r3
 2942 085c FFF7FEFF 		bl	get_estado
 2943 0860 0346     		mov	r3, r0
 2944 0862 002B     		cmp	r3, #0
 2945 0864 01D1     		bne	.L156
 686:.\Protocolo.c **** 			return 0;
 2946              		.loc 1 686 0
 2947 0866 0023     		movs	r3, #0
 2948 0868 02E0     		b	.L157
 2949              	.L156:
 687:.\Protocolo.c **** 		}
 688:.\Protocolo.c **** 		else{
 689:.\Protocolo.c **** 			return 1;
 2950              		.loc 1 689 0
 2951 086a 0123     		movs	r3, #1
 2952 086c 00E0     		b	.L157
 2953              	.L153:
 690:.\Protocolo.c **** 		}
 691:.\Protocolo.c **** 	}
 692:.\Protocolo.c **** 	else{
 693:.\Protocolo.c **** 		return 0;
 2954              		.loc 1 693 0
 2955 086e 0023     		movs	r3, #0
 2956              	.L157:
 694:.\Protocolo.c **** 	}
 695:.\Protocolo.c **** }
 2957              		.loc 1 695 0 discriminator 1
 2958 0870 1846     		mov	r0, r3
 2959 0872 2037     		adds	r7, r7, #32
 2960              		.cfi_def_cfa_offset 8
 2961 0874 BD46     		mov	sp, r7
 2962              		.cfi_def_cfa_register 13
 2963              		@ sp needed
 2964 0876 80BD     		pop	{r7, pc}
 2965              	.L163:
 2966              		.align	2
 2967              	.L162:
 2968 0878 00000000 		.word	Rx_Surtidor
 2969 087c 00000000 		.word	rx_timeout
 2970              		.cfi_endproc
 2971              	.LFE70:
 2972              		.size	programar, .-programar
 2973              		.section	.text.cambiar_precio,"ax",%progbits
 2974              		.align	2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 67


 2975              		.global	cambiar_precio
 2976              		.thumb
 2977              		.thumb_func
 2978              		.type	cambiar_precio, %function
 2979              	cambiar_precio:
 2980              	.LFB71:
 696:.\Protocolo.c **** 
 697:.\Protocolo.c **** /*
 698:.\Protocolo.c **** ***************************************************************************************************
 699:.\Protocolo.c **** *                           cambiar_precio(uint8 dir, uint8 *precio, uint8 num_man)
 700:.\Protocolo.c **** *
 701:.\Protocolo.c **** * Description : 
 702:.\Protocolo.c **** *               
 703:.\Protocolo.c **** *
 704:.\Protocolo.c **** * Argument(s) : none
 705:.\Protocolo.c **** *
 706:.\Protocolo.c **** * Return(s)   : none
 707:.\Protocolo.c **** *
 708:.\Protocolo.c **** * Caller(s)   : 
 709:.\Protocolo.c **** *
 710:.\Protocolo.c **** * Note(s)     : none.
 711:.\Protocolo.c **** ***************************************************************************************************
 712:.\Protocolo.c **** */
 713:.\Protocolo.c **** uint8 cambiar_precio(uint8 dir, uint8 *precio, uint8 num_man){
 2981              		.loc 1 713 0
 2982              		.cfi_startproc
 2983              		@ args = 0, pretend = 0, frame = 32
 2984              		@ frame_needed = 1, uses_anonymous_args = 0
 2985 0000 80B5     		push	{r7, lr}
 2986              		.cfi_def_cfa_offset 8
 2987              		.cfi_offset 7, -8
 2988              		.cfi_offset 14, -4
 2989 0002 88B0     		sub	sp, sp, #32
 2990              		.cfi_def_cfa_offset 40
 2991 0004 00AF     		add	r7, sp, #0
 2992              		.cfi_def_cfa_register 7
 2993 0006 0346     		mov	r3, r0
 2994 0008 3960     		str	r1, [r7]
 2995 000a FB71     		strb	r3, [r7, #7]
 2996 000c 1346     		mov	r3, r2
 2997 000e BB71     		strb	r3, [r7, #6]
 714:.\Protocolo.c **** 	uint8 buffer[15]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},size,x;
 2998              		.loc 1 714 0
 2999 0010 0023     		movs	r3, #0
 3000 0012 3B73     		strb	r3, [r7, #12]
 3001 0014 0023     		movs	r3, #0
 3002 0016 7B73     		strb	r3, [r7, #13]
 3003 0018 0023     		movs	r3, #0
 3004 001a BB73     		strb	r3, [r7, #14]
 3005 001c 0023     		movs	r3, #0
 3006 001e FB73     		strb	r3, [r7, #15]
 3007 0020 0023     		movs	r3, #0
 3008 0022 3B74     		strb	r3, [r7, #16]
 3009 0024 0023     		movs	r3, #0
 3010 0026 7B74     		strb	r3, [r7, #17]
 3011 0028 0023     		movs	r3, #0
 3012 002a BB74     		strb	r3, [r7, #18]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 68


 3013 002c 0023     		movs	r3, #0
 3014 002e FB74     		strb	r3, [r7, #19]
 3015 0030 0023     		movs	r3, #0
 3016 0032 3B75     		strb	r3, [r7, #20]
 3017 0034 0023     		movs	r3, #0
 3018 0036 7B75     		strb	r3, [r7, #21]
 3019 0038 0023     		movs	r3, #0
 3020 003a BB75     		strb	r3, [r7, #22]
 3021 003c 0023     		movs	r3, #0
 3022 003e FB75     		strb	r3, [r7, #23]
 3023 0040 0023     		movs	r3, #0
 3024 0042 3B76     		strb	r3, [r7, #24]
 3025 0044 0023     		movs	r3, #0
 3026 0046 7B76     		strb	r3, [r7, #25]
 3027 0048 0023     		movs	r3, #0
 3028 004a BB76     		strb	r3, [r7, #26]
 715:.\Protocolo.c **** 	if(version[1]!=7){
 3029              		.loc 1 715 0
 3030 004c 804B     		ldr	r3, .L182
 3031 004e 5B78     		ldrb	r3, [r3, #1]
 3032 0050 DBB2     		uxtb	r3, r3
 3033 0052 072B     		cmp	r3, #7
 3034 0054 56D0     		beq	.L165
 716:.\Protocolo.c **** 		buffer[0]=0xFF;
 3035              		.loc 1 716 0
 3036 0056 FF23     		movs	r3, #255
 3037 0058 3B73     		strb	r3, [r7, #12]
 717:.\Protocolo.c **** 		buffer[1]=0xE5;
 3038              		.loc 1 717 0
 3039 005a E523     		movs	r3, #229
 3040 005c 7B73     		strb	r3, [r7, #13]
 718:.\Protocolo.c **** 		buffer[2]=0xF4;
 3041              		.loc 1 718 0
 3042 005e F423     		movs	r3, #244
 3043 0060 BB73     		strb	r3, [r7, #14]
 719:.\Protocolo.c **** 		buffer[3]=0xF6;
 3044              		.loc 1 719 0
 3045 0062 F623     		movs	r3, #246
 3046 0064 FB73     		strb	r3, [r7, #15]
 720:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 3047              		.loc 1 720 0
 3048 0066 BB79     		ldrb	r3, [r7, #6]
 3049 0068 013B     		subs	r3, r3, #1
 3050 006a DBB2     		uxtb	r3, r3
 3051 006c DBB2     		uxtb	r3, r3
 3052 006e 63F01F03 		orn	r3, r3, #31
 3053 0072 DBB2     		uxtb	r3, r3
 3054 0074 DBB2     		uxtb	r3, r3
 3055 0076 3B74     		strb	r3, [r7, #16]
 721:.\Protocolo.c **** 		buffer[5]=0xF7;	
 3056              		.loc 1 721 0
 3057 0078 F723     		movs	r3, #247
 3058 007a 7B74     		strb	r3, [r7, #17]
 722:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 3059              		.loc 1 722 0
 3060 007c 0623     		movs	r3, #6
 3061 007e BB77     		strb	r3, [r7, #30]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 69


 3062 0080 15E0     		b	.L166
 3063              	.L167:
 723:.\Protocolo.c **** 			buffer[x]=(0xE0|(precio[x-6]&0x0F));
 3064              		.loc 1 723 0 discriminator 3
 3065 0082 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3066 0084 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 3067 0086 063A     		subs	r2, r2, #6
 3068 0088 3968     		ldr	r1, [r7]
 3069 008a 0A44     		add	r2, r2, r1
 3070 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3071 008e D2B2     		uxtb	r2, r2
 3072 0090 02F00F02 		and	r2, r2, #15
 3073 0094 D2B2     		uxtb	r2, r2
 3074 0096 62F01F02 		orn	r2, r2, #31
 3075 009a D2B2     		uxtb	r2, r2
 3076 009c D2B2     		uxtb	r2, r2
 3077 009e 07F12001 		add	r1, r7, #32
 3078 00a2 0B44     		add	r3, r3, r1
 3079 00a4 03F8142C 		strb	r2, [r3, #-20]
 722:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 3080              		.loc 1 722 0 discriminator 3
 3081 00a8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3082 00aa 0133     		adds	r3, r3, #1
 3083 00ac BB77     		strb	r3, [r7, #30]
 3084              	.L166:
 722:.\Protocolo.c **** 		for(x=6;x<=9;x++){
 3085              		.loc 1 722 0 is_stmt 0 discriminator 1
 3086 00ae BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3087 00b0 092B     		cmp	r3, #9
 3088 00b2 E6D9     		bls	.L167
 724:.\Protocolo.c **** 		}
 725:.\Protocolo.c **** 		buffer[10]=0xFB;
 3089              		.loc 1 725 0 is_stmt 1
 3090 00b4 FB23     		movs	r3, #251
 3091 00b6 BB75     		strb	r3, [r7, #22]
 726:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 3092              		.loc 1 726 0
 3093 00b8 0023     		movs	r3, #0
 3094 00ba BB77     		strb	r3, [r7, #30]
 3095 00bc 0FE0     		b	.L168
 3096              	.L169:
 727:.\Protocolo.c **** 			buffer[11]+=(buffer[x]&0x0F);	
 3097              		.loc 1 727 0 discriminator 3
 3098 00be FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 3099 00c0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3100 00c2 07F12001 		add	r1, r7, #32
 3101 00c6 0B44     		add	r3, r3, r1
 3102 00c8 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 3103 00cc 03F00F03 		and	r3, r3, #15
 3104 00d0 DBB2     		uxtb	r3, r3
 3105 00d2 1344     		add	r3, r3, r2
 3106 00d4 DBB2     		uxtb	r3, r3
 3107 00d6 FB75     		strb	r3, [r7, #23]
 726:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 3108              		.loc 1 726 0 discriminator 3
 3109 00d8 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3110 00da 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 70


 3111 00dc BB77     		strb	r3, [r7, #30]
 3112              	.L168:
 726:.\Protocolo.c **** 		for(x=0;x<=10;x++){
 3113              		.loc 1 726 0 is_stmt 0 discriminator 1
 3114 00de BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3115 00e0 0A2B     		cmp	r3, #10
 3116 00e2 ECD9     		bls	.L169
 728:.\Protocolo.c **** 		}
 729:.\Protocolo.c **** 		buffer[11]=(((~buffer[11])+1)&0x0F)|0xE0;
 3117              		.loc 1 729 0 is_stmt 1
 3118 00e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3119 00e6 5B42     		negs	r3, r3
 3120 00e8 DBB2     		uxtb	r3, r3
 3121 00ea DBB2     		uxtb	r3, r3
 3122 00ec 03F00F03 		and	r3, r3, #15
 3123 00f0 DBB2     		uxtb	r3, r3
 3124 00f2 63F01F03 		orn	r3, r3, #31
 3125 00f6 DBB2     		uxtb	r3, r3
 3126 00f8 DBB2     		uxtb	r3, r3
 3127 00fa FB75     		strb	r3, [r7, #23]
 730:.\Protocolo.c **** 		buffer[12]=0xF0;
 3128              		.loc 1 730 0
 3129 00fc F023     		movs	r3, #240
 3130 00fe 3B76     		strb	r3, [r7, #24]
 731:.\Protocolo.c **** 		size=12;
 3131              		.loc 1 731 0
 3132 0100 0C23     		movs	r3, #12
 3133 0102 FB77     		strb	r3, [r7, #31]
 3134              	.L165:
 732:.\Protocolo.c **** 	}
 733:.\Protocolo.c **** 	if(version[1]==7){
 3135              		.loc 1 733 0
 3136 0104 524B     		ldr	r3, .L182
 3137 0106 5B78     		ldrb	r3, [r3, #1]
 3138 0108 DBB2     		uxtb	r3, r3
 3139 010a 072B     		cmp	r3, #7
 3140 010c 58D1     		bne	.L170
 734:.\Protocolo.c **** 		buffer[0]=0xFF;
 3141              		.loc 1 734 0
 3142 010e FF23     		movs	r3, #255
 3143 0110 3B73     		strb	r3, [r7, #12]
 735:.\Protocolo.c **** 		buffer[1]=0xE3;
 3144              		.loc 1 735 0
 3145 0112 E323     		movs	r3, #227
 3146 0114 7B73     		strb	r3, [r7, #13]
 736:.\Protocolo.c **** 		buffer[2]=0xF4;
 3147              		.loc 1 736 0
 3148 0116 F423     		movs	r3, #244
 3149 0118 BB73     		strb	r3, [r7, #14]
 737:.\Protocolo.c **** 		buffer[3]=0xF6;
 3150              		.loc 1 737 0
 3151 011a F623     		movs	r3, #246
 3152 011c FB73     		strb	r3, [r7, #15]
 738:.\Protocolo.c **** 		buffer[4]=(0xE0|(num_man-1));
 3153              		.loc 1 738 0
 3154 011e BB79     		ldrb	r3, [r7, #6]
 3155 0120 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 71


 3156 0122 DBB2     		uxtb	r3, r3
 3157 0124 DBB2     		uxtb	r3, r3
 3158 0126 63F01F03 		orn	r3, r3, #31
 3159 012a DBB2     		uxtb	r3, r3
 3160 012c DBB2     		uxtb	r3, r3
 3161 012e 3B74     		strb	r3, [r7, #16]
 739:.\Protocolo.c **** 		buffer[5]=0xF7;		
 3162              		.loc 1 739 0
 3163 0130 F723     		movs	r3, #247
 3164 0132 7B74     		strb	r3, [r7, #17]
 740:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 3165              		.loc 1 740 0
 3166 0134 0623     		movs	r3, #6
 3167 0136 BB77     		strb	r3, [r7, #30]
 3168 0138 15E0     		b	.L171
 3169              	.L172:
 741:.\Protocolo.c **** 			buffer[x]=(0xE0|(precio[x-6]&0x0F));
 3170              		.loc 1 741 0 discriminator 3
 3171 013a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3172 013c BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 3173 013e 063A     		subs	r2, r2, #6
 3174 0140 3968     		ldr	r1, [r7]
 3175 0142 0A44     		add	r2, r2, r1
 3176 0144 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3177 0146 D2B2     		uxtb	r2, r2
 3178 0148 02F00F02 		and	r2, r2, #15
 3179 014c D2B2     		uxtb	r2, r2
 3180 014e 62F01F02 		orn	r2, r2, #31
 3181 0152 D2B2     		uxtb	r2, r2
 3182 0154 D2B2     		uxtb	r2, r2
 3183 0156 07F12001 		add	r1, r7, #32
 3184 015a 0B44     		add	r3, r3, r1
 3185 015c 03F8142C 		strb	r2, [r3, #-20]
 740:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 3186              		.loc 1 740 0 discriminator 3
 3187 0160 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3188 0162 0133     		adds	r3, r3, #1
 3189 0164 BB77     		strb	r3, [r7, #30]
 3190              	.L171:
 740:.\Protocolo.c **** 		for(x=6;x<=10;x++){
 3191              		.loc 1 740 0 is_stmt 0 discriminator 1
 3192 0166 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3193 0168 0A2B     		cmp	r3, #10
 3194 016a E6D9     		bls	.L172
 742:.\Protocolo.c **** 		}
 743:.\Protocolo.c **** 		buffer[11]=0xE0;
 3195              		.loc 1 743 0 is_stmt 1
 3196 016c E023     		movs	r3, #224
 3197 016e FB75     		strb	r3, [r7, #23]
 744:.\Protocolo.c **** 		buffer[12]=0xFB;
 3198              		.loc 1 744 0
 3199 0170 FB23     		movs	r3, #251
 3200 0172 3B76     		strb	r3, [r7, #24]
 745:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 3201              		.loc 1 745 0
 3202 0174 0023     		movs	r3, #0
 3203 0176 BB77     		strb	r3, [r7, #30]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 72


 3204 0178 0FE0     		b	.L173
 3205              	.L174:
 746:.\Protocolo.c **** 			buffer[13]+=(buffer[x]&0x0F);	
 3206              		.loc 1 746 0 discriminator 3
 3207 017a 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 3208 017c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3209 017e 07F12001 		add	r1, r7, #32
 3210 0182 0B44     		add	r3, r3, r1
 3211 0184 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 3212 0188 03F00F03 		and	r3, r3, #15
 3213 018c DBB2     		uxtb	r3, r3
 3214 018e 1344     		add	r3, r3, r2
 3215 0190 DBB2     		uxtb	r3, r3
 3216 0192 7B76     		strb	r3, [r7, #25]
 745:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 3217              		.loc 1 745 0 discriminator 3
 3218 0194 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3219 0196 0133     		adds	r3, r3, #1
 3220 0198 BB77     		strb	r3, [r7, #30]
 3221              	.L173:
 745:.\Protocolo.c **** 		for(x=0;x<=12;x++){
 3222              		.loc 1 745 0 is_stmt 0 discriminator 1
 3223 019a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3224 019c 0C2B     		cmp	r3, #12
 3225 019e ECD9     		bls	.L174
 747:.\Protocolo.c **** 		}
 748:.\Protocolo.c **** 		buffer[13]=(((~buffer[13])+1)&0x0F)|0xE0;
 3226              		.loc 1 748 0 is_stmt 1
 3227 01a0 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 3228 01a2 5B42     		negs	r3, r3
 3229 01a4 DBB2     		uxtb	r3, r3
 3230 01a6 DBB2     		uxtb	r3, r3
 3231 01a8 03F00F03 		and	r3, r3, #15
 3232 01ac DBB2     		uxtb	r3, r3
 3233 01ae 63F01F03 		orn	r3, r3, #31
 3234 01b2 DBB2     		uxtb	r3, r3
 3235 01b4 DBB2     		uxtb	r3, r3
 3236 01b6 7B76     		strb	r3, [r7, #25]
 749:.\Protocolo.c **** 		buffer[14]=0xF0;
 3237              		.loc 1 749 0
 3238 01b8 F023     		movs	r3, #240
 3239 01ba BB76     		strb	r3, [r7, #26]
 750:.\Protocolo.c **** 		size=14;
 3240              		.loc 1 750 0
 3241 01bc 0E23     		movs	r3, #14
 3242 01be FB77     		strb	r3, [r7, #31]
 3243              	.L170:
 751:.\Protocolo.c **** 	}
 752:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 3244              		.loc 1 752 0
 3245 01c0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 753:.\Protocolo.c **** 	Surtidor_PutChar(0x20|dir);
 3246              		.loc 1 753 0
 3247 01c4 FB79     		ldrb	r3, [r7, #7]
 3248 01c6 43F02003 		orr	r3, r3, #32
 3249 01ca DBB2     		uxtb	r3, r3
 3250 01cc 1846     		mov	r0, r3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 73


 3251 01ce FFF7FEFF 		bl	Surtidor_PutChar
 754:.\Protocolo.c **** 	CyDelay(150);
 3252              		.loc 1 754 0
 3253 01d2 9620     		movs	r0, #150
 3254 01d4 FFF7FEFF 		bl	CyDelay
 755:.\Protocolo.c **** 	if(Surtidor_GetRxBufferSize()>=1){
 3255              		.loc 1 755 0
 3256 01d8 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3257 01dc 0346     		mov	r3, r0
 3258 01de 002B     		cmp	r3, #0
 3259 01e0 31D0     		beq	.L175
 756:.\Protocolo.c **** 		if(Surtidor_ReadRxData()==(0xD0|dir)){
 3260              		.loc 1 756 0
 3261 01e2 FFF7FEFF 		bl	Surtidor_ReadRxData
 3262 01e6 0346     		mov	r3, r0
 3263 01e8 1A46     		mov	r2, r3
 3264 01ea FB79     		ldrb	r3, [r7, #7]
 3265 01ec 63F02F03 		orn	r3, r3, #47
 3266 01f0 DBB2     		uxtb	r3, r3
 3267 01f2 9A42     		cmp	r2, r3
 3268 01f4 25D1     		bne	.L176
 757:.\Protocolo.c **** 	        Surtidor_ClearRxBuffer();
 3269              		.loc 1 757 0
 3270 01f6 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 758:.\Protocolo.c **** 			CyDelay(10);
 3271              		.loc 1 758 0
 3272 01fa 0A20     		movs	r0, #10
 3273 01fc FFF7FEFF 		bl	CyDelay
 759:.\Protocolo.c **** 	        for(x=0;x<=size;x++){
 3274              		.loc 1 759 0
 3275 0200 0023     		movs	r3, #0
 3276 0202 BB77     		strb	r3, [r7, #30]
 3277 0204 0BE0     		b	.L177
 3278              	.L178:
 760:.\Protocolo.c **** 	           	Surtidor_PutChar(buffer[x]);
 3279              		.loc 1 760 0 discriminator 3
 3280 0206 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3281 0208 07F12002 		add	r2, r7, #32
 3282 020c 1344     		add	r3, r3, r2
 3283 020e 13F8143C 		ldrb	r3, [r3, #-20]	@ zero_extendqisi2
 3284 0212 1846     		mov	r0, r3
 3285 0214 FFF7FEFF 		bl	Surtidor_PutChar
 759:.\Protocolo.c **** 	        for(x=0;x<=size;x++){
 3286              		.loc 1 759 0 discriminator 3
 3287 0218 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 3288 021a 0133     		adds	r3, r3, #1
 3289 021c BB77     		strb	r3, [r7, #30]
 3290              	.L177:
 759:.\Protocolo.c **** 	        for(x=0;x<=size;x++){
 3291              		.loc 1 759 0 is_stmt 0 discriminator 1
 3292 021e BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 3293 0220 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 3294 0222 9A42     		cmp	r2, r3
 3295 0224 EFD9     		bls	.L178
 761:.\Protocolo.c **** 	        }
 762:.\Protocolo.c **** 			CyDelay(50);		
 3296              		.loc 1 762 0 is_stmt 1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 74


 3297 0226 3220     		movs	r0, #50
 3298 0228 FFF7FEFF 		bl	CyDelay
 763:.\Protocolo.c **** 			if(get_estado(dir)==0){
 3299              		.loc 1 763 0
 3300 022c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3301 022e 1846     		mov	r0, r3
 3302 0230 FFF7FEFF 		bl	get_estado
 3303 0234 0346     		mov	r3, r0
 3304 0236 002B     		cmp	r3, #0
 3305 0238 01D1     		bne	.L179
 764:.\Protocolo.c **** 				return 0;
 3306              		.loc 1 764 0
 3307 023a 0023     		movs	r3, #0
 3308 023c 04E0     		b	.L181
 3309              	.L179:
 765:.\Protocolo.c **** 			}
 766:.\Protocolo.c **** 			else{
 767:.\Protocolo.c **** 				return 1;
 3310              		.loc 1 767 0
 3311 023e 0123     		movs	r3, #1
 3312 0240 02E0     		b	.L181
 3313              	.L176:
 768:.\Protocolo.c **** 			}
 769:.\Protocolo.c **** 		}
 770:.\Protocolo.c **** 		else{
 771:.\Protocolo.c **** 			return 0;
 3314              		.loc 1 771 0
 3315 0242 0023     		movs	r3, #0
 3316 0244 00E0     		b	.L181
 3317              	.L175:
 772:.\Protocolo.c **** 		}
 773:.\Protocolo.c **** 	}
 774:.\Protocolo.c **** 	else{
 775:.\Protocolo.c **** 		return 0;
 3318              		.loc 1 775 0
 3319 0246 0023     		movs	r3, #0
 3320              	.L181:
 776:.\Protocolo.c **** 	}
 777:.\Protocolo.c **** }
 3321              		.loc 1 777 0 discriminator 1
 3322 0248 1846     		mov	r0, r3
 3323 024a 2037     		adds	r7, r7, #32
 3324              		.cfi_def_cfa_offset 8
 3325 024c BD46     		mov	sp, r7
 3326              		.cfi_def_cfa_register 13
 3327              		@ sp needed
 3328 024e 80BD     		pop	{r7, pc}
 3329              	.L183:
 3330              		.align	2
 3331              	.L182:
 3332 0250 00000000 		.word	version
 3333              		.cfi_endproc
 3334              	.LFE71:
 3335              		.size	cambiar_precio, .-cambiar_precio
 3336              		.section	.text.totales,"ax",%progbits
 3337              		.align	2
 3338              		.global	totales
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 75


 3339              		.thumb
 3340              		.thumb_func
 3341              		.type	totales, %function
 3342              	totales:
 3343              	.LFB72:
 778:.\Protocolo.c **** 
 779:.\Protocolo.c **** /*
 780:.\Protocolo.c **** ***************************************************************************************************
 781:.\Protocolo.c **** *                                         uint8 totales(uint8 dir)
 782:.\Protocolo.c **** *
 783:.\Protocolo.c **** * Description : 
 784:.\Protocolo.c **** *               
 785:.\Protocolo.c **** *
 786:.\Protocolo.c **** * Argument(s) : none
 787:.\Protocolo.c **** *
 788:.\Protocolo.c **** * Return(s)   : none
 789:.\Protocolo.c **** *
 790:.\Protocolo.c **** * Caller(s)   : 
 791:.\Protocolo.c **** *
 792:.\Protocolo.c **** * Note(s)     : none.
 793:.\Protocolo.c **** ***************************************************************************************************
 794:.\Protocolo.c **** */
 795:.\Protocolo.c **** uint8 totales(uint8 dir, uint8 nmangueras){
 3344              		.loc 1 795 0
 3345              		.cfi_startproc
 3346              		@ args = 0, pretend = 0, frame = 16
 3347              		@ frame_needed = 1, uses_anonymous_args = 0
 3348 0000 80B5     		push	{r7, lr}
 3349              		.cfi_def_cfa_offset 8
 3350              		.cfi_offset 7, -8
 3351              		.cfi_offset 14, -4
 3352 0002 84B0     		sub	sp, sp, #16
 3353              		.cfi_def_cfa_offset 24
 3354 0004 00AF     		add	r7, sp, #0
 3355              		.cfi_def_cfa_register 7
 3356 0006 0346     		mov	r3, r0
 3357 0008 0A46     		mov	r2, r1
 3358 000a FB71     		strb	r3, [r7, #7]
 3359 000c 1346     		mov	r3, r2
 3360 000e BB71     		strb	r3, [r7, #6]
 796:.\Protocolo.c **** 	uint8 x,y;
 797:.\Protocolo.c **** 	Surtidor_ClearRxBuffer();
 3361              		.loc 1 797 0
 3362 0010 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 798:.\Protocolo.c ****     Surtidor_PutChar(0x50|dir);
 3363              		.loc 1 798 0
 3364 0014 FB79     		ldrb	r3, [r7, #7]
 3365 0016 43F05003 		orr	r3, r3, #80
 3366 001a DBB2     		uxtb	r3, r3
 3367 001c 1846     		mov	r0, r3
 3368 001e FFF7FEFF 		bl	Surtidor_PutChar
 799:.\Protocolo.c ****     rx_timeout=0;
 3369              		.loc 1 799 0
 3370 0022 AB4B     		ldr	r3, .L491
 3371 0024 0022     		movs	r2, #0
 3372 0026 1A70     		strb	r2, [r3]
 800:.\Protocolo.c **** 	CyDelay(100);
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 76


 3373              		.loc 1 800 0
 3374 0028 6420     		movs	r0, #100
 3375 002a FFF7FEFF 		bl	CyDelay
 801:.\Protocolo.c **** 	if(Surtidor_GetRxBufferSize()>=1){
 3376              		.loc 1 801 0
 3377 002e FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3378 0032 0346     		mov	r3, r0
 3379 0034 002B     		cmp	r3, #0
 3380 0036 01F00B84 		beq	.L185
 802:.\Protocolo.c **** 		if(dir==lado1.dir){
 3381              		.loc 1 802 0
 3382 003a A64B     		ldr	r3, .L491+4
 3383 003c 1B78     		ldrb	r3, [r3]
 3384 003e DBB2     		uxtb	r3, r3
 3385 0040 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3386 0042 9A42     		cmp	r2, r3
 3387 0044 40F00283 		bne	.L186
 803:.\Protocolo.c **** 			if(version[1]!=7){
 3388              		.loc 1 803 0
 3389 0048 A34B     		ldr	r3, .L491+8
 3390 004a 5B78     		ldrb	r3, [r3, #1]
 3391 004c DBB2     		uxtb	r3, r3
 3392 004e 072B     		cmp	r3, #7
 3393 0050 00F08081 		beq	.L187
 804:.\Protocolo.c **** 				CyDelay(900);
 3394              		.loc 1 804 0
 3395 0054 4FF46170 		mov	r0, #900
 3396 0058 FFF7FEFF 		bl	CyDelay
 805:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 3397              		.loc 1 805 0
 3398 005c FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3399 0060 0346     		mov	r3, r0
 3400 0062 FB73     		strb	r3, [r7, #15]
 806:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 3401              		.loc 1 806 0
 3402 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3403 0066 222B     		cmp	r3, #34
 3404 0068 06D0     		beq	.L188
 3405              		.loc 1 806 0 is_stmt 0 discriminator 1
 3406 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3407 006c 402B     		cmp	r3, #64
 3408 006e 03D0     		beq	.L188
 3409              		.loc 1 806 0 discriminator 2
 3410 0070 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3411 0072 5E2B     		cmp	r3, #94
 3412 0074 40F06981 		bne	.L189
 3413              	.L188:
 807:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 3414              		.loc 1 807 0 is_stmt 1
 3415 0078 984B     		ldr	r3, .L491+12
 3416 007a 1B78     		ldrb	r3, [r3]
 3417 007c DBB2     		uxtb	r3, r3
 3418 007e FF2B     		cmp	r3, #255
 3419 0080 40F05E81 		bne	.L190
 3420              		.loc 1 807 0 is_stmt 0 discriminator 1
 3421 0084 954B     		ldr	r3, .L491+12
 3422 0086 5B78     		ldrb	r3, [r3, #1]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 77


 3423 0088 DBB2     		uxtb	r3, r3
 3424 008a F62B     		cmp	r3, #246
 3425 008c 40F05881 		bne	.L190
 3426              		.loc 1 807 0 discriminator 2
 3427 0090 924B     		ldr	r3, .L491+12
 3428 0092 DB78     		ldrb	r3, [r3, #3]
 3429 0094 DBB2     		uxtb	r3, r3
 3430 0096 F92B     		cmp	r3, #249
 3431 0098 40F05281 		bne	.L190
 808:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3432              		.loc 1 808 0 is_stmt 1
 3433 009c 0023     		movs	r3, #0
 3434 009e BB73     		strb	r3, [r7, #14]
 3435 00a0 16E0     		b	.L191
 3436              	.L194:
 809:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3437              		.loc 1 809 0
 3438 00a2 0023     		movs	r3, #0
 3439 00a4 FB73     		strb	r3, [r7, #15]
 3440 00a6 0DE0     		b	.L192
 3441              	.L193:
 810:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 3442              		.loc 1 810 0 discriminator 3
 3443 00a8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3444 00aa F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 3445 00ac 8948     		ldr	r0, .L491+4
 3446 00ae 1346     		mov	r3, r2
 3447 00b0 5B00     		lsls	r3, r3, #1
 3448 00b2 1344     		add	r3, r3, r2
 3449 00b4 DB00     		lsls	r3, r3, #3
 3450 00b6 0B44     		add	r3, r3, r1
 3451 00b8 0344     		add	r3, r3, r0
 3452 00ba 0022     		movs	r2, #0
 3453 00bc 9A70     		strb	r2, [r3, #2]
 809:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3454              		.loc 1 809 0 discriminator 3
 3455 00be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3456 00c0 0133     		adds	r3, r3, #1
 3457 00c2 FB73     		strb	r3, [r7, #15]
 3458              	.L192:
 809:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3459              		.loc 1 809 0 is_stmt 0 discriminator 1
 3460 00c4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3461 00c6 172B     		cmp	r3, #23
 3462 00c8 EED9     		bls	.L193
 808:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3463              		.loc 1 808 0 is_stmt 1 discriminator 2
 3464 00ca BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3465 00cc 0133     		adds	r3, r3, #1
 3466 00ce BB73     		strb	r3, [r7, #14]
 3467              	.L191:
 808:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3468              		.loc 1 808 0 is_stmt 0 discriminator 1
 3469 00d0 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3470 00d2 022B     		cmp	r3, #2
 3471 00d4 E5D9     		bls	.L194
 811:.\Protocolo.c ****                     		}
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 78


 812:.\Protocolo.c ****                     	}                        
 813:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 3472              		.loc 1 813 0 is_stmt 1
 3473 00d6 0023     		movs	r3, #0
 3474 00d8 FB73     		strb	r3, [r7, #15]
 3475 00da 0CE0     		b	.L195
 3476              	.L196:
 814:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4]; 
 3477              		.loc 1 814 0 discriminator 3
 3478 00dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3479 00de FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3480 00e0 0432     		adds	r2, r2, #4
 3481 00e2 7E49     		ldr	r1, .L491+12
 3482 00e4 8A5C     		ldrb	r2, [r1, r2]
 3483 00e6 D1B2     		uxtb	r1, r2
 3484 00e8 7A4A     		ldr	r2, .L491+4
 3485 00ea 1344     		add	r3, r3, r2
 3486 00ec 0A46     		mov	r2, r1
 3487 00ee 9A70     		strb	r2, [r3, #2]
 813:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4]; 
 3488              		.loc 1 813 0 discriminator 3
 3489 00f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3490 00f2 0133     		adds	r3, r3, #1
 3491 00f4 FB73     		strb	r3, [r7, #15]
 3492              	.L195:
 813:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4]; 
 3493              		.loc 1 813 0 is_stmt 0 discriminator 1
 3494 00f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3495 00f8 072B     		cmp	r3, #7
 3496 00fa EFD9     		bls	.L196
 815:.\Protocolo.c **** 						}
 816:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 3497              		.loc 1 816 0 is_stmt 1
 3498 00fc 0023     		movs	r3, #0
 3499 00fe FB73     		strb	r3, [r7, #15]
 3500 0100 17E0     		b	.L197
 3501              	.L200:
 817:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 3502              		.loc 1 817 0
 3503 0102 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3504 0104 0D33     		adds	r3, r3, #13
 3505 0106 754A     		ldr	r2, .L491+12
 3506 0108 D35C     		ldrb	r3, [r2, r3]
 3507 010a DBB2     		uxtb	r3, r3
 3508 010c 002B     		cmp	r3, #0
 3509 010e 02D1     		bne	.L198
 818:.\Protocolo.c ****                                 return 0;
 3510              		.loc 1 818 0
 3511 0110 0023     		movs	r3, #0
 3512 0112 01F09EBB 		b	.L199
 3513              	.L198:
 819:.\Protocolo.c ****                             }
 820:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 3514              		.loc 1 820 0 discriminator 2
 3515 0116 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3516 0118 0C33     		adds	r3, r3, #12
 3517 011a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 79


 3518 011c 0D32     		adds	r2, r2, #13
 3519 011e 6F49     		ldr	r1, .L491+12
 3520 0120 8A5C     		ldrb	r2, [r1, r2]
 3521 0122 D1B2     		uxtb	r1, r2
 3522 0124 6B4A     		ldr	r2, .L491+4
 3523 0126 1344     		add	r3, r3, r2
 3524 0128 0A46     		mov	r2, r1
 3525 012a 9A70     		strb	r2, [r3, #2]
 816:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 3526              		.loc 1 816 0 discriminator 2
 3527 012c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3528 012e 0133     		adds	r3, r3, #1
 3529 0130 FB73     		strb	r3, [r7, #15]
 3530              	.L197:
 816:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 3531              		.loc 1 816 0 is_stmt 0 discriminator 1
 3532 0132 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3533 0134 072B     		cmp	r3, #7
 3534 0136 E4D9     		bls	.L200
 821:.\Protocolo.c **** 						}
 822:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 3535              		.loc 1 822 0 is_stmt 1
 3536 0138 0023     		movs	r3, #0
 3537 013a FB73     		strb	r3, [r7, #15]
 3538 013c 0DE0     		b	.L201
 3539              	.L202:
 823:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];
 3540              		.loc 1 823 0 discriminator 3
 3541 013e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3542 0140 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3543 0142 1632     		adds	r2, r2, #22
 3544 0144 6549     		ldr	r1, .L491+12
 3545 0146 8A5C     		ldrb	r2, [r1, r2]
 3546 0148 D1B2     		uxtb	r1, r2
 3547 014a 624A     		ldr	r2, .L491+4
 3548 014c 1344     		add	r3, r3, r2
 3549 014e 0A46     		mov	r2, r1
 3550 0150 83F84A20 		strb	r2, [r3, #74]
 822:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];
 3551              		.loc 1 822 0 discriminator 3
 3552 0154 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3553 0156 0133     		adds	r3, r3, #1
 3554 0158 FB73     		strb	r3, [r7, #15]
 3555              	.L201:
 822:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+22];
 3556              		.loc 1 822 0 is_stmt 0 discriminator 1
 3557 015a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3558 015c 032B     		cmp	r3, #3
 3559 015e EED9     		bls	.L202
 824:.\Protocolo.c **** 						}				
 825:.\Protocolo.c **** 						if(nmangueras==2){
 3560              		.loc 1 825 0 is_stmt 1
 3561 0160 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3562 0162 022B     		cmp	r3, #2
 3563 0164 49D1     		bne	.L203
 826:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3564              		.loc 1 826 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 80


 3565 0166 0023     		movs	r3, #0
 3566 0168 FB73     		strb	r3, [r7, #15]
 3567 016a 0CE0     		b	.L204
 3568              	.L205:
 827:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3569              		.loc 1 827 0 discriminator 3
 3570 016c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3571 016e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3572 0170 2232     		adds	r2, r2, #34
 3573 0172 5A49     		ldr	r1, .L491+12
 3574 0174 8A5C     		ldrb	r2, [r1, r2]
 3575 0176 D1B2     		uxtb	r1, r2
 3576 0178 564A     		ldr	r2, .L491+4
 3577 017a 1344     		add	r3, r3, r2
 3578 017c 0A46     		mov	r2, r1
 3579 017e 9A76     		strb	r2, [r3, #26]
 826:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3580              		.loc 1 826 0 discriminator 3
 3581 0180 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3582 0182 0133     		adds	r3, r3, #1
 3583 0184 FB73     		strb	r3, [r7, #15]
 3584              	.L204:
 826:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3585              		.loc 1 826 0 is_stmt 0 discriminator 1
 3586 0186 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3587 0188 072B     		cmp	r3, #7
 3588 018a EFD9     		bls	.L205
 828:.\Protocolo.c **** 							}
 829:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3589              		.loc 1 829 0 is_stmt 1
 3590 018c 0023     		movs	r3, #0
 3591 018e FB73     		strb	r3, [r7, #15]
 3592 0190 17E0     		b	.L206
 3593              	.L208:
 830:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 3594              		.loc 1 830 0
 3595 0192 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3596 0194 2B33     		adds	r3, r3, #43
 3597 0196 514A     		ldr	r2, .L491+12
 3598 0198 D35C     		ldrb	r3, [r2, r3]
 3599 019a DBB2     		uxtb	r3, r3
 3600 019c 002B     		cmp	r3, #0
 3601 019e 02D1     		bne	.L207
 831:.\Protocolo.c ****                                     return 0;
 3602              		.loc 1 831 0
 3603 01a0 0023     		movs	r3, #0
 3604 01a2 01F056BB 		b	.L199
 3605              	.L207:
 832:.\Protocolo.c ****                                 }                                
 833:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3606              		.loc 1 833 0 discriminator 2
 3607 01a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3608 01a8 0C33     		adds	r3, r3, #12
 3609 01aa FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3610 01ac 2B32     		adds	r2, r2, #43
 3611 01ae 4B49     		ldr	r1, .L491+12
 3612 01b0 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 81


 3613 01b2 D1B2     		uxtb	r1, r2
 3614 01b4 474A     		ldr	r2, .L491+4
 3615 01b6 1344     		add	r3, r3, r2
 3616 01b8 0A46     		mov	r2, r1
 3617 01ba 9A76     		strb	r2, [r3, #26]
 829:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 3618              		.loc 1 829 0 discriminator 2
 3619 01bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3620 01be 0133     		adds	r3, r3, #1
 3621 01c0 FB73     		strb	r3, [r7, #15]
 3622              	.L206:
 829:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 3623              		.loc 1 829 0 is_stmt 0 discriminator 1
 3624 01c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3625 01c4 072B     		cmp	r3, #7
 3626 01c6 E4D9     		bls	.L208
 834:.\Protocolo.c **** 							}
 835:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3627              		.loc 1 835 0 is_stmt 1
 3628 01c8 0023     		movs	r3, #0
 3629 01ca FB73     		strb	r3, [r7, #15]
 3630 01cc 0DE0     		b	.L209
 3631              	.L210:
 836:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3632              		.loc 1 836 0 discriminator 3
 3633 01ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3634 01d0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3635 01d2 3432     		adds	r2, r2, #52
 3636 01d4 4149     		ldr	r1, .L491+12
 3637 01d6 8A5C     		ldrb	r2, [r1, r2]
 3638 01d8 D1B2     		uxtb	r1, r2
 3639 01da 3E4A     		ldr	r2, .L491+4
 3640 01dc 1344     		add	r3, r3, r2
 3641 01de 0A46     		mov	r2, r1
 3642 01e0 83F84F20 		strb	r2, [r3, #79]
 835:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3643              		.loc 1 835 0 discriminator 3
 3644 01e4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3645 01e6 0133     		adds	r3, r3, #1
 3646 01e8 FB73     		strb	r3, [r7, #15]
 3647              	.L209:
 835:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3648              		.loc 1 835 0 is_stmt 0 discriminator 1
 3649 01ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3650 01ec 032B     		cmp	r3, #3
 3651 01ee EED9     		bls	.L210
 837:.\Protocolo.c **** 							}	
 838:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3652              		.loc 1 838 0 is_stmt 1
 3653 01f0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 839:.\Protocolo.c ****     						return 2;                            
 3654              		.loc 1 839 0
 3655 01f4 0223     		movs	r3, #2
 3656 01f6 01F02CBB 		b	.L199
 3657              	.L203:
 840:.\Protocolo.c **** 						}
 841:.\Protocolo.c **** 						if(nmangueras==3){
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 82


 3658              		.loc 1 841 0
 3659 01fa BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3660 01fc 032B     		cmp	r3, #3
 3661 01fe 40F09A80 		bne	.L211
 842:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3662              		.loc 1 842 0
 3663 0202 0023     		movs	r3, #0
 3664 0204 FB73     		strb	r3, [r7, #15]
 3665 0206 0CE0     		b	.L212
 3666              	.L213:
 843:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+34];
 3667              		.loc 1 843 0 discriminator 3
 3668 0208 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3669 020a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3670 020c 2232     		adds	r2, r2, #34
 3671 020e 3349     		ldr	r1, .L491+12
 3672 0210 8A5C     		ldrb	r2, [r1, r2]
 3673 0212 D1B2     		uxtb	r1, r2
 3674 0214 2F4A     		ldr	r2, .L491+4
 3675 0216 1344     		add	r3, r3, r2
 3676 0218 0A46     		mov	r2, r1
 3677 021a 9A76     		strb	r2, [r3, #26]
 842:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3678              		.loc 1 842 0 discriminator 3
 3679 021c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3680 021e 0133     		adds	r3, r3, #1
 3681 0220 FB73     		strb	r3, [r7, #15]
 3682              	.L212:
 842:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3683              		.loc 1 842 0 is_stmt 0 discriminator 1
 3684 0222 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3685 0224 072B     		cmp	r3, #7
 3686 0226 EFD9     		bls	.L213
 844:.\Protocolo.c **** 							}
 845:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3687              		.loc 1 845 0 is_stmt 1
 3688 0228 0023     		movs	r3, #0
 3689 022a FB73     		strb	r3, [r7, #15]
 3690 022c 17E0     		b	.L214
 3691              	.L216:
 846:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 3692              		.loc 1 846 0
 3693 022e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3694 0230 2B33     		adds	r3, r3, #43
 3695 0232 2A4A     		ldr	r2, .L491+12
 3696 0234 D35C     		ldrb	r3, [r2, r3]
 3697 0236 DBB2     		uxtb	r3, r3
 3698 0238 002B     		cmp	r3, #0
 3699 023a 02D1     		bne	.L215
 847:.\Protocolo.c ****                                     return 0;
 3700              		.loc 1 847 0
 3701 023c 0023     		movs	r3, #0
 3702 023e 01F008BB 		b	.L199
 3703              	.L215:
 848:.\Protocolo.c ****                                 }                                 
 849:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 3704              		.loc 1 849 0 discriminator 2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 83


 3705 0242 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3706 0244 0C33     		adds	r3, r3, #12
 3707 0246 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3708 0248 2B32     		adds	r2, r2, #43
 3709 024a 2449     		ldr	r1, .L491+12
 3710 024c 8A5C     		ldrb	r2, [r1, r2]
 3711 024e D1B2     		uxtb	r1, r2
 3712 0250 204A     		ldr	r2, .L491+4
 3713 0252 1344     		add	r3, r3, r2
 3714 0254 0A46     		mov	r2, r1
 3715 0256 9A76     		strb	r2, [r3, #26]
 845:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 3716              		.loc 1 845 0 discriminator 2
 3717 0258 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3718 025a 0133     		adds	r3, r3, #1
 3719 025c FB73     		strb	r3, [r7, #15]
 3720              	.L214:
 845:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 3721              		.loc 1 845 0 is_stmt 0 discriminator 1
 3722 025e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3723 0260 072B     		cmp	r3, #7
 3724 0262 E4D9     		bls	.L216
 850:.\Protocolo.c **** 							}
 851:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3725              		.loc 1 851 0 is_stmt 1
 3726 0264 0023     		movs	r3, #0
 3727 0266 FB73     		strb	r3, [r7, #15]
 3728 0268 0DE0     		b	.L217
 3729              	.L218:
 852:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3730              		.loc 1 852 0 discriminator 3
 3731 026a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3732 026c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3733 026e 3432     		adds	r2, r2, #52
 3734 0270 1A49     		ldr	r1, .L491+12
 3735 0272 8A5C     		ldrb	r2, [r1, r2]
 3736 0274 D1B2     		uxtb	r1, r2
 3737 0276 174A     		ldr	r2, .L491+4
 3738 0278 1344     		add	r3, r3, r2
 3739 027a 0A46     		mov	r2, r1
 3740 027c 83F84F20 		strb	r2, [r3, #79]
 851:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3741              		.loc 1 851 0 discriminator 3
 3742 0280 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3743 0282 0133     		adds	r3, r3, #1
 3744 0284 FB73     		strb	r3, [r7, #15]
 3745              	.L217:
 851:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+52];
 3746              		.loc 1 851 0 is_stmt 0 discriminator 1
 3747 0286 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3748 0288 032B     		cmp	r3, #3
 3749 028a EED9     		bls	.L218
 853:.\Protocolo.c **** 							}						
 854:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3750              		.loc 1 854 0 is_stmt 1
 3751 028c 0023     		movs	r3, #0
 3752 028e FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 84


 3753 0290 0DE0     		b	.L219
 3754              	.L220:
 855:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3755              		.loc 1 855 0 discriminator 3
 3756 0292 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3757 0294 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3758 0296 4032     		adds	r2, r2, #64
 3759 0298 1049     		ldr	r1, .L491+12
 3760 029a 8A5C     		ldrb	r2, [r1, r2]
 3761 029c D1B2     		uxtb	r1, r2
 3762 029e 0D4A     		ldr	r2, .L491+4
 3763 02a0 1344     		add	r3, r3, r2
 3764 02a2 0A46     		mov	r2, r1
 3765 02a4 83F83220 		strb	r2, [r3, #50]
 854:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3766              		.loc 1 854 0 discriminator 3
 3767 02a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3768 02aa 0133     		adds	r3, r3, #1
 3769 02ac FB73     		strb	r3, [r7, #15]
 3770              	.L219:
 854:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+64];
 3771              		.loc 1 854 0 is_stmt 0 discriminator 1
 3772 02ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3773 02b0 072B     		cmp	r3, #7
 3774 02b2 EED9     		bls	.L220
 856:.\Protocolo.c **** 							}
 857:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 3775              		.loc 1 857 0 is_stmt 1
 3776 02b4 0023     		movs	r3, #0
 3777 02b6 FB73     		strb	r3, [r7, #15]
 3778 02b8 21E0     		b	.L221
 3779              	.L223:
 858:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 3780              		.loc 1 858 0
 3781 02ba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3782 02bc 4933     		adds	r3, r3, #73
 3783 02be 074A     		ldr	r2, .L491+12
 3784 02c0 D35C     		ldrb	r3, [r2, r3]
 3785 02c2 DBB2     		uxtb	r3, r3
 3786 02c4 002B     		cmp	r3, #0
 3787 02c6 0BD1     		bne	.L222
 859:.\Protocolo.c ****                                     return 0;
 3788              		.loc 1 859 0
 3789 02c8 0023     		movs	r3, #0
 3790 02ca 01F0C2BA 		b	.L199
 3791              	.L492:
 3792 02ce 00BF     		.align	2
 3793              	.L491:
 3794 02d0 00000000 		.word	rx_timeout
 3795 02d4 00000000 		.word	lado1
 3796 02d8 00000000 		.word	version
 3797 02dc 00000000 		.word	Surtidor_rxBuffer
 3798              	.L222:
 860:.\Protocolo.c ****                                 }                                 
 861:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 3799              		.loc 1 861 0 discriminator 2
 3800 02e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 85


 3801 02e2 0C33     		adds	r3, r3, #12
 3802 02e4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3803 02e6 4932     		adds	r2, r2, #73
 3804 02e8 B449     		ldr	r1, .L493
 3805 02ea 8A5C     		ldrb	r2, [r1, r2]
 3806 02ec D1B2     		uxtb	r1, r2
 3807 02ee B44A     		ldr	r2, .L493+4
 3808 02f0 1344     		add	r3, r3, r2
 3809 02f2 0A46     		mov	r2, r1
 3810 02f4 83F83220 		strb	r2, [r3, #50]
 857:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 3811              		.loc 1 857 0 discriminator 2
 3812 02f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3813 02fa 0133     		adds	r3, r3, #1
 3814 02fc FB73     		strb	r3, [r7, #15]
 3815              	.L221:
 857:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 3816              		.loc 1 857 0 is_stmt 0 discriminator 1
 3817 02fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3818 0300 072B     		cmp	r3, #7
 3819 0302 DAD9     		bls	.L223
 862:.\Protocolo.c **** 							}
 863:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 3820              		.loc 1 863 0 is_stmt 1
 3821 0304 0023     		movs	r3, #0
 3822 0306 FB73     		strb	r3, [r7, #15]
 3823 0308 0DE0     		b	.L224
 3824              	.L225:
 864:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3825              		.loc 1 864 0 discriminator 3
 3826 030a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3827 030c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3828 030e 5232     		adds	r2, r2, #82
 3829 0310 AA49     		ldr	r1, .L493
 3830 0312 8A5C     		ldrb	r2, [r1, r2]
 3831 0314 D1B2     		uxtb	r1, r2
 3832 0316 AA4A     		ldr	r2, .L493+4
 3833 0318 1344     		add	r3, r3, r2
 3834 031a 0A46     		mov	r2, r1
 3835 031c 83F85420 		strb	r2, [r3, #84]
 863:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3836              		.loc 1 863 0 discriminator 3
 3837 0320 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3838 0322 0133     		adds	r3, r3, #1
 3839 0324 FB73     		strb	r3, [r7, #15]
 3840              	.L224:
 863:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+82];
 3841              		.loc 1 863 0 is_stmt 0 discriminator 1
 3842 0326 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3843 0328 032B     		cmp	r3, #3
 3844 032a EED9     		bls	.L225
 865:.\Protocolo.c **** 							}
 866:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 3845              		.loc 1 866 0 is_stmt 1
 3846 032c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 867:.\Protocolo.c ****     						return 3;                            
 3847              		.loc 1 867 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 86


 3848 0330 0323     		movs	r3, #3
 3849 0332 01F08EBA 		b	.L199
 3850              	.L211:
 868:.\Protocolo.c **** 						}
 869:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3851              		.loc 1 869 0
 3852 0336 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 870:.\Protocolo.c **** 						return 1;
 3853              		.loc 1 870 0
 3854 033a 0123     		movs	r3, #1
 3855 033c 01F089BA 		b	.L199
 3856              	.L190:
 871:.\Protocolo.c **** 					}
 872:.\Protocolo.c **** 					else{
 873:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 3857              		.loc 1 873 0
 3858 0340 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 874:.\Protocolo.c **** 						return 0;
 3859              		.loc 1 874 0
 3860 0344 0023     		movs	r3, #0
 3861 0346 01F084BA 		b	.L199
 3862              	.L189:
 875:.\Protocolo.c **** 					}					
 876:.\Protocolo.c **** 				}
 877:.\Protocolo.c **** 				else{
 878:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 3863              		.loc 1 878 0
 3864 034a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 879:.\Protocolo.c **** 					return 0;		
 3865              		.loc 1 879 0
 3866 034e 0023     		movs	r3, #0
 3867 0350 01F07FBA 		b	.L199
 3868              	.L187:
 880:.\Protocolo.c **** 				}
 881:.\Protocolo.c **** 			}
 882:.\Protocolo.c **** 			else{
 883:.\Protocolo.c **** 				CyDelay(900);
 3869              		.loc 1 883 0
 3870 0354 4FF46170 		mov	r0, #900
 3871 0358 FFF7FEFF 		bl	CyDelay
 884:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 3872              		.loc 1 884 0
 3873 035c FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 3874 0360 0346     		mov	r3, r0
 3875 0362 FB73     		strb	r3, [r7, #15]
 885:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){				
 3876              		.loc 1 885 0
 3877 0364 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3878 0366 2E2B     		cmp	r3, #46
 3879 0368 06D0     		beq	.L226
 3880              		.loc 1 885 0 is_stmt 0 discriminator 1
 3881 036a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3882 036c 582B     		cmp	r3, #88
 3883 036e 03D0     		beq	.L226
 3884              		.loc 1 885 0 discriminator 2
 3885 0370 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3886 0372 822B     		cmp	r3, #130
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 87


 3887 0374 40F06581 		bne	.L227
 3888              	.L226:
 886:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 3889              		.loc 1 886 0 is_stmt 1
 3890 0378 904B     		ldr	r3, .L493
 3891 037a 1B78     		ldrb	r3, [r3]
 3892 037c DBB2     		uxtb	r3, r3
 3893 037e FF2B     		cmp	r3, #255
 3894 0380 40F05A81 		bne	.L228
 3895              		.loc 1 886 0 is_stmt 0 discriminator 1
 3896 0384 8D4B     		ldr	r3, .L493
 3897 0386 5B78     		ldrb	r3, [r3, #1]
 3898 0388 DBB2     		uxtb	r3, r3
 3899 038a F62B     		cmp	r3, #246
 3900 038c 40F05481 		bne	.L228
 3901              		.loc 1 886 0 discriminator 2
 3902 0390 8A4B     		ldr	r3, .L493
 3903 0392 DB78     		ldrb	r3, [r3, #3]
 3904 0394 DBB2     		uxtb	r3, r3
 3905 0396 F92B     		cmp	r3, #249
 3906 0398 40F04E81 		bne	.L228
 887:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3907              		.loc 1 887 0 is_stmt 1
 3908 039c 0023     		movs	r3, #0
 3909 039e BB73     		strb	r3, [r7, #14]
 3910 03a0 16E0     		b	.L229
 3911              	.L232:
 888:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3912              		.loc 1 888 0
 3913 03a2 0023     		movs	r3, #0
 3914 03a4 FB73     		strb	r3, [r7, #15]
 3915 03a6 0DE0     		b	.L230
 3916              	.L231:
 889:.\Protocolo.c ****                     			lado1.totales[y][x]=0;
 3917              		.loc 1 889 0 discriminator 3
 3918 03a8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 3919 03aa F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 3920 03ac 8448     		ldr	r0, .L493+4
 3921 03ae 1346     		mov	r3, r2
 3922 03b0 5B00     		lsls	r3, r3, #1
 3923 03b2 1344     		add	r3, r3, r2
 3924 03b4 DB00     		lsls	r3, r3, #3
 3925 03b6 0B44     		add	r3, r3, r1
 3926 03b8 0344     		add	r3, r3, r0
 3927 03ba 0022     		movs	r2, #0
 3928 03bc 9A70     		strb	r2, [r3, #2]
 888:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3929              		.loc 1 888 0 discriminator 3
 3930 03be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3931 03c0 0133     		adds	r3, r3, #1
 3932 03c2 FB73     		strb	r3, [r7, #15]
 3933              	.L230:
 888:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 3934              		.loc 1 888 0 is_stmt 0 discriminator 1
 3935 03c4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3936 03c6 172B     		cmp	r3, #23
 3937 03c8 EED9     		bls	.L231
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 88


 887:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3938              		.loc 1 887 0 is_stmt 1 discriminator 2
 3939 03ca BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3940 03cc 0133     		adds	r3, r3, #1
 3941 03ce BB73     		strb	r3, [r7, #14]
 3942              	.L229:
 887:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 3943              		.loc 1 887 0 is_stmt 0 discriminator 1
 3944 03d0 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3945 03d2 022B     		cmp	r3, #2
 3946 03d4 E5D9     		bls	.L232
 890:.\Protocolo.c ****                     		}
 891:.\Protocolo.c ****                     	}                        
 892:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3947              		.loc 1 892 0 is_stmt 1
 3948 03d6 0023     		movs	r3, #0
 3949 03d8 FB73     		strb	r3, [r7, #15]
 3950 03da 0CE0     		b	.L233
 3951              	.L234:
 893:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3952              		.loc 1 893 0 discriminator 3
 3953 03dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3954 03de FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3955 03e0 0432     		adds	r2, r2, #4
 3956 03e2 7649     		ldr	r1, .L493
 3957 03e4 8A5C     		ldrb	r2, [r1, r2]
 3958 03e6 D1B2     		uxtb	r1, r2
 3959 03e8 754A     		ldr	r2, .L493+4
 3960 03ea 1344     		add	r3, r3, r2
 3961 03ec 0A46     		mov	r2, r1
 3962 03ee 9A70     		strb	r2, [r3, #2]
 892:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3963              		.loc 1 892 0 discriminator 3
 3964 03f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3965 03f2 0133     		adds	r3, r3, #1
 3966 03f4 FB73     		strb	r3, [r7, #15]
 3967              	.L233:
 892:.\Protocolo.c **** 							lado1.totales[0][x]=Surtidor_rxBuffer[x+4];
 3968              		.loc 1 892 0 is_stmt 0 discriminator 1
 3969 03f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3970 03f8 0B2B     		cmp	r3, #11
 3971 03fa EFD9     		bls	.L234
 894:.\Protocolo.c **** 						}
 895:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 3972              		.loc 1 895 0 is_stmt 1
 3973 03fc 0023     		movs	r3, #0
 3974 03fe FB73     		strb	r3, [r7, #15]
 3975 0400 17E0     		b	.L235
 3976              	.L237:
 896:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 3977              		.loc 1 896 0
 3978 0402 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3979 0404 1133     		adds	r3, r3, #17
 3980 0406 6D4A     		ldr	r2, .L493
 3981 0408 D35C     		ldrb	r3, [r2, r3]
 3982 040a DBB2     		uxtb	r3, r3
 3983 040c 002B     		cmp	r3, #0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 89


 3984 040e 02D1     		bne	.L236
 897:.\Protocolo.c ****                                 return 0;
 3985              		.loc 1 897 0
 3986 0410 0023     		movs	r3, #0
 3987 0412 01F01EBA 		b	.L199
 3988              	.L236:
 898:.\Protocolo.c ****                             }                             
 899:.\Protocolo.c **** 							lado1.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 3989              		.loc 1 899 0 discriminator 2
 3990 0416 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3991 0418 0C33     		adds	r3, r3, #12
 3992 041a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3993 041c 1132     		adds	r2, r2, #17
 3994 041e 6749     		ldr	r1, .L493
 3995 0420 8A5C     		ldrb	r2, [r1, r2]
 3996 0422 D1B2     		uxtb	r1, r2
 3997 0424 664A     		ldr	r2, .L493+4
 3998 0426 1344     		add	r3, r3, r2
 3999 0428 0A46     		mov	r2, r1
 4000 042a 9A70     		strb	r2, [r3, #2]
 895:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 4001              		.loc 1 895 0 discriminator 2
 4002 042c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4003 042e 0133     		adds	r3, r3, #1
 4004 0430 FB73     		strb	r3, [r7, #15]
 4005              	.L235:
 895:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 4006              		.loc 1 895 0 is_stmt 0 discriminator 1
 4007 0432 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4008 0434 0B2B     		cmp	r3, #11
 4009 0436 E4D9     		bls	.L237
 900:.\Protocolo.c **** 						}
 901:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 4010              		.loc 1 901 0 is_stmt 1
 4011 0438 0023     		movs	r3, #0
 4012 043a FB73     		strb	r3, [r7, #15]
 4013 043c 0DE0     		b	.L238
 4014              	.L239:
 902:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 4015              		.loc 1 902 0 discriminator 3
 4016 043e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4017 0440 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4018 0442 1E32     		adds	r2, r2, #30
 4019 0444 5D49     		ldr	r1, .L493
 4020 0446 8A5C     		ldrb	r2, [r1, r2]
 4021 0448 D1B2     		uxtb	r1, r2
 4022 044a 5D4A     		ldr	r2, .L493+4
 4023 044c 1344     		add	r3, r3, r2
 4024 044e 0A46     		mov	r2, r1
 4025 0450 83F84A20 		strb	r2, [r3, #74]
 901:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
 4026              		.loc 1 901 0 discriminator 3
 4027 0454 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4028 0456 0133     		adds	r3, r3, #1
 4029 0458 FB73     		strb	r3, [r7, #15]
 4030              	.L238:
 901:.\Protocolo.c **** 							lado1.ppu[0][x]=Surtidor_rxBuffer[x+30];
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 90


 4031              		.loc 1 901 0 is_stmt 0 discriminator 1
 4032 045a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4033 045c 042B     		cmp	r3, #4
 4034 045e EED9     		bls	.L239
 903:.\Protocolo.c **** 						}				
 904:.\Protocolo.c **** 						if(nmangueras==2){
 4035              		.loc 1 904 0 is_stmt 1
 4036 0460 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4037 0462 022B     		cmp	r3, #2
 4038 0464 49D1     		bne	.L240
 905:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4039              		.loc 1 905 0
 4040 0466 0023     		movs	r3, #0
 4041 0468 FB73     		strb	r3, [r7, #15]
 4042 046a 0CE0     		b	.L241
 4043              	.L242:
 906:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 4044              		.loc 1 906 0 discriminator 3
 4045 046c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4046 046e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4047 0470 2E32     		adds	r2, r2, #46
 4048 0472 5249     		ldr	r1, .L493
 4049 0474 8A5C     		ldrb	r2, [r1, r2]
 4050 0476 D1B2     		uxtb	r1, r2
 4051 0478 514A     		ldr	r2, .L493+4
 4052 047a 1344     		add	r3, r3, r2
 4053 047c 0A46     		mov	r2, r1
 4054 047e 9A76     		strb	r2, [r3, #26]
 905:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4055              		.loc 1 905 0 discriminator 3
 4056 0480 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4057 0482 0133     		adds	r3, r3, #1
 4058 0484 FB73     		strb	r3, [r7, #15]
 4059              	.L241:
 905:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4060              		.loc 1 905 0 is_stmt 0 discriminator 1
 4061 0486 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4062 0488 0B2B     		cmp	r3, #11
 4063 048a EFD9     		bls	.L242
 907:.\Protocolo.c **** 							}
 908:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4064              		.loc 1 908 0 is_stmt 1
 4065 048c 0023     		movs	r3, #0
 4066 048e FB73     		strb	r3, [r7, #15]
 4067 0490 17E0     		b	.L243
 4068              	.L245:
 909:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 4069              		.loc 1 909 0
 4070 0492 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4071 0494 3B33     		adds	r3, r3, #59
 4072 0496 494A     		ldr	r2, .L493
 4073 0498 D35C     		ldrb	r3, [r2, r3]
 4074 049a DBB2     		uxtb	r3, r3
 4075 049c 002B     		cmp	r3, #0
 4076 049e 02D1     		bne	.L244
 910:.\Protocolo.c ****                                     return 0;
 4077              		.loc 1 910 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 91


 4078 04a0 0023     		movs	r3, #0
 4079 04a2 01F0D6B9 		b	.L199
 4080              	.L244:
 911:.\Protocolo.c ****                                 }                                 
 912:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4081              		.loc 1 912 0 discriminator 2
 4082 04a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4083 04a8 0C33     		adds	r3, r3, #12
 4084 04aa FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4085 04ac 3B32     		adds	r2, r2, #59
 4086 04ae 4349     		ldr	r1, .L493
 4087 04b0 8A5C     		ldrb	r2, [r1, r2]
 4088 04b2 D1B2     		uxtb	r1, r2
 4089 04b4 424A     		ldr	r2, .L493+4
 4090 04b6 1344     		add	r3, r3, r2
 4091 04b8 0A46     		mov	r2, r1
 4092 04ba 9A76     		strb	r2, [r3, #26]
 908:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 4093              		.loc 1 908 0 discriminator 2
 4094 04bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4095 04be 0133     		adds	r3, r3, #1
 4096 04c0 FB73     		strb	r3, [r7, #15]
 4097              	.L243:
 908:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 4098              		.loc 1 908 0 is_stmt 0 discriminator 1
 4099 04c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4100 04c4 0B2B     		cmp	r3, #11
 4101 04c6 E4D9     		bls	.L245
 913:.\Protocolo.c **** 							}
 914:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4102              		.loc 1 914 0 is_stmt 1
 4103 04c8 0023     		movs	r3, #0
 4104 04ca FB73     		strb	r3, [r7, #15]
 4105 04cc 0DE0     		b	.L246
 4106              	.L247:
 915:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4107              		.loc 1 915 0 discriminator 3
 4108 04ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4109 04d0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4110 04d2 4832     		adds	r2, r2, #72
 4111 04d4 3949     		ldr	r1, .L493
 4112 04d6 8A5C     		ldrb	r2, [r1, r2]
 4113 04d8 D1B2     		uxtb	r1, r2
 4114 04da 394A     		ldr	r2, .L493+4
 4115 04dc 1344     		add	r3, r3, r2
 4116 04de 0A46     		mov	r2, r1
 4117 04e0 83F84F20 		strb	r2, [r3, #79]
 914:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4118              		.loc 1 914 0 discriminator 3
 4119 04e4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4120 04e6 0133     		adds	r3, r3, #1
 4121 04e8 FB73     		strb	r3, [r7, #15]
 4122              	.L246:
 914:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4123              		.loc 1 914 0 is_stmt 0 discriminator 1
 4124 04ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4125 04ec 042B     		cmp	r3, #4
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 92


 4126 04ee EED9     		bls	.L247
 916:.\Protocolo.c **** 							}
 917:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4127              		.loc 1 917 0 is_stmt 1
 4128 04f0 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 918:.\Protocolo.c ****     						return 2;                            
 4129              		.loc 1 918 0
 4130 04f4 0223     		movs	r3, #2
 4131 04f6 01F0ACB9 		b	.L199
 4132              	.L240:
 919:.\Protocolo.c **** 						}
 920:.\Protocolo.c **** 						if(nmangueras==3){
 4133              		.loc 1 920 0
 4134 04fa BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4135 04fc 032B     		cmp	r3, #3
 4136 04fe 40F09680 		bne	.L248
 921:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4137              		.loc 1 921 0
 4138 0502 0023     		movs	r3, #0
 4139 0504 FB73     		strb	r3, [r7, #15]
 4140 0506 0CE0     		b	.L249
 4141              	.L250:
 922:.\Protocolo.c **** 								lado1.totales[1][x]=Surtidor_rxBuffer[x+46];
 4142              		.loc 1 922 0 discriminator 3
 4143 0508 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4144 050a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4145 050c 2E32     		adds	r2, r2, #46
 4146 050e 2B49     		ldr	r1, .L493
 4147 0510 8A5C     		ldrb	r2, [r1, r2]
 4148 0512 D1B2     		uxtb	r1, r2
 4149 0514 2A4A     		ldr	r2, .L493+4
 4150 0516 1344     		add	r3, r3, r2
 4151 0518 0A46     		mov	r2, r1
 4152 051a 9A76     		strb	r2, [r3, #26]
 921:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4153              		.loc 1 921 0 discriminator 3
 4154 051c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4155 051e 0133     		adds	r3, r3, #1
 4156 0520 FB73     		strb	r3, [r7, #15]
 4157              	.L249:
 921:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4158              		.loc 1 921 0 is_stmt 0 discriminator 1
 4159 0522 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4160 0524 0B2B     		cmp	r3, #11
 4161 0526 EFD9     		bls	.L250
 923:.\Protocolo.c **** 							}
 924:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4162              		.loc 1 924 0 is_stmt 1
 4163 0528 0023     		movs	r3, #0
 4164 052a FB73     		strb	r3, [r7, #15]
 4165 052c 17E0     		b	.L251
 4166              	.L253:
 925:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 4167              		.loc 1 925 0
 4168 052e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4169 0530 3B33     		adds	r3, r3, #59
 4170 0532 224A     		ldr	r2, .L493
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 93


 4171 0534 D35C     		ldrb	r3, [r2, r3]
 4172 0536 DBB2     		uxtb	r3, r3
 4173 0538 002B     		cmp	r3, #0
 4174 053a 02D1     		bne	.L252
 926:.\Protocolo.c ****                                     return 0;
 4175              		.loc 1 926 0
 4176 053c 0023     		movs	r3, #0
 4177 053e 01F088B9 		b	.L199
 4178              	.L252:
 927:.\Protocolo.c ****                                 }                                 
 928:.\Protocolo.c **** 								lado1.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 4179              		.loc 1 928 0 discriminator 2
 4180 0542 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4181 0544 0C33     		adds	r3, r3, #12
 4182 0546 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4183 0548 3B32     		adds	r2, r2, #59
 4184 054a 1C49     		ldr	r1, .L493
 4185 054c 8A5C     		ldrb	r2, [r1, r2]
 4186 054e D1B2     		uxtb	r1, r2
 4187 0550 1B4A     		ldr	r2, .L493+4
 4188 0552 1344     		add	r3, r3, r2
 4189 0554 0A46     		mov	r2, r1
 4190 0556 9A76     		strb	r2, [r3, #26]
 924:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 4191              		.loc 1 924 0 discriminator 2
 4192 0558 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4193 055a 0133     		adds	r3, r3, #1
 4194 055c FB73     		strb	r3, [r7, #15]
 4195              	.L251:
 924:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 4196              		.loc 1 924 0 is_stmt 0 discriminator 1
 4197 055e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4198 0560 0B2B     		cmp	r3, #11
 4199 0562 E4D9     		bls	.L253
 929:.\Protocolo.c **** 							}
 930:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4200              		.loc 1 930 0 is_stmt 1
 4201 0564 0023     		movs	r3, #0
 4202 0566 FB73     		strb	r3, [r7, #15]
 4203 0568 0DE0     		b	.L254
 4204              	.L255:
 931:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4205              		.loc 1 931 0 discriminator 3
 4206 056a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4207 056c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4208 056e 4832     		adds	r2, r2, #72
 4209 0570 1249     		ldr	r1, .L493
 4210 0572 8A5C     		ldrb	r2, [r1, r2]
 4211 0574 D1B2     		uxtb	r1, r2
 4212 0576 124A     		ldr	r2, .L493+4
 4213 0578 1344     		add	r3, r3, r2
 4214 057a 0A46     		mov	r2, r1
 4215 057c 83F84F20 		strb	r2, [r3, #79]
 930:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4216              		.loc 1 930 0 discriminator 3
 4217 0580 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4218 0582 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 94


 4219 0584 FB73     		strb	r3, [r7, #15]
 4220              	.L254:
 930:.\Protocolo.c **** 								lado1.ppu[1][x]=Surtidor_rxBuffer[x+72];
 4221              		.loc 1 930 0 is_stmt 0 discriminator 1
 4222 0586 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4223 0588 042B     		cmp	r3, #4
 4224 058a EED9     		bls	.L255
 932:.\Protocolo.c **** 							}					
 933:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4225              		.loc 1 933 0 is_stmt 1
 4226 058c 0023     		movs	r3, #0
 4227 058e FB73     		strb	r3, [r7, #15]
 4228 0590 0DE0     		b	.L256
 4229              	.L257:
 934:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4230              		.loc 1 934 0 discriminator 3
 4231 0592 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4232 0594 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4233 0596 5832     		adds	r2, r2, #88
 4234 0598 0849     		ldr	r1, .L493
 4235 059a 8A5C     		ldrb	r2, [r1, r2]
 4236 059c D1B2     		uxtb	r1, r2
 4237 059e 084A     		ldr	r2, .L493+4
 4238 05a0 1344     		add	r3, r3, r2
 4239 05a2 0A46     		mov	r2, r1
 4240 05a4 83F83220 		strb	r2, [r3, #50]
 933:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4241              		.loc 1 933 0 discriminator 3
 4242 05a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4243 05aa 0133     		adds	r3, r3, #1
 4244 05ac FB73     		strb	r3, [r7, #15]
 4245              	.L256:
 933:.\Protocolo.c **** 								lado1.totales[2][x]=Surtidor_rxBuffer[x+88];
 4246              		.loc 1 933 0 is_stmt 0 discriminator 1
 4247 05ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4248 05b0 0B2B     		cmp	r3, #11
 4249 05b2 EED9     		bls	.L257
 935:.\Protocolo.c **** 							}
 936:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 4250              		.loc 1 936 0 is_stmt 1
 4251 05b4 0023     		movs	r3, #0
 4252 05b6 FB73     		strb	r3, [r7, #15]
 4253 05b8 1DE0     		b	.L258
 4254              	.L494:
 4255 05ba 00BF     		.align	2
 4256              	.L493:
 4257 05bc 00000000 		.word	Surtidor_rxBuffer
 4258 05c0 00000000 		.word	lado1
 4259              	.L260:
 937:.\Protocolo.c ****                                  if(Surtidor_rxBuffer[x+101]==0){
 4260              		.loc 1 937 0
 4261 05c4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4262 05c6 6533     		adds	r3, r3, #101
 4263 05c8 AC4A     		ldr	r2, .L495
 4264 05ca D35C     		ldrb	r3, [r2, r3]
 4265 05cc DBB2     		uxtb	r3, r3
 4266 05ce 002B     		cmp	r3, #0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 95


 4267 05d0 02D1     		bne	.L259
 938:.\Protocolo.c ****                                     return 0;
 4268              		.loc 1 938 0
 4269 05d2 0023     		movs	r3, #0
 4270 05d4 01F03DB9 		b	.L199
 4271              	.L259:
 939:.\Protocolo.c ****                                 }                                
 940:.\Protocolo.c **** 								lado1.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 4272              		.loc 1 940 0 discriminator 2
 4273 05d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4274 05da 0C33     		adds	r3, r3, #12
 4275 05dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4276 05de 6532     		adds	r2, r2, #101
 4277 05e0 A649     		ldr	r1, .L495
 4278 05e2 8A5C     		ldrb	r2, [r1, r2]
 4279 05e4 D1B2     		uxtb	r1, r2
 4280 05e6 A64A     		ldr	r2, .L495+4
 4281 05e8 1344     		add	r3, r3, r2
 4282 05ea 0A46     		mov	r2, r1
 4283 05ec 83F83220 		strb	r2, [r3, #50]
 936:.\Protocolo.c ****                                  if(Surtidor_rxBuffer[x+101]==0){
 4284              		.loc 1 936 0 discriminator 2
 4285 05f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4286 05f2 0133     		adds	r3, r3, #1
 4287 05f4 FB73     		strb	r3, [r7, #15]
 4288              	.L258:
 936:.\Protocolo.c ****                                  if(Surtidor_rxBuffer[x+101]==0){
 4289              		.loc 1 936 0 is_stmt 0 discriminator 1
 4290 05f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4291 05f8 0B2B     		cmp	r3, #11
 4292 05fa E3D9     		bls	.L260
 941:.\Protocolo.c **** 							}
 942:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 4293              		.loc 1 942 0 is_stmt 1
 4294 05fc 0023     		movs	r3, #0
 4295 05fe FB73     		strb	r3, [r7, #15]
 4296 0600 0DE0     		b	.L261
 4297              	.L262:
 943:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4298              		.loc 1 943 0 discriminator 3
 4299 0602 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4300 0604 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4301 0606 7232     		adds	r2, r2, #114
 4302 0608 9C49     		ldr	r1, .L495
 4303 060a 8A5C     		ldrb	r2, [r1, r2]
 4304 060c D1B2     		uxtb	r1, r2
 4305 060e 9C4A     		ldr	r2, .L495+4
 4306 0610 1344     		add	r3, r3, r2
 4307 0612 0A46     		mov	r2, r1
 4308 0614 83F85420 		strb	r2, [r3, #84]
 942:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
 4309              		.loc 1 942 0 discriminator 3
 4310 0618 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4311 061a 0133     		adds	r3, r3, #1
 4312 061c FB73     		strb	r3, [r7, #15]
 4313              	.L261:
 942:.\Protocolo.c **** 								lado1.ppu[2][x]=Surtidor_rxBuffer[x+114];
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 96


 4314              		.loc 1 942 0 is_stmt 0 discriminator 1
 4315 061e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4316 0620 042B     		cmp	r3, #4
 4317 0622 EED9     		bls	.L262
 944:.\Protocolo.c **** 							}
 945:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4318              		.loc 1 945 0 is_stmt 1
 4319 0624 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 946:.\Protocolo.c ****     						return 3;                            
 4320              		.loc 1 946 0
 4321 0628 0323     		movs	r3, #3
 4322 062a 01F012B9 		b	.L199
 4323              	.L248:
 947:.\Protocolo.c **** 						}
 948:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4324              		.loc 1 948 0
 4325 062e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 949:.\Protocolo.c **** 						return 1;			
 4326              		.loc 1 949 0
 4327 0632 0123     		movs	r3, #1
 4328 0634 01F00DB9 		b	.L199
 4329              	.L228:
 950:.\Protocolo.c **** 					}
 951:.\Protocolo.c **** 					else{
 952:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4330              		.loc 1 952 0
 4331 0638 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 953:.\Protocolo.c **** 						return 0;					
 4332              		.loc 1 953 0
 4333 063c 0023     		movs	r3, #0
 4334 063e 01F008B9 		b	.L199
 4335              	.L227:
 954:.\Protocolo.c **** 					}
 955:.\Protocolo.c **** 				}
 956:.\Protocolo.c **** 				else{
 957:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4336              		.loc 1 957 0
 4337 0642 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 958:.\Protocolo.c **** 					return 0;		
 4338              		.loc 1 958 0
 4339 0646 0023     		movs	r3, #0
 4340 0648 01F003B9 		b	.L199
 4341              	.L186:
 959:.\Protocolo.c **** 				}	
 960:.\Protocolo.c **** 			}
 961:.\Protocolo.c **** 		}
 962:.\Protocolo.c **** 		else if(dir==lado2.dir){
 4342              		.loc 1 962 0
 4343 064c 8D4B     		ldr	r3, .L495+8
 4344 064e 1B78     		ldrb	r3, [r3]
 4345 0650 DBB2     		uxtb	r3, r3
 4346 0652 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4347 0654 9A42     		cmp	r2, r3
 4348 0656 40F00183 		bne	.L263
 963:.\Protocolo.c **** 			if(version[1]!=7){
 4349              		.loc 1 963 0
 4350 065a 8B4B     		ldr	r3, .L495+12
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 97


 4351 065c 5B78     		ldrb	r3, [r3, #1]
 4352 065e DBB2     		uxtb	r3, r3
 4353 0660 072B     		cmp	r3, #7
 4354 0662 00F07F81 		beq	.L264
 964:.\Protocolo.c **** 				CyDelay(900);
 4355              		.loc 1 964 0
 4356 0666 4FF46170 		mov	r0, #900
 4357 066a FFF7FEFF 		bl	CyDelay
 965:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4358              		.loc 1 965 0
 4359 066e FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4360 0672 0346     		mov	r3, r0
 4361 0674 FB73     		strb	r3, [r7, #15]
 966:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){				
 4362              		.loc 1 966 0
 4363 0676 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4364 0678 222B     		cmp	r3, #34
 4365 067a 06D0     		beq	.L265
 4366              		.loc 1 966 0 is_stmt 0 discriminator 1
 4367 067c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4368 067e 402B     		cmp	r3, #64
 4369 0680 03D0     		beq	.L265
 4370              		.loc 1 966 0 discriminator 2
 4371 0682 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4372 0684 5E2B     		cmp	r3, #94
 4373 0686 40F06881 		bne	.L266
 4374              	.L265:
 967:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4375              		.loc 1 967 0 is_stmt 1
 4376 068a 7C4B     		ldr	r3, .L495
 4377 068c 1B78     		ldrb	r3, [r3]
 4378 068e DBB2     		uxtb	r3, r3
 4379 0690 FF2B     		cmp	r3, #255
 4380 0692 40F05D81 		bne	.L267
 4381              		.loc 1 967 0 is_stmt 0 discriminator 1
 4382 0696 794B     		ldr	r3, .L495
 4383 0698 5B78     		ldrb	r3, [r3, #1]
 4384 069a DBB2     		uxtb	r3, r3
 4385 069c F62B     		cmp	r3, #246
 4386 069e 40F05781 		bne	.L267
 4387              		.loc 1 967 0 discriminator 2
 4388 06a2 764B     		ldr	r3, .L495
 4389 06a4 DB78     		ldrb	r3, [r3, #3]
 4390 06a6 DBB2     		uxtb	r3, r3
 4391 06a8 F92B     		cmp	r3, #249
 4392 06aa 40F05181 		bne	.L267
 968:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4393              		.loc 1 968 0 is_stmt 1
 4394 06ae 0023     		movs	r3, #0
 4395 06b0 BB73     		strb	r3, [r7, #14]
 4396 06b2 16E0     		b	.L268
 4397              	.L271:
 969:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4398              		.loc 1 969 0
 4399 06b4 0023     		movs	r3, #0
 4400 06b6 FB73     		strb	r3, [r7, #15]
 4401 06b8 0DE0     		b	.L269
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 98


 4402              	.L270:
 970:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4403              		.loc 1 970 0 discriminator 3
 4404 06ba BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4405 06bc F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4406 06be 7148     		ldr	r0, .L495+8
 4407 06c0 1346     		mov	r3, r2
 4408 06c2 5B00     		lsls	r3, r3, #1
 4409 06c4 1344     		add	r3, r3, r2
 4410 06c6 DB00     		lsls	r3, r3, #3
 4411 06c8 0B44     		add	r3, r3, r1
 4412 06ca 0344     		add	r3, r3, r0
 4413 06cc 0022     		movs	r2, #0
 4414 06ce 9A70     		strb	r2, [r3, #2]
 969:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4415              		.loc 1 969 0 discriminator 3
 4416 06d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4417 06d2 0133     		adds	r3, r3, #1
 4418 06d4 FB73     		strb	r3, [r7, #15]
 4419              	.L269:
 969:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4420              		.loc 1 969 0 is_stmt 0 discriminator 1
 4421 06d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4422 06d8 172B     		cmp	r3, #23
 4423 06da EED9     		bls	.L270
 968:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4424              		.loc 1 968 0 is_stmt 1 discriminator 2
 4425 06dc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4426 06de 0133     		adds	r3, r3, #1
 4427 06e0 BB73     		strb	r3, [r7, #14]
 4428              	.L268:
 968:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4429              		.loc 1 968 0 is_stmt 0 discriminator 1
 4430 06e2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4431 06e4 022B     		cmp	r3, #2
 4432 06e6 E5D9     		bls	.L271
 971:.\Protocolo.c ****                     		}
 972:.\Protocolo.c ****                     	}                        
 973:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4433              		.loc 1 973 0 is_stmt 1
 4434 06e8 0023     		movs	r3, #0
 4435 06ea FB73     		strb	r3, [r7, #15]
 4436 06ec 0CE0     		b	.L272
 4437              	.L273:
 974:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4438              		.loc 1 974 0 discriminator 3
 4439 06ee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4440 06f0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4441 06f2 0432     		adds	r2, r2, #4
 4442 06f4 6149     		ldr	r1, .L495
 4443 06f6 8A5C     		ldrb	r2, [r1, r2]
 4444 06f8 D1B2     		uxtb	r1, r2
 4445 06fa 624A     		ldr	r2, .L495+8
 4446 06fc 1344     		add	r3, r3, r2
 4447 06fe 0A46     		mov	r2, r1
 4448 0700 9A70     		strb	r2, [r3, #2]
 973:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 99


 4449              		.loc 1 973 0 discriminator 3
 4450 0702 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4451 0704 0133     		adds	r3, r3, #1
 4452 0706 FB73     		strb	r3, [r7, #15]
 4453              	.L272:
 973:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4454              		.loc 1 973 0 is_stmt 0 discriminator 1
 4455 0708 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4456 070a 072B     		cmp	r3, #7
 4457 070c EFD9     		bls	.L273
 975:.\Protocolo.c **** 						}
 976:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 4458              		.loc 1 976 0 is_stmt 1
 4459 070e 0023     		movs	r3, #0
 4460 0710 FB73     		strb	r3, [r7, #15]
 4461 0712 17E0     		b	.L274
 4462              	.L276:
 977:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 4463              		.loc 1 977 0
 4464 0714 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4465 0716 0D33     		adds	r3, r3, #13
 4466 0718 584A     		ldr	r2, .L495
 4467 071a D35C     		ldrb	r3, [r2, r3]
 4468 071c DBB2     		uxtb	r3, r3
 4469 071e 002B     		cmp	r3, #0
 4470 0720 02D1     		bne	.L275
 978:.\Protocolo.c ****                                 return 0;
 4471              		.loc 1 978 0
 4472 0722 0023     		movs	r3, #0
 4473 0724 01F095B8 		b	.L199
 4474              	.L275:
 979:.\Protocolo.c ****                             }                             
 980:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 4475              		.loc 1 980 0 discriminator 2
 4476 0728 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4477 072a 0C33     		adds	r3, r3, #12
 4478 072c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4479 072e 0D32     		adds	r2, r2, #13
 4480 0730 5249     		ldr	r1, .L495
 4481 0732 8A5C     		ldrb	r2, [r1, r2]
 4482 0734 D1B2     		uxtb	r1, r2
 4483 0736 534A     		ldr	r2, .L495+8
 4484 0738 1344     		add	r3, r3, r2
 4485 073a 0A46     		mov	r2, r1
 4486 073c 9A70     		strb	r2, [r3, #2]
 976:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 4487              		.loc 1 976 0 discriminator 2
 4488 073e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4489 0740 0133     		adds	r3, r3, #1
 4490 0742 FB73     		strb	r3, [r7, #15]
 4491              	.L274:
 976:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 4492              		.loc 1 976 0 is_stmt 0 discriminator 1
 4493 0744 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4494 0746 072B     		cmp	r3, #7
 4495 0748 E4D9     		bls	.L276
 981:.\Protocolo.c **** 						}
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 100


 982:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 4496              		.loc 1 982 0 is_stmt 1
 4497 074a 0023     		movs	r3, #0
 4498 074c FB73     		strb	r3, [r7, #15]
 4499 074e 0DE0     		b	.L277
 4500              	.L278:
 983:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4501              		.loc 1 983 0 discriminator 3
 4502 0750 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4503 0752 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4504 0754 1632     		adds	r2, r2, #22
 4505 0756 4949     		ldr	r1, .L495
 4506 0758 8A5C     		ldrb	r2, [r1, r2]
 4507 075a D1B2     		uxtb	r1, r2
 4508 075c 494A     		ldr	r2, .L495+8
 4509 075e 1344     		add	r3, r3, r2
 4510 0760 0A46     		mov	r2, r1
 4511 0762 83F84A20 		strb	r2, [r3, #74]
 982:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4512              		.loc 1 982 0 discriminator 3
 4513 0766 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4514 0768 0133     		adds	r3, r3, #1
 4515 076a FB73     		strb	r3, [r7, #15]
 4516              	.L277:
 982:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+22];
 4517              		.loc 1 982 0 is_stmt 0 discriminator 1
 4518 076c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4519 076e 032B     		cmp	r3, #3
 4520 0770 EED9     		bls	.L278
 984:.\Protocolo.c **** 						}				
 985:.\Protocolo.c **** 						if(nmangueras==2){
 4521              		.loc 1 985 0 is_stmt 1
 4522 0772 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4523 0774 022B     		cmp	r3, #2
 4524 0776 49D1     		bne	.L279
 986:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4525              		.loc 1 986 0
 4526 0778 0023     		movs	r3, #0
 4527 077a FB73     		strb	r3, [r7, #15]
 4528 077c 0CE0     		b	.L280
 4529              	.L281:
 987:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4530              		.loc 1 987 0 discriminator 3
 4531 077e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4532 0780 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4533 0782 2232     		adds	r2, r2, #34
 4534 0784 3D49     		ldr	r1, .L495
 4535 0786 8A5C     		ldrb	r2, [r1, r2]
 4536 0788 D1B2     		uxtb	r1, r2
 4537 078a 3E4A     		ldr	r2, .L495+8
 4538 078c 1344     		add	r3, r3, r2
 4539 078e 0A46     		mov	r2, r1
 4540 0790 9A76     		strb	r2, [r3, #26]
 986:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4541              		.loc 1 986 0 discriminator 3
 4542 0792 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4543 0794 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 101


 4544 0796 FB73     		strb	r3, [r7, #15]
 4545              	.L280:
 986:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4546              		.loc 1 986 0 is_stmt 0 discriminator 1
 4547 0798 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4548 079a 072B     		cmp	r3, #7
 4549 079c EFD9     		bls	.L281
 988:.\Protocolo.c **** 							}
 989:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4550              		.loc 1 989 0 is_stmt 1
 4551 079e 0023     		movs	r3, #0
 4552 07a0 FB73     		strb	r3, [r7, #15]
 4553 07a2 17E0     		b	.L282
 4554              	.L284:
 990:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 4555              		.loc 1 990 0
 4556 07a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4557 07a6 2B33     		adds	r3, r3, #43
 4558 07a8 344A     		ldr	r2, .L495
 4559 07aa D35C     		ldrb	r3, [r2, r3]
 4560 07ac DBB2     		uxtb	r3, r3
 4561 07ae 002B     		cmp	r3, #0
 4562 07b0 02D1     		bne	.L283
 991:.\Protocolo.c ****                                     return 0;
 4563              		.loc 1 991 0
 4564 07b2 0023     		movs	r3, #0
 4565 07b4 01F04DB8 		b	.L199
 4566              	.L283:
 992:.\Protocolo.c ****                                 }                                 
 993:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4567              		.loc 1 993 0 discriminator 2
 4568 07b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4569 07ba 0C33     		adds	r3, r3, #12
 4570 07bc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4571 07be 2B32     		adds	r2, r2, #43
 4572 07c0 2E49     		ldr	r1, .L495
 4573 07c2 8A5C     		ldrb	r2, [r1, r2]
 4574 07c4 D1B2     		uxtb	r1, r2
 4575 07c6 2F4A     		ldr	r2, .L495+8
 4576 07c8 1344     		add	r3, r3, r2
 4577 07ca 0A46     		mov	r2, r1
 4578 07cc 9A76     		strb	r2, [r3, #26]
 989:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 4579              		.loc 1 989 0 discriminator 2
 4580 07ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4581 07d0 0133     		adds	r3, r3, #1
 4582 07d2 FB73     		strb	r3, [r7, #15]
 4583              	.L282:
 989:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 4584              		.loc 1 989 0 is_stmt 0 discriminator 1
 4585 07d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4586 07d6 072B     		cmp	r3, #7
 4587 07d8 E4D9     		bls	.L284
 994:.\Protocolo.c **** 							}
 995:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4588              		.loc 1 995 0 is_stmt 1
 4589 07da 0023     		movs	r3, #0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 102


 4590 07dc FB73     		strb	r3, [r7, #15]
 4591 07de 0DE0     		b	.L285
 4592              	.L286:
 996:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4593              		.loc 1 996 0 discriminator 3
 4594 07e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4595 07e2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4596 07e4 3432     		adds	r2, r2, #52
 4597 07e6 2549     		ldr	r1, .L495
 4598 07e8 8A5C     		ldrb	r2, [r1, r2]
 4599 07ea D1B2     		uxtb	r1, r2
 4600 07ec 254A     		ldr	r2, .L495+8
 4601 07ee 1344     		add	r3, r3, r2
 4602 07f0 0A46     		mov	r2, r1
 4603 07f2 83F84F20 		strb	r2, [r3, #79]
 995:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4604              		.loc 1 995 0 discriminator 3
 4605 07f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4606 07f8 0133     		adds	r3, r3, #1
 4607 07fa FB73     		strb	r3, [r7, #15]
 4608              	.L285:
 995:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4609              		.loc 1 995 0 is_stmt 0 discriminator 1
 4610 07fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4611 07fe 032B     		cmp	r3, #3
 4612 0800 EED9     		bls	.L286
 997:.\Protocolo.c **** 							}
 998:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4613              		.loc 1 998 0 is_stmt 1
 4614 0802 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
 999:.\Protocolo.c ****     						return 2;                            
 4615              		.loc 1 999 0
 4616 0806 0223     		movs	r3, #2
 4617 0808 01F023B8 		b	.L199
 4618              	.L279:
1000:.\Protocolo.c **** 						}
1001:.\Protocolo.c **** 						if(nmangueras==3){
 4619              		.loc 1 1001 0
 4620 080c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4621 080e 032B     		cmp	r3, #3
 4622 0810 40F09980 		bne	.L287
1002:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4623              		.loc 1 1002 0
 4624 0814 0023     		movs	r3, #0
 4625 0816 FB73     		strb	r3, [r7, #15]
 4626 0818 0CE0     		b	.L288
 4627              	.L289:
1003:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+34];
 4628              		.loc 1 1003 0 discriminator 3
 4629 081a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4630 081c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4631 081e 2232     		adds	r2, r2, #34
 4632 0820 1649     		ldr	r1, .L495
 4633 0822 8A5C     		ldrb	r2, [r1, r2]
 4634 0824 D1B2     		uxtb	r1, r2
 4635 0826 174A     		ldr	r2, .L495+8
 4636 0828 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 103


 4637 082a 0A46     		mov	r2, r1
 4638 082c 9A76     		strb	r2, [r3, #26]
1002:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4639              		.loc 1 1002 0 discriminator 3
 4640 082e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4641 0830 0133     		adds	r3, r3, #1
 4642 0832 FB73     		strb	r3, [r7, #15]
 4643              	.L288:
1002:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4644              		.loc 1 1002 0 is_stmt 0 discriminator 1
 4645 0834 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4646 0836 072B     		cmp	r3, #7
 4647 0838 EFD9     		bls	.L289
1004:.\Protocolo.c **** 							}
1005:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4648              		.loc 1 1005 0 is_stmt 1
 4649 083a 0023     		movs	r3, #0
 4650 083c FB73     		strb	r3, [r7, #15]
 4651 083e 17E0     		b	.L290
 4652              	.L292:
1006:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 4653              		.loc 1 1006 0
 4654 0840 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4655 0842 2B33     		adds	r3, r3, #43
 4656 0844 0D4A     		ldr	r2, .L495
 4657 0846 D35C     		ldrb	r3, [r2, r3]
 4658 0848 DBB2     		uxtb	r3, r3
 4659 084a 002B     		cmp	r3, #0
 4660 084c 02D1     		bne	.L291
1007:.\Protocolo.c ****                                     return 0;
 4661              		.loc 1 1007 0
 4662 084e 0023     		movs	r3, #0
 4663 0850 00F0FFBF 		b	.L199
 4664              	.L291:
1008:.\Protocolo.c ****                                 }                                 
1009:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 4665              		.loc 1 1009 0 discriminator 2
 4666 0854 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4667 0856 0C33     		adds	r3, r3, #12
 4668 0858 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4669 085a 2B32     		adds	r2, r2, #43
 4670 085c 0749     		ldr	r1, .L495
 4671 085e 8A5C     		ldrb	r2, [r1, r2]
 4672 0860 D1B2     		uxtb	r1, r2
 4673 0862 084A     		ldr	r2, .L495+8
 4674 0864 1344     		add	r3, r3, r2
 4675 0866 0A46     		mov	r2, r1
 4676 0868 9A76     		strb	r2, [r3, #26]
1005:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 4677              		.loc 1 1005 0 discriminator 2
 4678 086a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4679 086c 0133     		adds	r3, r3, #1
 4680 086e FB73     		strb	r3, [r7, #15]
 4681              	.L290:
1005:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 4682              		.loc 1 1005 0 is_stmt 0 discriminator 1
 4683 0870 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 104


 4684 0872 072B     		cmp	r3, #7
 4685 0874 E4D9     		bls	.L292
1010:.\Protocolo.c **** 							}
1011:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4686              		.loc 1 1011 0 is_stmt 1
 4687 0876 0023     		movs	r3, #0
 4688 0878 FB73     		strb	r3, [r7, #15]
 4689 087a 15E0     		b	.L293
 4690              	.L496:
 4691              		.align	2
 4692              	.L495:
 4693 087c 00000000 		.word	Surtidor_rxBuffer
 4694 0880 00000000 		.word	lado1
 4695 0884 00000000 		.word	lado2
 4696 0888 00000000 		.word	version
 4697              	.L294:
1012:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4698              		.loc 1 1012 0 discriminator 3
 4699 088c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4700 088e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4701 0890 3432     		adds	r2, r2, #52
 4702 0892 B049     		ldr	r1, .L497
 4703 0894 8A5C     		ldrb	r2, [r1, r2]
 4704 0896 D1B2     		uxtb	r1, r2
 4705 0898 AF4A     		ldr	r2, .L497+4
 4706 089a 1344     		add	r3, r3, r2
 4707 089c 0A46     		mov	r2, r1
 4708 089e 83F84F20 		strb	r2, [r3, #79]
1011:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4709              		.loc 1 1011 0 discriminator 3
 4710 08a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4711 08a4 0133     		adds	r3, r3, #1
 4712 08a6 FB73     		strb	r3, [r7, #15]
 4713              	.L293:
1011:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+52];
 4714              		.loc 1 1011 0 is_stmt 0 discriminator 1
 4715 08a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4716 08aa 032B     		cmp	r3, #3
 4717 08ac EED9     		bls	.L294
1013:.\Protocolo.c **** 							}						
1014:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4718              		.loc 1 1014 0 is_stmt 1
 4719 08ae 0023     		movs	r3, #0
 4720 08b0 FB73     		strb	r3, [r7, #15]
 4721 08b2 0DE0     		b	.L295
 4722              	.L296:
1015:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4723              		.loc 1 1015 0 discriminator 3
 4724 08b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4725 08b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4726 08b8 4032     		adds	r2, r2, #64
 4727 08ba A649     		ldr	r1, .L497
 4728 08bc 8A5C     		ldrb	r2, [r1, r2]
 4729 08be D1B2     		uxtb	r1, r2
 4730 08c0 A54A     		ldr	r2, .L497+4
 4731 08c2 1344     		add	r3, r3, r2
 4732 08c4 0A46     		mov	r2, r1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 105


 4733 08c6 83F83220 		strb	r2, [r3, #50]
1014:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4734              		.loc 1 1014 0 discriminator 3
 4735 08ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4736 08cc 0133     		adds	r3, r3, #1
 4737 08ce FB73     		strb	r3, [r7, #15]
 4738              	.L295:
1014:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+64];
 4739              		.loc 1 1014 0 is_stmt 0 discriminator 1
 4740 08d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4741 08d2 072B     		cmp	r3, #7
 4742 08d4 EED9     		bls	.L296
1016:.\Protocolo.c **** 							}
1017:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 4743              		.loc 1 1017 0 is_stmt 1
 4744 08d6 0023     		movs	r3, #0
 4745 08d8 FB73     		strb	r3, [r7, #15]
 4746 08da 18E0     		b	.L297
 4747              	.L299:
1018:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 4748              		.loc 1 1018 0
 4749 08dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4750 08de 4933     		adds	r3, r3, #73
 4751 08e0 9C4A     		ldr	r2, .L497
 4752 08e2 D35C     		ldrb	r3, [r2, r3]
 4753 08e4 DBB2     		uxtb	r3, r3
 4754 08e6 002B     		cmp	r3, #0
 4755 08e8 02D1     		bne	.L298
1019:.\Protocolo.c ****                                     return 0;
 4756              		.loc 1 1019 0
 4757 08ea 0023     		movs	r3, #0
 4758 08ec 00F0B1BF 		b	.L199
 4759              	.L298:
1020:.\Protocolo.c ****                                 }                                 
1021:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 4760              		.loc 1 1021 0 discriminator 2
 4761 08f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4762 08f2 0C33     		adds	r3, r3, #12
 4763 08f4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4764 08f6 4932     		adds	r2, r2, #73
 4765 08f8 9649     		ldr	r1, .L497
 4766 08fa 8A5C     		ldrb	r2, [r1, r2]
 4767 08fc D1B2     		uxtb	r1, r2
 4768 08fe 964A     		ldr	r2, .L497+4
 4769 0900 1344     		add	r3, r3, r2
 4770 0902 0A46     		mov	r2, r1
 4771 0904 83F83220 		strb	r2, [r3, #50]
1017:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 4772              		.loc 1 1017 0 discriminator 2
 4773 0908 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4774 090a 0133     		adds	r3, r3, #1
 4775 090c FB73     		strb	r3, [r7, #15]
 4776              	.L297:
1017:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 4777              		.loc 1 1017 0 is_stmt 0 discriminator 1
 4778 090e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4779 0910 072B     		cmp	r3, #7
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 106


 4780 0912 E3D9     		bls	.L299
1022:.\Protocolo.c **** 							}
1023:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 4781              		.loc 1 1023 0 is_stmt 1
 4782 0914 0023     		movs	r3, #0
 4783 0916 FB73     		strb	r3, [r7, #15]
 4784 0918 0DE0     		b	.L300
 4785              	.L301:
1024:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4786              		.loc 1 1024 0 discriminator 3
 4787 091a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4788 091c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4789 091e 5232     		adds	r2, r2, #82
 4790 0920 8C49     		ldr	r1, .L497
 4791 0922 8A5C     		ldrb	r2, [r1, r2]
 4792 0924 D1B2     		uxtb	r1, r2
 4793 0926 8C4A     		ldr	r2, .L497+4
 4794 0928 1344     		add	r3, r3, r2
 4795 092a 0A46     		mov	r2, r1
 4796 092c 83F85420 		strb	r2, [r3, #84]
1023:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4797              		.loc 1 1023 0 discriminator 3
 4798 0930 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4799 0932 0133     		adds	r3, r3, #1
 4800 0934 FB73     		strb	r3, [r7, #15]
 4801              	.L300:
1023:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+82];
 4802              		.loc 1 1023 0 is_stmt 0 discriminator 1
 4803 0936 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4804 0938 032B     		cmp	r3, #3
 4805 093a EED9     		bls	.L301
1025:.\Protocolo.c **** 							}
1026:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 4806              		.loc 1 1026 0 is_stmt 1
 4807 093c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1027:.\Protocolo.c ****     						return 3;                            
 4808              		.loc 1 1027 0
 4809 0940 0323     		movs	r3, #3
 4810 0942 00F086BF 		b	.L199
 4811              	.L287:
1028:.\Protocolo.c **** 						}
1029:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4812              		.loc 1 1029 0
 4813 0946 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1030:.\Protocolo.c **** 						return 1;			
 4814              		.loc 1 1030 0
 4815 094a 0123     		movs	r3, #1
 4816 094c 00F081BF 		b	.L199
 4817              	.L267:
1031:.\Protocolo.c **** 					}
1032:.\Protocolo.c **** 					else{
1033:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 4818              		.loc 1 1033 0
 4819 0950 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1034:.\Protocolo.c **** 						return 0;		
 4820              		.loc 1 1034 0
 4821 0954 0023     		movs	r3, #0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 107


 4822 0956 00F07CBF 		b	.L199
 4823              	.L266:
1035:.\Protocolo.c **** 					}
1036:.\Protocolo.c **** 				}
1037:.\Protocolo.c **** 				else{
1038:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 4824              		.loc 1 1038 0
 4825 095a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1039:.\Protocolo.c **** 					return 0;		
 4826              		.loc 1 1039 0
 4827 095e 0023     		movs	r3, #0
 4828 0960 00F077BF 		b	.L199
 4829              	.L264:
1040:.\Protocolo.c **** 				}				
1041:.\Protocolo.c **** 			}
1042:.\Protocolo.c **** 			else{
1043:.\Protocolo.c **** 				CyDelay(900);
 4830              		.loc 1 1043 0
 4831 0964 4FF46170 		mov	r0, #900
 4832 0968 FFF7FEFF 		bl	CyDelay
1044:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 4833              		.loc 1 1044 0
 4834 096c FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 4835 0970 0346     		mov	r3, r0
 4836 0972 FB73     		strb	r3, [r7, #15]
1045:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){					
 4837              		.loc 1 1045 0
 4838 0974 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4839 0976 2E2B     		cmp	r3, #46
 4840 0978 06D0     		beq	.L302
 4841              		.loc 1 1045 0 is_stmt 0 discriminator 1
 4842 097a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4843 097c 582B     		cmp	r3, #88
 4844 097e 03D0     		beq	.L302
 4845              		.loc 1 1045 0 discriminator 2
 4846 0980 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4847 0982 822B     		cmp	r3, #130
 4848 0984 40F06581 		bne	.L303
 4849              	.L302:
1046:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 4850              		.loc 1 1046 0 is_stmt 1
 4851 0988 724B     		ldr	r3, .L497
 4852 098a 1B78     		ldrb	r3, [r3]
 4853 098c DBB2     		uxtb	r3, r3
 4854 098e FF2B     		cmp	r3, #255
 4855 0990 40F05A81 		bne	.L304
 4856              		.loc 1 1046 0 is_stmt 0 discriminator 1
 4857 0994 6F4B     		ldr	r3, .L497
 4858 0996 5B78     		ldrb	r3, [r3, #1]
 4859 0998 DBB2     		uxtb	r3, r3
 4860 099a F62B     		cmp	r3, #246
 4861 099c 40F05481 		bne	.L304
 4862              		.loc 1 1046 0 discriminator 2
 4863 09a0 6C4B     		ldr	r3, .L497
 4864 09a2 DB78     		ldrb	r3, [r3, #3]
 4865 09a4 DBB2     		uxtb	r3, r3
 4866 09a6 F92B     		cmp	r3, #249
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 108


 4867 09a8 40F04E81 		bne	.L304
1047:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4868              		.loc 1 1047 0 is_stmt 1
 4869 09ac 0023     		movs	r3, #0
 4870 09ae BB73     		strb	r3, [r7, #14]
 4871 09b0 16E0     		b	.L305
 4872              	.L308:
1048:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4873              		.loc 1 1048 0
 4874 09b2 0023     		movs	r3, #0
 4875 09b4 FB73     		strb	r3, [r7, #15]
 4876 09b6 0DE0     		b	.L306
 4877              	.L307:
1049:.\Protocolo.c ****                     			lado2.totales[y][x]=0;
 4878              		.loc 1 1049 0 discriminator 3
 4879 09b8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 4880 09ba F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 4881 09bc 6648     		ldr	r0, .L497+4
 4882 09be 1346     		mov	r3, r2
 4883 09c0 5B00     		lsls	r3, r3, #1
 4884 09c2 1344     		add	r3, r3, r2
 4885 09c4 DB00     		lsls	r3, r3, #3
 4886 09c6 0B44     		add	r3, r3, r1
 4887 09c8 0344     		add	r3, r3, r0
 4888 09ca 0022     		movs	r2, #0
 4889 09cc 9A70     		strb	r2, [r3, #2]
1048:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4890              		.loc 1 1048 0 discriminator 3
 4891 09ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4892 09d0 0133     		adds	r3, r3, #1
 4893 09d2 FB73     		strb	r3, [r7, #15]
 4894              	.L306:
1048:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 4895              		.loc 1 1048 0 is_stmt 0 discriminator 1
 4896 09d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4897 09d6 172B     		cmp	r3, #23
 4898 09d8 EED9     		bls	.L307
1047:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4899              		.loc 1 1047 0 is_stmt 1 discriminator 2
 4900 09da BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4901 09dc 0133     		adds	r3, r3, #1
 4902 09de BB73     		strb	r3, [r7, #14]
 4903              	.L305:
1047:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 4904              		.loc 1 1047 0 is_stmt 0 discriminator 1
 4905 09e0 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4906 09e2 022B     		cmp	r3, #2
 4907 09e4 E5D9     		bls	.L308
1050:.\Protocolo.c ****                     		}
1051:.\Protocolo.c ****                     	}                         
1052:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4908              		.loc 1 1052 0 is_stmt 1
 4909 09e6 0023     		movs	r3, #0
 4910 09e8 FB73     		strb	r3, [r7, #15]
 4911 09ea 0CE0     		b	.L309
 4912              	.L310:
1053:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 109


 4913              		.loc 1 1053 0 discriminator 3
 4914 09ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4915 09ee FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4916 09f0 0432     		adds	r2, r2, #4
 4917 09f2 5849     		ldr	r1, .L497
 4918 09f4 8A5C     		ldrb	r2, [r1, r2]
 4919 09f6 D1B2     		uxtb	r1, r2
 4920 09f8 574A     		ldr	r2, .L497+4
 4921 09fa 1344     		add	r3, r3, r2
 4922 09fc 0A46     		mov	r2, r1
 4923 09fe 9A70     		strb	r2, [r3, #2]
1052:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4924              		.loc 1 1052 0 discriminator 3
 4925 0a00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4926 0a02 0133     		adds	r3, r3, #1
 4927 0a04 FB73     		strb	r3, [r7, #15]
 4928              	.L309:
1052:.\Protocolo.c **** 							lado2.totales[0][x]=Surtidor_rxBuffer[x+4];
 4929              		.loc 1 1052 0 is_stmt 0 discriminator 1
 4930 0a06 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4931 0a08 0B2B     		cmp	r3, #11
 4932 0a0a EFD9     		bls	.L310
1054:.\Protocolo.c **** 						}
1055:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 4933              		.loc 1 1055 0 is_stmt 1
 4934 0a0c 0023     		movs	r3, #0
 4935 0a0e FB73     		strb	r3, [r7, #15]
 4936 0a10 17E0     		b	.L311
 4937              	.L313:
1056:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 4938              		.loc 1 1056 0
 4939 0a12 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4940 0a14 1133     		adds	r3, r3, #17
 4941 0a16 4F4A     		ldr	r2, .L497
 4942 0a18 D35C     		ldrb	r3, [r2, r3]
 4943 0a1a DBB2     		uxtb	r3, r3
 4944 0a1c 002B     		cmp	r3, #0
 4945 0a1e 02D1     		bne	.L312
1057:.\Protocolo.c ****                                 return 0;
 4946              		.loc 1 1057 0
 4947 0a20 0023     		movs	r3, #0
 4948 0a22 00F016BF 		b	.L199
 4949              	.L312:
1058:.\Protocolo.c ****                             }                             
1059:.\Protocolo.c **** 							lado2.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 4950              		.loc 1 1059 0 discriminator 2
 4951 0a26 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4952 0a28 0C33     		adds	r3, r3, #12
 4953 0a2a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4954 0a2c 1132     		adds	r2, r2, #17
 4955 0a2e 4949     		ldr	r1, .L497
 4956 0a30 8A5C     		ldrb	r2, [r1, r2]
 4957 0a32 D1B2     		uxtb	r1, r2
 4958 0a34 484A     		ldr	r2, .L497+4
 4959 0a36 1344     		add	r3, r3, r2
 4960 0a38 0A46     		mov	r2, r1
 4961 0a3a 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 110


1055:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 4962              		.loc 1 1055 0 discriminator 2
 4963 0a3c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4964 0a3e 0133     		adds	r3, r3, #1
 4965 0a40 FB73     		strb	r3, [r7, #15]
 4966              	.L311:
1055:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 4967              		.loc 1 1055 0 is_stmt 0 discriminator 1
 4968 0a42 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4969 0a44 0B2B     		cmp	r3, #11
 4970 0a46 E4D9     		bls	.L313
1060:.\Protocolo.c **** 						}
1061:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 4971              		.loc 1 1061 0 is_stmt 1
 4972 0a48 0023     		movs	r3, #0
 4973 0a4a FB73     		strb	r3, [r7, #15]
 4974 0a4c 0DE0     		b	.L314
 4975              	.L315:
1062:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 4976              		.loc 1 1062 0 discriminator 3
 4977 0a4e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4978 0a50 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4979 0a52 1E32     		adds	r2, r2, #30
 4980 0a54 3F49     		ldr	r1, .L497
 4981 0a56 8A5C     		ldrb	r2, [r1, r2]
 4982 0a58 D1B2     		uxtb	r1, r2
 4983 0a5a 3F4A     		ldr	r2, .L497+4
 4984 0a5c 1344     		add	r3, r3, r2
 4985 0a5e 0A46     		mov	r2, r1
 4986 0a60 83F84A20 		strb	r2, [r3, #74]
1061:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 4987              		.loc 1 1061 0 discriminator 3
 4988 0a64 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4989 0a66 0133     		adds	r3, r3, #1
 4990 0a68 FB73     		strb	r3, [r7, #15]
 4991              	.L314:
1061:.\Protocolo.c **** 							lado2.ppu[0][x]=Surtidor_rxBuffer[x+30];
 4992              		.loc 1 1061 0 is_stmt 0 discriminator 1
 4993 0a6a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4994 0a6c 042B     		cmp	r3, #4
 4995 0a6e EED9     		bls	.L315
1063:.\Protocolo.c **** 						}				
1064:.\Protocolo.c **** 						if(nmangueras==2){
 4996              		.loc 1 1064 0 is_stmt 1
 4997 0a70 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4998 0a72 022B     		cmp	r3, #2
 4999 0a74 49D1     		bne	.L316
1065:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5000              		.loc 1 1065 0
 5001 0a76 0023     		movs	r3, #0
 5002 0a78 FB73     		strb	r3, [r7, #15]
 5003 0a7a 0CE0     		b	.L317
 5004              	.L318:
1066:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5005              		.loc 1 1066 0 discriminator 3
 5006 0a7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5007 0a7e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 111


 5008 0a80 2E32     		adds	r2, r2, #46
 5009 0a82 3449     		ldr	r1, .L497
 5010 0a84 8A5C     		ldrb	r2, [r1, r2]
 5011 0a86 D1B2     		uxtb	r1, r2
 5012 0a88 334A     		ldr	r2, .L497+4
 5013 0a8a 1344     		add	r3, r3, r2
 5014 0a8c 0A46     		mov	r2, r1
 5015 0a8e 9A76     		strb	r2, [r3, #26]
1065:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5016              		.loc 1 1065 0 discriminator 3
 5017 0a90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5018 0a92 0133     		adds	r3, r3, #1
 5019 0a94 FB73     		strb	r3, [r7, #15]
 5020              	.L317:
1065:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5021              		.loc 1 1065 0 is_stmt 0 discriminator 1
 5022 0a96 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5023 0a98 0B2B     		cmp	r3, #11
 5024 0a9a EFD9     		bls	.L318
1067:.\Protocolo.c **** 							}
1068:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5025              		.loc 1 1068 0 is_stmt 1
 5026 0a9c 0023     		movs	r3, #0
 5027 0a9e FB73     		strb	r3, [r7, #15]
 5028 0aa0 17E0     		b	.L319
 5029              	.L321:
1069:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 5030              		.loc 1 1069 0
 5031 0aa2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5032 0aa4 3B33     		adds	r3, r3, #59
 5033 0aa6 2B4A     		ldr	r2, .L497
 5034 0aa8 D35C     		ldrb	r3, [r2, r3]
 5035 0aaa DBB2     		uxtb	r3, r3
 5036 0aac 002B     		cmp	r3, #0
 5037 0aae 02D1     		bne	.L320
1070:.\Protocolo.c ****                                     return 0;
 5038              		.loc 1 1070 0
 5039 0ab0 0023     		movs	r3, #0
 5040 0ab2 00F0CEBE 		b	.L199
 5041              	.L320:
1071:.\Protocolo.c ****                                 }                                 
1072:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5042              		.loc 1 1072 0 discriminator 2
 5043 0ab6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5044 0ab8 0C33     		adds	r3, r3, #12
 5045 0aba FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5046 0abc 3B32     		adds	r2, r2, #59
 5047 0abe 2549     		ldr	r1, .L497
 5048 0ac0 8A5C     		ldrb	r2, [r1, r2]
 5049 0ac2 D1B2     		uxtb	r1, r2
 5050 0ac4 244A     		ldr	r2, .L497+4
 5051 0ac6 1344     		add	r3, r3, r2
 5052 0ac8 0A46     		mov	r2, r1
 5053 0aca 9A76     		strb	r2, [r3, #26]
1068:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 5054              		.loc 1 1068 0 discriminator 2
 5055 0acc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 112


 5056 0ace 0133     		adds	r3, r3, #1
 5057 0ad0 FB73     		strb	r3, [r7, #15]
 5058              	.L319:
1068:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 5059              		.loc 1 1068 0 is_stmt 0 discriminator 1
 5060 0ad2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5061 0ad4 0B2B     		cmp	r3, #11
 5062 0ad6 E4D9     		bls	.L321
1073:.\Protocolo.c **** 							}
1074:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5063              		.loc 1 1074 0 is_stmt 1
 5064 0ad8 0023     		movs	r3, #0
 5065 0ada FB73     		strb	r3, [r7, #15]
 5066 0adc 0DE0     		b	.L322
 5067              	.L323:
1075:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5068              		.loc 1 1075 0 discriminator 3
 5069 0ade FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5070 0ae0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5071 0ae2 4832     		adds	r2, r2, #72
 5072 0ae4 1B49     		ldr	r1, .L497
 5073 0ae6 8A5C     		ldrb	r2, [r1, r2]
 5074 0ae8 D1B2     		uxtb	r1, r2
 5075 0aea 1B4A     		ldr	r2, .L497+4
 5076 0aec 1344     		add	r3, r3, r2
 5077 0aee 0A46     		mov	r2, r1
 5078 0af0 83F84F20 		strb	r2, [r3, #79]
1074:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5079              		.loc 1 1074 0 discriminator 3
 5080 0af4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5081 0af6 0133     		adds	r3, r3, #1
 5082 0af8 FB73     		strb	r3, [r7, #15]
 5083              	.L322:
1074:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5084              		.loc 1 1074 0 is_stmt 0 discriminator 1
 5085 0afa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5086 0afc 042B     		cmp	r3, #4
 5087 0afe EED9     		bls	.L323
1076:.\Protocolo.c **** 							}
1077:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5088              		.loc 1 1077 0 is_stmt 1
 5089 0b00 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1078:.\Protocolo.c ****     						return 2;                            
 5090              		.loc 1 1078 0
 5091 0b04 0223     		movs	r3, #2
 5092 0b06 00F0A4BE 		b	.L199
 5093              	.L316:
1079:.\Protocolo.c **** 						}
1080:.\Protocolo.c **** 						if(nmangueras==3){
 5094              		.loc 1 1080 0
 5095 0b0a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5096 0b0c 032B     		cmp	r3, #3
 5097 0b0e 40F09680 		bne	.L324
1081:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5098              		.loc 1 1081 0
 5099 0b12 0023     		movs	r3, #0
 5100 0b14 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 113


 5101 0b16 0CE0     		b	.L325
 5102              	.L326:
1082:.\Protocolo.c **** 								lado2.totales[1][x]=Surtidor_rxBuffer[x+46];
 5103              		.loc 1 1082 0 discriminator 3
 5104 0b18 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5105 0b1a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5106 0b1c 2E32     		adds	r2, r2, #46
 5107 0b1e 0D49     		ldr	r1, .L497
 5108 0b20 8A5C     		ldrb	r2, [r1, r2]
 5109 0b22 D1B2     		uxtb	r1, r2
 5110 0b24 0C4A     		ldr	r2, .L497+4
 5111 0b26 1344     		add	r3, r3, r2
 5112 0b28 0A46     		mov	r2, r1
 5113 0b2a 9A76     		strb	r2, [r3, #26]
1081:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5114              		.loc 1 1081 0 discriminator 3
 5115 0b2c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5116 0b2e 0133     		adds	r3, r3, #1
 5117 0b30 FB73     		strb	r3, [r7, #15]
 5118              	.L325:
1081:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5119              		.loc 1 1081 0 is_stmt 0 discriminator 1
 5120 0b32 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5121 0b34 0B2B     		cmp	r3, #11
 5122 0b36 EFD9     		bls	.L326
1083:.\Protocolo.c **** 							}
1084:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5123              		.loc 1 1084 0 is_stmt 1
 5124 0b38 0023     		movs	r3, #0
 5125 0b3a FB73     		strb	r3, [r7, #15]
 5126 0b3c 1CE0     		b	.L327
 5127              	.L329:
1085:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 5128              		.loc 1 1085 0
 5129 0b3e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5130 0b40 3B33     		adds	r3, r3, #59
 5131 0b42 044A     		ldr	r2, .L497
 5132 0b44 D35C     		ldrb	r3, [r2, r3]
 5133 0b46 DBB2     		uxtb	r3, r3
 5134 0b48 002B     		cmp	r3, #0
 5135 0b4a 07D1     		bne	.L328
1086:.\Protocolo.c ****                                     return 0;
 5136              		.loc 1 1086 0
 5137 0b4c 0023     		movs	r3, #0
 5138 0b4e 00F080BE 		b	.L199
 5139              	.L498:
 5140 0b52 00BF     		.align	2
 5141              	.L497:
 5142 0b54 00000000 		.word	Surtidor_rxBuffer
 5143 0b58 00000000 		.word	lado2
 5144              	.L328:
1087:.\Protocolo.c ****                                 }                                 
1088:.\Protocolo.c **** 								lado2.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 5145              		.loc 1 1088 0 discriminator 2
 5146 0b5c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5147 0b5e 0C33     		adds	r3, r3, #12
 5148 0b60 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 114


 5149 0b62 3B32     		adds	r2, r2, #59
 5150 0b64 B149     		ldr	r1, .L499
 5151 0b66 8A5C     		ldrb	r2, [r1, r2]
 5152 0b68 D1B2     		uxtb	r1, r2
 5153 0b6a B14A     		ldr	r2, .L499+4
 5154 0b6c 1344     		add	r3, r3, r2
 5155 0b6e 0A46     		mov	r2, r1
 5156 0b70 9A76     		strb	r2, [r3, #26]
1084:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 5157              		.loc 1 1084 0 discriminator 2
 5158 0b72 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5159 0b74 0133     		adds	r3, r3, #1
 5160 0b76 FB73     		strb	r3, [r7, #15]
 5161              	.L327:
1084:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 5162              		.loc 1 1084 0 is_stmt 0 discriminator 1
 5163 0b78 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5164 0b7a 0B2B     		cmp	r3, #11
 5165 0b7c DFD9     		bls	.L329
1089:.\Protocolo.c **** 							}
1090:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5166              		.loc 1 1090 0 is_stmt 1
 5167 0b7e 0023     		movs	r3, #0
 5168 0b80 FB73     		strb	r3, [r7, #15]
 5169 0b82 0DE0     		b	.L330
 5170              	.L331:
1091:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5171              		.loc 1 1091 0 discriminator 3
 5172 0b84 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5173 0b86 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5174 0b88 4832     		adds	r2, r2, #72
 5175 0b8a A849     		ldr	r1, .L499
 5176 0b8c 8A5C     		ldrb	r2, [r1, r2]
 5177 0b8e D1B2     		uxtb	r1, r2
 5178 0b90 A74A     		ldr	r2, .L499+4
 5179 0b92 1344     		add	r3, r3, r2
 5180 0b94 0A46     		mov	r2, r1
 5181 0b96 83F84F20 		strb	r2, [r3, #79]
1090:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5182              		.loc 1 1090 0 discriminator 3
 5183 0b9a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5184 0b9c 0133     		adds	r3, r3, #1
 5185 0b9e FB73     		strb	r3, [r7, #15]
 5186              	.L330:
1090:.\Protocolo.c **** 								lado2.ppu[1][x]=Surtidor_rxBuffer[x+72];
 5187              		.loc 1 1090 0 is_stmt 0 discriminator 1
 5188 0ba0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5189 0ba2 042B     		cmp	r3, #4
 5190 0ba4 EED9     		bls	.L331
1092:.\Protocolo.c **** 							}					
1093:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5191              		.loc 1 1093 0 is_stmt 1
 5192 0ba6 0023     		movs	r3, #0
 5193 0ba8 FB73     		strb	r3, [r7, #15]
 5194 0baa 0DE0     		b	.L332
 5195              	.L333:
1094:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 115


 5196              		.loc 1 1094 0 discriminator 3
 5197 0bac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5198 0bae FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5199 0bb0 5832     		adds	r2, r2, #88
 5200 0bb2 9E49     		ldr	r1, .L499
 5201 0bb4 8A5C     		ldrb	r2, [r1, r2]
 5202 0bb6 D1B2     		uxtb	r1, r2
 5203 0bb8 9D4A     		ldr	r2, .L499+4
 5204 0bba 1344     		add	r3, r3, r2
 5205 0bbc 0A46     		mov	r2, r1
 5206 0bbe 83F83220 		strb	r2, [r3, #50]
1093:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5207              		.loc 1 1093 0 discriminator 3
 5208 0bc2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5209 0bc4 0133     		adds	r3, r3, #1
 5210 0bc6 FB73     		strb	r3, [r7, #15]
 5211              	.L332:
1093:.\Protocolo.c **** 								lado2.totales[2][x]=Surtidor_rxBuffer[x+88];
 5212              		.loc 1 1093 0 is_stmt 0 discriminator 1
 5213 0bc8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5214 0bca 0B2B     		cmp	r3, #11
 5215 0bcc EED9     		bls	.L333
1095:.\Protocolo.c **** 							}
1096:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5216              		.loc 1 1096 0 is_stmt 1
 5217 0bce 0023     		movs	r3, #0
 5218 0bd0 FB73     		strb	r3, [r7, #15]
 5219 0bd2 18E0     		b	.L334
 5220              	.L336:
1097:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+101]==0){
 5221              		.loc 1 1097 0
 5222 0bd4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5223 0bd6 6533     		adds	r3, r3, #101
 5224 0bd8 944A     		ldr	r2, .L499
 5225 0bda D35C     		ldrb	r3, [r2, r3]
 5226 0bdc DBB2     		uxtb	r3, r3
 5227 0bde 002B     		cmp	r3, #0
 5228 0be0 02D1     		bne	.L335
1098:.\Protocolo.c ****                                     return 0;
 5229              		.loc 1 1098 0
 5230 0be2 0023     		movs	r3, #0
 5231 0be4 00F035BE 		b	.L199
 5232              	.L335:
1099:.\Protocolo.c ****                                 }                                 
1100:.\Protocolo.c **** 								lado2.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 5233              		.loc 1 1100 0 discriminator 2
 5234 0be8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5235 0bea 0C33     		adds	r3, r3, #12
 5236 0bec FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5237 0bee 6532     		adds	r2, r2, #101
 5238 0bf0 8E49     		ldr	r1, .L499
 5239 0bf2 8A5C     		ldrb	r2, [r1, r2]
 5240 0bf4 D1B2     		uxtb	r1, r2
 5241 0bf6 8E4A     		ldr	r2, .L499+4
 5242 0bf8 1344     		add	r3, r3, r2
 5243 0bfa 0A46     		mov	r2, r1
 5244 0bfc 83F83220 		strb	r2, [r3, #50]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 116


1096:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+101]==0){
 5245              		.loc 1 1096 0 discriminator 2
 5246 0c00 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5247 0c02 0133     		adds	r3, r3, #1
 5248 0c04 FB73     		strb	r3, [r7, #15]
 5249              	.L334:
1096:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+101]==0){
 5250              		.loc 1 1096 0 is_stmt 0 discriminator 1
 5251 0c06 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5252 0c08 0B2B     		cmp	r3, #11
 5253 0c0a E3D9     		bls	.L336
1101:.\Protocolo.c **** 							}
1102:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 5254              		.loc 1 1102 0 is_stmt 1
 5255 0c0c 0023     		movs	r3, #0
 5256 0c0e FB73     		strb	r3, [r7, #15]
 5257 0c10 0DE0     		b	.L337
 5258              	.L338:
1103:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5259              		.loc 1 1103 0 discriminator 3
 5260 0c12 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5261 0c14 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5262 0c16 7232     		adds	r2, r2, #114
 5263 0c18 8449     		ldr	r1, .L499
 5264 0c1a 8A5C     		ldrb	r2, [r1, r2]
 5265 0c1c D1B2     		uxtb	r1, r2
 5266 0c1e 844A     		ldr	r2, .L499+4
 5267 0c20 1344     		add	r3, r3, r2
 5268 0c22 0A46     		mov	r2, r1
 5269 0c24 83F85420 		strb	r2, [r3, #84]
1102:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5270              		.loc 1 1102 0 discriminator 3
 5271 0c28 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5272 0c2a 0133     		adds	r3, r3, #1
 5273 0c2c FB73     		strb	r3, [r7, #15]
 5274              	.L337:
1102:.\Protocolo.c **** 								lado2.ppu[2][x]=Surtidor_rxBuffer[x+114];
 5275              		.loc 1 1102 0 is_stmt 0 discriminator 1
 5276 0c2e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5277 0c30 042B     		cmp	r3, #4
 5278 0c32 EED9     		bls	.L338
1104:.\Protocolo.c **** 							}
1105:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5279              		.loc 1 1105 0 is_stmt 1
 5280 0c34 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1106:.\Protocolo.c ****     						return 3;                            
 5281              		.loc 1 1106 0
 5282 0c38 0323     		movs	r3, #3
 5283 0c3a 00F00ABE 		b	.L199
 5284              	.L324:
1107:.\Protocolo.c **** 						}
1108:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5285              		.loc 1 1108 0
 5286 0c3e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1109:.\Protocolo.c **** 						return 1;			
 5287              		.loc 1 1109 0
 5288 0c42 0123     		movs	r3, #1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 117


 5289 0c44 00F005BE 		b	.L199
 5290              	.L304:
1110:.\Protocolo.c **** 					}
1111:.\Protocolo.c **** 					else{
1112:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5291              		.loc 1 1112 0
 5292 0c48 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1113:.\Protocolo.c **** 						return 0;		
 5293              		.loc 1 1113 0
 5294 0c4c 0023     		movs	r3, #0
 5295 0c4e 00F000BE 		b	.L199
 5296              	.L303:
1114:.\Protocolo.c **** 					}
1115:.\Protocolo.c **** 				}
1116:.\Protocolo.c **** 				else{
1117:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 5297              		.loc 1 1117 0
 5298 0c52 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1118:.\Protocolo.c **** 					return 0;		
 5299              		.loc 1 1118 0
 5300 0c56 0023     		movs	r3, #0
 5301 0c58 00F0FBBD 		b	.L199
 5302              	.L263:
1119:.\Protocolo.c **** 				}				
1120:.\Protocolo.c **** 			}		
1121:.\Protocolo.c **** 		}
1122:.\Protocolo.c **** 		else if(dir==lado3.dir){
 5303              		.loc 1 1122 0
 5304 0c5c 754B     		ldr	r3, .L499+8
 5305 0c5e 1B78     		ldrb	r3, [r3]
 5306 0c60 DBB2     		uxtb	r3, r3
 5307 0c62 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5308 0c64 9A42     		cmp	r2, r3
 5309 0c66 40F0FA82 		bne	.L339
1123:.\Protocolo.c **** 			if(version[1]!=7){
 5310              		.loc 1 1123 0
 5311 0c6a 734B     		ldr	r3, .L499+12
 5312 0c6c 5B78     		ldrb	r3, [r3, #1]
 5313 0c6e DBB2     		uxtb	r3, r3
 5314 0c70 072B     		cmp	r3, #7
 5315 0c72 00F08081 		beq	.L340
1124:.\Protocolo.c **** 				CyDelay(900);
 5316              		.loc 1 1124 0
 5317 0c76 4FF46170 		mov	r0, #900
 5318 0c7a FFF7FEFF 		bl	CyDelay
1125:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 5319              		.loc 1 1125 0
 5320 0c7e FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 5321 0c82 0346     		mov	r3, r0
 5322 0c84 FB73     		strb	r3, [r7, #15]
1126:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 5323              		.loc 1 1126 0
 5324 0c86 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5325 0c88 222B     		cmp	r3, #34
 5326 0c8a 06D0     		beq	.L341
 5327              		.loc 1 1126 0 is_stmt 0 discriminator 1
 5328 0c8c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 118


 5329 0c8e 402B     		cmp	r3, #64
 5330 0c90 03D0     		beq	.L341
 5331              		.loc 1 1126 0 discriminator 2
 5332 0c92 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5333 0c94 5E2B     		cmp	r3, #94
 5334 0c96 40F06981 		bne	.L342
 5335              	.L341:
1127:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 5336              		.loc 1 1127 0 is_stmt 1
 5337 0c9a 644B     		ldr	r3, .L499
 5338 0c9c 1B78     		ldrb	r3, [r3]
 5339 0c9e DBB2     		uxtb	r3, r3
 5340 0ca0 FF2B     		cmp	r3, #255
 5341 0ca2 40F05E81 		bne	.L343
 5342              		.loc 1 1127 0 is_stmt 0 discriminator 1
 5343 0ca6 614B     		ldr	r3, .L499
 5344 0ca8 5B78     		ldrb	r3, [r3, #1]
 5345 0caa DBB2     		uxtb	r3, r3
 5346 0cac F62B     		cmp	r3, #246
 5347 0cae 40F05881 		bne	.L343
 5348              		.loc 1 1127 0 discriminator 2
 5349 0cb2 5E4B     		ldr	r3, .L499
 5350 0cb4 DB78     		ldrb	r3, [r3, #3]
 5351 0cb6 DBB2     		uxtb	r3, r3
 5352 0cb8 F92B     		cmp	r3, #249
 5353 0cba 40F05281 		bne	.L343
1128:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 5354              		.loc 1 1128 0 is_stmt 1
 5355 0cbe 0023     		movs	r3, #0
 5356 0cc0 BB73     		strb	r3, [r7, #14]
 5357 0cc2 16E0     		b	.L344
 5358              	.L347:
1129:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 5359              		.loc 1 1129 0
 5360 0cc4 0023     		movs	r3, #0
 5361 0cc6 FB73     		strb	r3, [r7, #15]
 5362 0cc8 0DE0     		b	.L345
 5363              	.L346:
1130:.\Protocolo.c ****                     			lado3.totales[y][x]=0;
 5364              		.loc 1 1130 0 discriminator 3
 5365 0cca BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 5366 0ccc F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 5367 0cce 5948     		ldr	r0, .L499+8
 5368 0cd0 1346     		mov	r3, r2
 5369 0cd2 5B00     		lsls	r3, r3, #1
 5370 0cd4 1344     		add	r3, r3, r2
 5371 0cd6 DB00     		lsls	r3, r3, #3
 5372 0cd8 0B44     		add	r3, r3, r1
 5373 0cda 0344     		add	r3, r3, r0
 5374 0cdc 0022     		movs	r2, #0
 5375 0cde 9A70     		strb	r2, [r3, #2]
1129:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 5376              		.loc 1 1129 0 discriminator 3
 5377 0ce0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5378 0ce2 0133     		adds	r3, r3, #1
 5379 0ce4 FB73     		strb	r3, [r7, #15]
 5380              	.L345:
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 119


1129:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 5381              		.loc 1 1129 0 is_stmt 0 discriminator 1
 5382 0ce6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5383 0ce8 172B     		cmp	r3, #23
 5384 0cea EED9     		bls	.L346
1128:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 5385              		.loc 1 1128 0 is_stmt 1 discriminator 2
 5386 0cec BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 5387 0cee 0133     		adds	r3, r3, #1
 5388 0cf0 BB73     		strb	r3, [r7, #14]
 5389              	.L344:
1128:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 5390              		.loc 1 1128 0 is_stmt 0 discriminator 1
 5391 0cf2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 5392 0cf4 022B     		cmp	r3, #2
 5393 0cf6 E5D9     		bls	.L347
1131:.\Protocolo.c ****                     		}
1132:.\Protocolo.c ****                     	}                        
1133:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 5394              		.loc 1 1133 0 is_stmt 1
 5395 0cf8 0023     		movs	r3, #0
 5396 0cfa FB73     		strb	r3, [r7, #15]
 5397 0cfc 0CE0     		b	.L348
 5398              	.L349:
1134:.\Protocolo.c **** 							lado3.totales[0][x]=Surtidor_rxBuffer[x+4]; 
 5399              		.loc 1 1134 0 discriminator 3
 5400 0cfe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5401 0d00 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5402 0d02 0432     		adds	r2, r2, #4
 5403 0d04 4949     		ldr	r1, .L499
 5404 0d06 8A5C     		ldrb	r2, [r1, r2]
 5405 0d08 D1B2     		uxtb	r1, r2
 5406 0d0a 4A4A     		ldr	r2, .L499+8
 5407 0d0c 1344     		add	r3, r3, r2
 5408 0d0e 0A46     		mov	r2, r1
 5409 0d10 9A70     		strb	r2, [r3, #2]
1133:.\Protocolo.c **** 							lado3.totales[0][x]=Surtidor_rxBuffer[x+4]; 
 5410              		.loc 1 1133 0 discriminator 3
 5411 0d12 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5412 0d14 0133     		adds	r3, r3, #1
 5413 0d16 FB73     		strb	r3, [r7, #15]
 5414              	.L348:
1133:.\Protocolo.c **** 							lado3.totales[0][x]=Surtidor_rxBuffer[x+4]; 
 5415              		.loc 1 1133 0 is_stmt 0 discriminator 1
 5416 0d18 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5417 0d1a 072B     		cmp	r3, #7
 5418 0d1c EFD9     		bls	.L349
1135:.\Protocolo.c **** 						}
1136:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 5419              		.loc 1 1136 0 is_stmt 1
 5420 0d1e 0023     		movs	r3, #0
 5421 0d20 FB73     		strb	r3, [r7, #15]
 5422 0d22 17E0     		b	.L350
 5423              	.L352:
1137:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 5424              		.loc 1 1137 0
 5425 0d24 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 120


 5426 0d26 0D33     		adds	r3, r3, #13
 5427 0d28 404A     		ldr	r2, .L499
 5428 0d2a D35C     		ldrb	r3, [r2, r3]
 5429 0d2c DBB2     		uxtb	r3, r3
 5430 0d2e 002B     		cmp	r3, #0
 5431 0d30 02D1     		bne	.L351
1138:.\Protocolo.c ****                                 return 0;
 5432              		.loc 1 1138 0
 5433 0d32 0023     		movs	r3, #0
 5434 0d34 00F08DBD 		b	.L199
 5435              	.L351:
1139:.\Protocolo.c ****                             }
1140:.\Protocolo.c **** 							lado3.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 5436              		.loc 1 1140 0 discriminator 2
 5437 0d38 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5438 0d3a 0C33     		adds	r3, r3, #12
 5439 0d3c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5440 0d3e 0D32     		adds	r2, r2, #13
 5441 0d40 3A49     		ldr	r1, .L499
 5442 0d42 8A5C     		ldrb	r2, [r1, r2]
 5443 0d44 D1B2     		uxtb	r1, r2
 5444 0d46 3B4A     		ldr	r2, .L499+8
 5445 0d48 1344     		add	r3, r3, r2
 5446 0d4a 0A46     		mov	r2, r1
 5447 0d4c 9A70     		strb	r2, [r3, #2]
1136:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 5448              		.loc 1 1136 0 discriminator 2
 5449 0d4e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5450 0d50 0133     		adds	r3, r3, #1
 5451 0d52 FB73     		strb	r3, [r7, #15]
 5452              	.L350:
1136:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 5453              		.loc 1 1136 0 is_stmt 0 discriminator 1
 5454 0d54 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5455 0d56 072B     		cmp	r3, #7
 5456 0d58 E4D9     		bls	.L352
1141:.\Protocolo.c **** 						}
1142:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 5457              		.loc 1 1142 0 is_stmt 1
 5458 0d5a 0023     		movs	r3, #0
 5459 0d5c FB73     		strb	r3, [r7, #15]
 5460 0d5e 0DE0     		b	.L353
 5461              	.L354:
1143:.\Protocolo.c **** 							lado3.ppu[0][x]=Surtidor_rxBuffer[x+22];
 5462              		.loc 1 1143 0 discriminator 3
 5463 0d60 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5464 0d62 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5465 0d64 1632     		adds	r2, r2, #22
 5466 0d66 3149     		ldr	r1, .L499
 5467 0d68 8A5C     		ldrb	r2, [r1, r2]
 5468 0d6a D1B2     		uxtb	r1, r2
 5469 0d6c 314A     		ldr	r2, .L499+8
 5470 0d6e 1344     		add	r3, r3, r2
 5471 0d70 0A46     		mov	r2, r1
 5472 0d72 83F84A20 		strb	r2, [r3, #74]
1142:.\Protocolo.c **** 							lado3.ppu[0][x]=Surtidor_rxBuffer[x+22];
 5473              		.loc 1 1142 0 discriminator 3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 121


 5474 0d76 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5475 0d78 0133     		adds	r3, r3, #1
 5476 0d7a FB73     		strb	r3, [r7, #15]
 5477              	.L353:
1142:.\Protocolo.c **** 							lado3.ppu[0][x]=Surtidor_rxBuffer[x+22];
 5478              		.loc 1 1142 0 is_stmt 0 discriminator 1
 5479 0d7c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5480 0d7e 032B     		cmp	r3, #3
 5481 0d80 EED9     		bls	.L354
1144:.\Protocolo.c **** 						}				
1145:.\Protocolo.c **** 						if(nmangueras==2){
 5482              		.loc 1 1145 0 is_stmt 1
 5483 0d82 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5484 0d84 022B     		cmp	r3, #2
 5485 0d86 49D1     		bne	.L355
1146:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5486              		.loc 1 1146 0
 5487 0d88 0023     		movs	r3, #0
 5488 0d8a FB73     		strb	r3, [r7, #15]
 5489 0d8c 0CE0     		b	.L356
 5490              	.L357:
1147:.\Protocolo.c **** 								lado3.totales[1][x]=Surtidor_rxBuffer[x+34];
 5491              		.loc 1 1147 0 discriminator 3
 5492 0d8e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5493 0d90 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5494 0d92 2232     		adds	r2, r2, #34
 5495 0d94 2549     		ldr	r1, .L499
 5496 0d96 8A5C     		ldrb	r2, [r1, r2]
 5497 0d98 D1B2     		uxtb	r1, r2
 5498 0d9a 264A     		ldr	r2, .L499+8
 5499 0d9c 1344     		add	r3, r3, r2
 5500 0d9e 0A46     		mov	r2, r1
 5501 0da0 9A76     		strb	r2, [r3, #26]
1146:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5502              		.loc 1 1146 0 discriminator 3
 5503 0da2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5504 0da4 0133     		adds	r3, r3, #1
 5505 0da6 FB73     		strb	r3, [r7, #15]
 5506              	.L356:
1146:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5507              		.loc 1 1146 0 is_stmt 0 discriminator 1
 5508 0da8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5509 0daa 072B     		cmp	r3, #7
 5510 0dac EFD9     		bls	.L357
1148:.\Protocolo.c **** 							}
1149:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5511              		.loc 1 1149 0 is_stmt 1
 5512 0dae 0023     		movs	r3, #0
 5513 0db0 FB73     		strb	r3, [r7, #15]
 5514 0db2 17E0     		b	.L358
 5515              	.L360:
1150:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 5516              		.loc 1 1150 0
 5517 0db4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5518 0db6 2B33     		adds	r3, r3, #43
 5519 0db8 1C4A     		ldr	r2, .L499
 5520 0dba D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 122


 5521 0dbc DBB2     		uxtb	r3, r3
 5522 0dbe 002B     		cmp	r3, #0
 5523 0dc0 02D1     		bne	.L359
1151:.\Protocolo.c ****                                     return 0;
 5524              		.loc 1 1151 0
 5525 0dc2 0023     		movs	r3, #0
 5526 0dc4 00F045BD 		b	.L199
 5527              	.L359:
1152:.\Protocolo.c ****                                 }                                
1153:.\Protocolo.c **** 								lado3.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 5528              		.loc 1 1153 0 discriminator 2
 5529 0dc8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5530 0dca 0C33     		adds	r3, r3, #12
 5531 0dcc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5532 0dce 2B32     		adds	r2, r2, #43
 5533 0dd0 1649     		ldr	r1, .L499
 5534 0dd2 8A5C     		ldrb	r2, [r1, r2]
 5535 0dd4 D1B2     		uxtb	r1, r2
 5536 0dd6 174A     		ldr	r2, .L499+8
 5537 0dd8 1344     		add	r3, r3, r2
 5538 0dda 0A46     		mov	r2, r1
 5539 0ddc 9A76     		strb	r2, [r3, #26]
1149:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 5540              		.loc 1 1149 0 discriminator 2
 5541 0dde FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5542 0de0 0133     		adds	r3, r3, #1
 5543 0de2 FB73     		strb	r3, [r7, #15]
 5544              	.L358:
1149:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 5545              		.loc 1 1149 0 is_stmt 0 discriminator 1
 5546 0de4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5547 0de6 072B     		cmp	r3, #7
 5548 0de8 E4D9     		bls	.L360
1154:.\Protocolo.c **** 							}
1155:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 5549              		.loc 1 1155 0 is_stmt 1
 5550 0dea 0023     		movs	r3, #0
 5551 0dec FB73     		strb	r3, [r7, #15]
 5552 0dee 0DE0     		b	.L361
 5553              	.L362:
1156:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+52];
 5554              		.loc 1 1156 0 discriminator 3
 5555 0df0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5556 0df2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5557 0df4 3432     		adds	r2, r2, #52
 5558 0df6 0D49     		ldr	r1, .L499
 5559 0df8 8A5C     		ldrb	r2, [r1, r2]
 5560 0dfa D1B2     		uxtb	r1, r2
 5561 0dfc 0D4A     		ldr	r2, .L499+8
 5562 0dfe 1344     		add	r3, r3, r2
 5563 0e00 0A46     		mov	r2, r1
 5564 0e02 83F84F20 		strb	r2, [r3, #79]
1155:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+52];
 5565              		.loc 1 1155 0 discriminator 3
 5566 0e06 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5567 0e08 0133     		adds	r3, r3, #1
 5568 0e0a FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 123


 5569              	.L361:
1155:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+52];
 5570              		.loc 1 1155 0 is_stmt 0 discriminator 1
 5571 0e0c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5572 0e0e 032B     		cmp	r3, #3
 5573 0e10 EED9     		bls	.L362
1157:.\Protocolo.c **** 							}	
1158:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5574              		.loc 1 1158 0 is_stmt 1
 5575 0e12 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1159:.\Protocolo.c ****     						return 2;                            
 5576              		.loc 1 1159 0
 5577 0e16 0223     		movs	r3, #2
 5578 0e18 00F01BBD 		b	.L199
 5579              	.L355:
1160:.\Protocolo.c **** 						}
1161:.\Protocolo.c **** 						if(nmangueras==3){
 5580              		.loc 1 1161 0
 5581 0e1c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5582 0e1e 032B     		cmp	r3, #3
 5583 0e20 40F09A80 		bne	.L363
1162:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5584              		.loc 1 1162 0
 5585 0e24 0023     		movs	r3, #0
 5586 0e26 FB73     		strb	r3, [r7, #15]
 5587 0e28 15E0     		b	.L364
 5588              	.L500:
 5589 0e2a 00BF     		.align	2
 5590              	.L499:
 5591 0e2c 00000000 		.word	Surtidor_rxBuffer
 5592 0e30 00000000 		.word	lado2
 5593 0e34 00000000 		.word	lado3
 5594 0e38 00000000 		.word	version
 5595              	.L365:
1163:.\Protocolo.c **** 								lado3.totales[1][x]=Surtidor_rxBuffer[x+34];
 5596              		.loc 1 1163 0 discriminator 3
 5597 0e3c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5598 0e3e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5599 0e40 2232     		adds	r2, r2, #34
 5600 0e42 AB49     		ldr	r1, .L501
 5601 0e44 8A5C     		ldrb	r2, [r1, r2]
 5602 0e46 D1B2     		uxtb	r1, r2
 5603 0e48 AA4A     		ldr	r2, .L501+4
 5604 0e4a 1344     		add	r3, r3, r2
 5605 0e4c 0A46     		mov	r2, r1
 5606 0e4e 9A76     		strb	r2, [r3, #26]
1162:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5607              		.loc 1 1162 0 discriminator 3
 5608 0e50 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5609 0e52 0133     		adds	r3, r3, #1
 5610 0e54 FB73     		strb	r3, [r7, #15]
 5611              	.L364:
1162:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5612              		.loc 1 1162 0 is_stmt 0 discriminator 1
 5613 0e56 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5614 0e58 072B     		cmp	r3, #7
 5615 0e5a EFD9     		bls	.L365
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 124


1164:.\Protocolo.c **** 							}
1165:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5616              		.loc 1 1165 0 is_stmt 1
 5617 0e5c 0023     		movs	r3, #0
 5618 0e5e FB73     		strb	r3, [r7, #15]
 5619 0e60 17E0     		b	.L366
 5620              	.L368:
1166:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 5621              		.loc 1 1166 0
 5622 0e62 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5623 0e64 2B33     		adds	r3, r3, #43
 5624 0e66 A24A     		ldr	r2, .L501
 5625 0e68 D35C     		ldrb	r3, [r2, r3]
 5626 0e6a DBB2     		uxtb	r3, r3
 5627 0e6c 002B     		cmp	r3, #0
 5628 0e6e 02D1     		bne	.L367
1167:.\Protocolo.c ****                                     return 0;
 5629              		.loc 1 1167 0
 5630 0e70 0023     		movs	r3, #0
 5631 0e72 00F0EEBC 		b	.L199
 5632              	.L367:
1168:.\Protocolo.c ****                                 }                                 
1169:.\Protocolo.c **** 								lado3.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 5633              		.loc 1 1169 0 discriminator 2
 5634 0e76 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5635 0e78 0C33     		adds	r3, r3, #12
 5636 0e7a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5637 0e7c 2B32     		adds	r2, r2, #43
 5638 0e7e 9C49     		ldr	r1, .L501
 5639 0e80 8A5C     		ldrb	r2, [r1, r2]
 5640 0e82 D1B2     		uxtb	r1, r2
 5641 0e84 9B4A     		ldr	r2, .L501+4
 5642 0e86 1344     		add	r3, r3, r2
 5643 0e88 0A46     		mov	r2, r1
 5644 0e8a 9A76     		strb	r2, [r3, #26]
1165:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 5645              		.loc 1 1165 0 discriminator 2
 5646 0e8c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5647 0e8e 0133     		adds	r3, r3, #1
 5648 0e90 FB73     		strb	r3, [r7, #15]
 5649              	.L366:
1165:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 5650              		.loc 1 1165 0 is_stmt 0 discriminator 1
 5651 0e92 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5652 0e94 072B     		cmp	r3, #7
 5653 0e96 E4D9     		bls	.L368
1170:.\Protocolo.c **** 							}
1171:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 5654              		.loc 1 1171 0 is_stmt 1
 5655 0e98 0023     		movs	r3, #0
 5656 0e9a FB73     		strb	r3, [r7, #15]
 5657 0e9c 0DE0     		b	.L369
 5658              	.L370:
1172:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+52];
 5659              		.loc 1 1172 0 discriminator 3
 5660 0e9e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5661 0ea0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 125


 5662 0ea2 3432     		adds	r2, r2, #52
 5663 0ea4 9249     		ldr	r1, .L501
 5664 0ea6 8A5C     		ldrb	r2, [r1, r2]
 5665 0ea8 D1B2     		uxtb	r1, r2
 5666 0eaa 924A     		ldr	r2, .L501+4
 5667 0eac 1344     		add	r3, r3, r2
 5668 0eae 0A46     		mov	r2, r1
 5669 0eb0 83F84F20 		strb	r2, [r3, #79]
1171:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+52];
 5670              		.loc 1 1171 0 discriminator 3
 5671 0eb4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5672 0eb6 0133     		adds	r3, r3, #1
 5673 0eb8 FB73     		strb	r3, [r7, #15]
 5674              	.L369:
1171:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+52];
 5675              		.loc 1 1171 0 is_stmt 0 discriminator 1
 5676 0eba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5677 0ebc 032B     		cmp	r3, #3
 5678 0ebe EED9     		bls	.L370
1173:.\Protocolo.c **** 							}						
1174:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5679              		.loc 1 1174 0 is_stmt 1
 5680 0ec0 0023     		movs	r3, #0
 5681 0ec2 FB73     		strb	r3, [r7, #15]
 5682 0ec4 0DE0     		b	.L371
 5683              	.L372:
1175:.\Protocolo.c **** 								lado3.totales[2][x]=Surtidor_rxBuffer[x+64];
 5684              		.loc 1 1175 0 discriminator 3
 5685 0ec6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5686 0ec8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5687 0eca 4032     		adds	r2, r2, #64
 5688 0ecc 8849     		ldr	r1, .L501
 5689 0ece 8A5C     		ldrb	r2, [r1, r2]
 5690 0ed0 D1B2     		uxtb	r1, r2
 5691 0ed2 884A     		ldr	r2, .L501+4
 5692 0ed4 1344     		add	r3, r3, r2
 5693 0ed6 0A46     		mov	r2, r1
 5694 0ed8 83F83220 		strb	r2, [r3, #50]
1174:.\Protocolo.c **** 								lado3.totales[2][x]=Surtidor_rxBuffer[x+64];
 5695              		.loc 1 1174 0 discriminator 3
 5696 0edc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5697 0ede 0133     		adds	r3, r3, #1
 5698 0ee0 FB73     		strb	r3, [r7, #15]
 5699              	.L371:
1174:.\Protocolo.c **** 								lado3.totales[2][x]=Surtidor_rxBuffer[x+64];
 5700              		.loc 1 1174 0 is_stmt 0 discriminator 1
 5701 0ee2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5702 0ee4 072B     		cmp	r3, #7
 5703 0ee6 EED9     		bls	.L372
1176:.\Protocolo.c **** 							}
1177:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 5704              		.loc 1 1177 0 is_stmt 1
 5705 0ee8 0023     		movs	r3, #0
 5706 0eea FB73     		strb	r3, [r7, #15]
 5707 0eec 18E0     		b	.L373
 5708              	.L375:
1178:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 126


 5709              		.loc 1 1178 0
 5710 0eee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5711 0ef0 4933     		adds	r3, r3, #73
 5712 0ef2 7F4A     		ldr	r2, .L501
 5713 0ef4 D35C     		ldrb	r3, [r2, r3]
 5714 0ef6 DBB2     		uxtb	r3, r3
 5715 0ef8 002B     		cmp	r3, #0
 5716 0efa 02D1     		bne	.L374
1179:.\Protocolo.c ****                                     return 0;
 5717              		.loc 1 1179 0
 5718 0efc 0023     		movs	r3, #0
 5719 0efe 00F0A8BC 		b	.L199
 5720              	.L374:
1180:.\Protocolo.c ****                                 }                                 
1181:.\Protocolo.c **** 								lado3.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 5721              		.loc 1 1181 0 discriminator 2
 5722 0f02 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5723 0f04 0C33     		adds	r3, r3, #12
 5724 0f06 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5725 0f08 4932     		adds	r2, r2, #73
 5726 0f0a 7949     		ldr	r1, .L501
 5727 0f0c 8A5C     		ldrb	r2, [r1, r2]
 5728 0f0e D1B2     		uxtb	r1, r2
 5729 0f10 784A     		ldr	r2, .L501+4
 5730 0f12 1344     		add	r3, r3, r2
 5731 0f14 0A46     		mov	r2, r1
 5732 0f16 83F83220 		strb	r2, [r3, #50]
1177:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 5733              		.loc 1 1177 0 discriminator 2
 5734 0f1a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5735 0f1c 0133     		adds	r3, r3, #1
 5736 0f1e FB73     		strb	r3, [r7, #15]
 5737              	.L373:
1177:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 5738              		.loc 1 1177 0 is_stmt 0 discriminator 1
 5739 0f20 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5740 0f22 072B     		cmp	r3, #7
 5741 0f24 E3D9     		bls	.L375
1182:.\Protocolo.c **** 							}
1183:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 5742              		.loc 1 1183 0 is_stmt 1
 5743 0f26 0023     		movs	r3, #0
 5744 0f28 FB73     		strb	r3, [r7, #15]
 5745 0f2a 0DE0     		b	.L376
 5746              	.L377:
1184:.\Protocolo.c **** 								lado3.ppu[2][x]=Surtidor_rxBuffer[x+82];
 5747              		.loc 1 1184 0 discriminator 3
 5748 0f2c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5749 0f2e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5750 0f30 5232     		adds	r2, r2, #82
 5751 0f32 6F49     		ldr	r1, .L501
 5752 0f34 8A5C     		ldrb	r2, [r1, r2]
 5753 0f36 D1B2     		uxtb	r1, r2
 5754 0f38 6E4A     		ldr	r2, .L501+4
 5755 0f3a 1344     		add	r3, r3, r2
 5756 0f3c 0A46     		mov	r2, r1
 5757 0f3e 83F85420 		strb	r2, [r3, #84]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 127


1183:.\Protocolo.c **** 								lado3.ppu[2][x]=Surtidor_rxBuffer[x+82];
 5758              		.loc 1 1183 0 discriminator 3
 5759 0f42 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5760 0f44 0133     		adds	r3, r3, #1
 5761 0f46 FB73     		strb	r3, [r7, #15]
 5762              	.L376:
1183:.\Protocolo.c **** 								lado3.ppu[2][x]=Surtidor_rxBuffer[x+82];
 5763              		.loc 1 1183 0 is_stmt 0 discriminator 1
 5764 0f48 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5765 0f4a 032B     		cmp	r3, #3
 5766 0f4c EED9     		bls	.L377
1185:.\Protocolo.c **** 							}
1186:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 5767              		.loc 1 1186 0 is_stmt 1
 5768 0f4e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1187:.\Protocolo.c ****     						return 3;                            
 5769              		.loc 1 1187 0
 5770 0f52 0323     		movs	r3, #3
 5771 0f54 00F07DBC 		b	.L199
 5772              	.L363:
1188:.\Protocolo.c **** 						}
1189:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5773              		.loc 1 1189 0
 5774 0f58 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1190:.\Protocolo.c **** 						return 1;
 5775              		.loc 1 1190 0
 5776 0f5c 0123     		movs	r3, #1
 5777 0f5e 00F078BC 		b	.L199
 5778              	.L343:
1191:.\Protocolo.c **** 					}
1192:.\Protocolo.c **** 					else{
1193:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 5779              		.loc 1 1193 0
 5780 0f62 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1194:.\Protocolo.c **** 						return 0;
 5781              		.loc 1 1194 0
 5782 0f66 0023     		movs	r3, #0
 5783 0f68 00F073BC 		b	.L199
 5784              	.L342:
1195:.\Protocolo.c **** 					}					
1196:.\Protocolo.c **** 				}
1197:.\Protocolo.c **** 				else{
1198:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 5785              		.loc 1 1198 0
 5786 0f6c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1199:.\Protocolo.c **** 					return 0;		
 5787              		.loc 1 1199 0
 5788 0f70 0023     		movs	r3, #0
 5789 0f72 00F06EBC 		b	.L199
 5790              	.L340:
1200:.\Protocolo.c **** 				}
1201:.\Protocolo.c **** 			}
1202:.\Protocolo.c **** 			else{
1203:.\Protocolo.c **** 				CyDelay(900);
 5791              		.loc 1 1203 0
 5792 0f76 4FF46170 		mov	r0, #900
 5793 0f7a FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 128


1204:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 5794              		.loc 1 1204 0
 5795 0f7e FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 5796 0f82 0346     		mov	r3, r0
 5797 0f84 FB73     		strb	r3, [r7, #15]
1205:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){				
 5798              		.loc 1 1205 0
 5799 0f86 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5800 0f88 2E2B     		cmp	r3, #46
 5801 0f8a 06D0     		beq	.L378
 5802              		.loc 1 1205 0 is_stmt 0 discriminator 1
 5803 0f8c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5804 0f8e 582B     		cmp	r3, #88
 5805 0f90 03D0     		beq	.L378
 5806              		.loc 1 1205 0 discriminator 2
 5807 0f92 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5808 0f94 822B     		cmp	r3, #130
 5809 0f96 40F05E81 		bne	.L379
 5810              	.L378:
1206:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 5811              		.loc 1 1206 0 is_stmt 1
 5812 0f9a 554B     		ldr	r3, .L501
 5813 0f9c 1B78     		ldrb	r3, [r3]
 5814 0f9e DBB2     		uxtb	r3, r3
 5815 0fa0 FF2B     		cmp	r3, #255
 5816 0fa2 40F05481 		bne	.L380
 5817              		.loc 1 1206 0 is_stmt 0 discriminator 1
 5818 0fa6 524B     		ldr	r3, .L501
 5819 0fa8 5B78     		ldrb	r3, [r3, #1]
 5820 0faa DBB2     		uxtb	r3, r3
 5821 0fac F62B     		cmp	r3, #246
 5822 0fae 40F04E81 		bne	.L380
 5823              		.loc 1 1206 0 discriminator 2
 5824 0fb2 4F4B     		ldr	r3, .L501
 5825 0fb4 DB78     		ldrb	r3, [r3, #3]
 5826 0fb6 DBB2     		uxtb	r3, r3
 5827 0fb8 F92B     		cmp	r3, #249
 5828 0fba 40F04881 		bne	.L380
1207:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 5829              		.loc 1 1207 0 is_stmt 1
 5830 0fbe 0023     		movs	r3, #0
 5831 0fc0 BB73     		strb	r3, [r7, #14]
 5832 0fc2 16E0     		b	.L381
 5833              	.L384:
1208:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 5834              		.loc 1 1208 0
 5835 0fc4 0023     		movs	r3, #0
 5836 0fc6 FB73     		strb	r3, [r7, #15]
 5837 0fc8 0DE0     		b	.L382
 5838              	.L383:
1209:.\Protocolo.c ****                     			lado3.totales[y][x]=0;
 5839              		.loc 1 1209 0 discriminator 3
 5840 0fca BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 5841 0fcc F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 5842 0fce 4948     		ldr	r0, .L501+4
 5843 0fd0 1346     		mov	r3, r2
 5844 0fd2 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 129


 5845 0fd4 1344     		add	r3, r3, r2
 5846 0fd6 DB00     		lsls	r3, r3, #3
 5847 0fd8 0B44     		add	r3, r3, r1
 5848 0fda 0344     		add	r3, r3, r0
 5849 0fdc 0022     		movs	r2, #0
 5850 0fde 9A70     		strb	r2, [r3, #2]
1208:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 5851              		.loc 1 1208 0 discriminator 3
 5852 0fe0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5853 0fe2 0133     		adds	r3, r3, #1
 5854 0fe4 FB73     		strb	r3, [r7, #15]
 5855              	.L382:
1208:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 5856              		.loc 1 1208 0 is_stmt 0 discriminator 1
 5857 0fe6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5858 0fe8 172B     		cmp	r3, #23
 5859 0fea EED9     		bls	.L383
1207:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 5860              		.loc 1 1207 0 is_stmt 1 discriminator 2
 5861 0fec BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 5862 0fee 0133     		adds	r3, r3, #1
 5863 0ff0 BB73     		strb	r3, [r7, #14]
 5864              	.L381:
1207:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 5865              		.loc 1 1207 0 is_stmt 0 discriminator 1
 5866 0ff2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 5867 0ff4 022B     		cmp	r3, #2
 5868 0ff6 E5D9     		bls	.L384
1210:.\Protocolo.c ****                     		}
1211:.\Protocolo.c ****                     	}                        
1212:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 5869              		.loc 1 1212 0 is_stmt 1
 5870 0ff8 0023     		movs	r3, #0
 5871 0ffa FB73     		strb	r3, [r7, #15]
 5872 0ffc 0CE0     		b	.L385
 5873              	.L386:
1213:.\Protocolo.c **** 							lado3.totales[0][x]=Surtidor_rxBuffer[x+4];
 5874              		.loc 1 1213 0 discriminator 3
 5875 0ffe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5876 1000 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5877 1002 0432     		adds	r2, r2, #4
 5878 1004 3A49     		ldr	r1, .L501
 5879 1006 8A5C     		ldrb	r2, [r1, r2]
 5880 1008 D1B2     		uxtb	r1, r2
 5881 100a 3A4A     		ldr	r2, .L501+4
 5882 100c 1344     		add	r3, r3, r2
 5883 100e 0A46     		mov	r2, r1
 5884 1010 9A70     		strb	r2, [r3, #2]
1212:.\Protocolo.c **** 							lado3.totales[0][x]=Surtidor_rxBuffer[x+4];
 5885              		.loc 1 1212 0 discriminator 3
 5886 1012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5887 1014 0133     		adds	r3, r3, #1
 5888 1016 FB73     		strb	r3, [r7, #15]
 5889              	.L385:
1212:.\Protocolo.c **** 							lado3.totales[0][x]=Surtidor_rxBuffer[x+4];
 5890              		.loc 1 1212 0 is_stmt 0 discriminator 1
 5891 1018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 130


 5892 101a 0B2B     		cmp	r3, #11
 5893 101c EFD9     		bls	.L386
1214:.\Protocolo.c **** 						}
1215:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 5894              		.loc 1 1215 0 is_stmt 1
 5895 101e 0023     		movs	r3, #0
 5896 1020 FB73     		strb	r3, [r7, #15]
 5897 1022 17E0     		b	.L387
 5898              	.L389:
1216:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 5899              		.loc 1 1216 0
 5900 1024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5901 1026 1133     		adds	r3, r3, #17
 5902 1028 314A     		ldr	r2, .L501
 5903 102a D35C     		ldrb	r3, [r2, r3]
 5904 102c DBB2     		uxtb	r3, r3
 5905 102e 002B     		cmp	r3, #0
 5906 1030 02D1     		bne	.L388
1217:.\Protocolo.c ****                                 return 0;
 5907              		.loc 1 1217 0
 5908 1032 0023     		movs	r3, #0
 5909 1034 00F00DBC 		b	.L199
 5910              	.L388:
1218:.\Protocolo.c ****                             }                             
1219:.\Protocolo.c **** 							lado3.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 5911              		.loc 1 1219 0 discriminator 2
 5912 1038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5913 103a 0C33     		adds	r3, r3, #12
 5914 103c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5915 103e 1132     		adds	r2, r2, #17
 5916 1040 2B49     		ldr	r1, .L501
 5917 1042 8A5C     		ldrb	r2, [r1, r2]
 5918 1044 D1B2     		uxtb	r1, r2
 5919 1046 2B4A     		ldr	r2, .L501+4
 5920 1048 1344     		add	r3, r3, r2
 5921 104a 0A46     		mov	r2, r1
 5922 104c 9A70     		strb	r2, [r3, #2]
1215:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 5923              		.loc 1 1215 0 discriminator 2
 5924 104e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5925 1050 0133     		adds	r3, r3, #1
 5926 1052 FB73     		strb	r3, [r7, #15]
 5927              	.L387:
1215:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 5928              		.loc 1 1215 0 is_stmt 0 discriminator 1
 5929 1054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5930 1056 0B2B     		cmp	r3, #11
 5931 1058 E4D9     		bls	.L389
1220:.\Protocolo.c **** 						}
1221:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 5932              		.loc 1 1221 0 is_stmt 1
 5933 105a 0023     		movs	r3, #0
 5934 105c FB73     		strb	r3, [r7, #15]
 5935 105e 0DE0     		b	.L390
 5936              	.L391:
1222:.\Protocolo.c **** 							lado3.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5937              		.loc 1 1222 0 discriminator 3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 131


 5938 1060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5939 1062 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5940 1064 1E32     		adds	r2, r2, #30
 5941 1066 2249     		ldr	r1, .L501
 5942 1068 8A5C     		ldrb	r2, [r1, r2]
 5943 106a D1B2     		uxtb	r1, r2
 5944 106c 214A     		ldr	r2, .L501+4
 5945 106e 1344     		add	r3, r3, r2
 5946 1070 0A46     		mov	r2, r1
 5947 1072 83F84A20 		strb	r2, [r3, #74]
1221:.\Protocolo.c **** 							lado3.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5948              		.loc 1 1221 0 discriminator 3
 5949 1076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5950 1078 0133     		adds	r3, r3, #1
 5951 107a FB73     		strb	r3, [r7, #15]
 5952              	.L390:
1221:.\Protocolo.c **** 							lado3.ppu[0][x]=Surtidor_rxBuffer[x+30];
 5953              		.loc 1 1221 0 is_stmt 0 discriminator 1
 5954 107c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5955 107e 042B     		cmp	r3, #4
 5956 1080 EED9     		bls	.L391
1223:.\Protocolo.c **** 						}				
1224:.\Protocolo.c **** 						if(nmangueras==2){
 5957              		.loc 1 1224 0 is_stmt 1
 5958 1082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5959 1084 022B     		cmp	r3, #2
 5960 1086 4CD1     		bne	.L392
1225:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5961              		.loc 1 1225 0
 5962 1088 0023     		movs	r3, #0
 5963 108a FB73     		strb	r3, [r7, #15]
 5964 108c 0CE0     		b	.L393
 5965              	.L394:
1226:.\Protocolo.c **** 								lado3.totales[1][x]=Surtidor_rxBuffer[x+46];
 5966              		.loc 1 1226 0 discriminator 3
 5967 108e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5968 1090 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 5969 1092 2E32     		adds	r2, r2, #46
 5970 1094 1649     		ldr	r1, .L501
 5971 1096 8A5C     		ldrb	r2, [r1, r2]
 5972 1098 D1B2     		uxtb	r1, r2
 5973 109a 164A     		ldr	r2, .L501+4
 5974 109c 1344     		add	r3, r3, r2
 5975 109e 0A46     		mov	r2, r1
 5976 10a0 9A76     		strb	r2, [r3, #26]
1225:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5977              		.loc 1 1225 0 discriminator 3
 5978 10a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5979 10a4 0133     		adds	r3, r3, #1
 5980 10a6 FB73     		strb	r3, [r7, #15]
 5981              	.L393:
1225:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5982              		.loc 1 1225 0 is_stmt 0 discriminator 1
 5983 10a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5984 10aa 0B2B     		cmp	r3, #11
 5985 10ac EFD9     		bls	.L394
1227:.\Protocolo.c **** 							}
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 132


1228:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 5986              		.loc 1 1228 0 is_stmt 1
 5987 10ae 0023     		movs	r3, #0
 5988 10b0 FB73     		strb	r3, [r7, #15]
 5989 10b2 16E0     		b	.L395
 5990              	.L397:
1229:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 5991              		.loc 1 1229 0
 5992 10b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5993 10b6 3B33     		adds	r3, r3, #59
 5994 10b8 0D4A     		ldr	r2, .L501
 5995 10ba D35C     		ldrb	r3, [r2, r3]
 5996 10bc DBB2     		uxtb	r3, r3
 5997 10be 002B     		cmp	r3, #0
 5998 10c0 01D1     		bne	.L396
1230:.\Protocolo.c ****                                     return 0;
 5999              		.loc 1 1230 0
 6000 10c2 0023     		movs	r3, #0
 6001 10c4 C5E3     		b	.L199
 6002              	.L396:
1231:.\Protocolo.c ****                                 }                                 
1232:.\Protocolo.c **** 								lado3.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 6003              		.loc 1 1232 0 discriminator 2
 6004 10c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6005 10c8 0C33     		adds	r3, r3, #12
 6006 10ca FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6007 10cc 3B32     		adds	r2, r2, #59
 6008 10ce 0849     		ldr	r1, .L501
 6009 10d0 8A5C     		ldrb	r2, [r1, r2]
 6010 10d2 D1B2     		uxtb	r1, r2
 6011 10d4 074A     		ldr	r2, .L501+4
 6012 10d6 1344     		add	r3, r3, r2
 6013 10d8 0A46     		mov	r2, r1
 6014 10da 9A76     		strb	r2, [r3, #26]
1228:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 6015              		.loc 1 1228 0 discriminator 2
 6016 10dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6017 10de 0133     		adds	r3, r3, #1
 6018 10e0 FB73     		strb	r3, [r7, #15]
 6019              	.L395:
1228:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 6020              		.loc 1 1228 0 is_stmt 0 discriminator 1
 6021 10e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6022 10e4 0B2B     		cmp	r3, #11
 6023 10e6 E5D9     		bls	.L397
1233:.\Protocolo.c **** 							}
1234:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6024              		.loc 1 1234 0 is_stmt 1
 6025 10e8 0023     		movs	r3, #0
 6026 10ea FB73     		strb	r3, [r7, #15]
 6027 10ec 12E0     		b	.L398
 6028              	.L502:
 6029 10ee 00BF     		.align	2
 6030              	.L501:
 6031 10f0 00000000 		.word	Surtidor_rxBuffer
 6032 10f4 00000000 		.word	lado3
 6033              	.L399:
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 133


1235:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+72];
 6034              		.loc 1 1235 0 discriminator 3
 6035 10f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6036 10fa FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6037 10fc 4832     		adds	r2, r2, #72
 6038 10fe B249     		ldr	r1, .L503
 6039 1100 8A5C     		ldrb	r2, [r1, r2]
 6040 1102 D1B2     		uxtb	r1, r2
 6041 1104 B14A     		ldr	r2, .L503+4
 6042 1106 1344     		add	r3, r3, r2
 6043 1108 0A46     		mov	r2, r1
 6044 110a 83F84F20 		strb	r2, [r3, #79]
1234:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+72];
 6045              		.loc 1 1234 0 discriminator 3
 6046 110e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6047 1110 0133     		adds	r3, r3, #1
 6048 1112 FB73     		strb	r3, [r7, #15]
 6049              	.L398:
1234:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+72];
 6050              		.loc 1 1234 0 is_stmt 0 discriminator 1
 6051 1114 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6052 1116 042B     		cmp	r3, #4
 6053 1118 EED9     		bls	.L399
1236:.\Protocolo.c **** 							}
1237:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 6054              		.loc 1 1237 0 is_stmt 1
 6055 111a FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1238:.\Protocolo.c ****     						return 2;                            
 6056              		.loc 1 1238 0
 6057 111e 0223     		movs	r3, #2
 6058 1120 97E3     		b	.L199
 6059              	.L392:
1239:.\Protocolo.c **** 						}
1240:.\Protocolo.c **** 						if(nmangueras==3){
 6060              		.loc 1 1240 0
 6061 1122 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6062 1124 032B     		cmp	r3, #3
 6063 1126 40F08E80 		bne	.L400
1241:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6064              		.loc 1 1241 0
 6065 112a 0023     		movs	r3, #0
 6066 112c FB73     		strb	r3, [r7, #15]
 6067 112e 0CE0     		b	.L401
 6068              	.L402:
1242:.\Protocolo.c **** 								lado3.totales[1][x]=Surtidor_rxBuffer[x+46];
 6069              		.loc 1 1242 0 discriminator 3
 6070 1130 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6071 1132 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6072 1134 2E32     		adds	r2, r2, #46
 6073 1136 A449     		ldr	r1, .L503
 6074 1138 8A5C     		ldrb	r2, [r1, r2]
 6075 113a D1B2     		uxtb	r1, r2
 6076 113c A34A     		ldr	r2, .L503+4
 6077 113e 1344     		add	r3, r3, r2
 6078 1140 0A46     		mov	r2, r1
 6079 1142 9A76     		strb	r2, [r3, #26]
1241:.\Protocolo.c **** 							for(x=0;x<=11;x++){
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 134


 6080              		.loc 1 1241 0 discriminator 3
 6081 1144 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6082 1146 0133     		adds	r3, r3, #1
 6083 1148 FB73     		strb	r3, [r7, #15]
 6084              	.L401:
1241:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6085              		.loc 1 1241 0 is_stmt 0 discriminator 1
 6086 114a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6087 114c 0B2B     		cmp	r3, #11
 6088 114e EFD9     		bls	.L402
1243:.\Protocolo.c **** 							}
1244:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6089              		.loc 1 1244 0 is_stmt 1
 6090 1150 0023     		movs	r3, #0
 6091 1152 FB73     		strb	r3, [r7, #15]
 6092 1154 16E0     		b	.L403
 6093              	.L405:
1245:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 6094              		.loc 1 1245 0
 6095 1156 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6096 1158 3B33     		adds	r3, r3, #59
 6097 115a 9B4A     		ldr	r2, .L503
 6098 115c D35C     		ldrb	r3, [r2, r3]
 6099 115e DBB2     		uxtb	r3, r3
 6100 1160 002B     		cmp	r3, #0
 6101 1162 01D1     		bne	.L404
1246:.\Protocolo.c ****                                     return 0;
 6102              		.loc 1 1246 0
 6103 1164 0023     		movs	r3, #0
 6104 1166 74E3     		b	.L199
 6105              	.L404:
1247:.\Protocolo.c ****                                 }                                 
1248:.\Protocolo.c **** 								lado3.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 6106              		.loc 1 1248 0 discriminator 2
 6107 1168 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6108 116a 0C33     		adds	r3, r3, #12
 6109 116c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6110 116e 3B32     		adds	r2, r2, #59
 6111 1170 9549     		ldr	r1, .L503
 6112 1172 8A5C     		ldrb	r2, [r1, r2]
 6113 1174 D1B2     		uxtb	r1, r2
 6114 1176 954A     		ldr	r2, .L503+4
 6115 1178 1344     		add	r3, r3, r2
 6116 117a 0A46     		mov	r2, r1
 6117 117c 9A76     		strb	r2, [r3, #26]
1244:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 6118              		.loc 1 1244 0 discriminator 2
 6119 117e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6120 1180 0133     		adds	r3, r3, #1
 6121 1182 FB73     		strb	r3, [r7, #15]
 6122              	.L403:
1244:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 6123              		.loc 1 1244 0 is_stmt 0 discriminator 1
 6124 1184 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6125 1186 0B2B     		cmp	r3, #11
 6126 1188 E5D9     		bls	.L405
1249:.\Protocolo.c **** 							}
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 135


1250:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6127              		.loc 1 1250 0 is_stmt 1
 6128 118a 0023     		movs	r3, #0
 6129 118c FB73     		strb	r3, [r7, #15]
 6130 118e 0DE0     		b	.L406
 6131              	.L407:
1251:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+72];
 6132              		.loc 1 1251 0 discriminator 3
 6133 1190 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6134 1192 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6135 1194 4832     		adds	r2, r2, #72
 6136 1196 8C49     		ldr	r1, .L503
 6137 1198 8A5C     		ldrb	r2, [r1, r2]
 6138 119a D1B2     		uxtb	r1, r2
 6139 119c 8B4A     		ldr	r2, .L503+4
 6140 119e 1344     		add	r3, r3, r2
 6141 11a0 0A46     		mov	r2, r1
 6142 11a2 83F84F20 		strb	r2, [r3, #79]
1250:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+72];
 6143              		.loc 1 1250 0 discriminator 3
 6144 11a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6145 11a8 0133     		adds	r3, r3, #1
 6146 11aa FB73     		strb	r3, [r7, #15]
 6147              	.L406:
1250:.\Protocolo.c **** 								lado3.ppu[1][x]=Surtidor_rxBuffer[x+72];
 6148              		.loc 1 1250 0 is_stmt 0 discriminator 1
 6149 11ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6150 11ae 042B     		cmp	r3, #4
 6151 11b0 EED9     		bls	.L407
1252:.\Protocolo.c **** 							}					
1253:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6152              		.loc 1 1253 0 is_stmt 1
 6153 11b2 0023     		movs	r3, #0
 6154 11b4 FB73     		strb	r3, [r7, #15]
 6155 11b6 0DE0     		b	.L408
 6156              	.L409:
1254:.\Protocolo.c **** 								lado3.totales[2][x]=Surtidor_rxBuffer[x+88];
 6157              		.loc 1 1254 0 discriminator 3
 6158 11b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6159 11ba FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6160 11bc 5832     		adds	r2, r2, #88
 6161 11be 8249     		ldr	r1, .L503
 6162 11c0 8A5C     		ldrb	r2, [r1, r2]
 6163 11c2 D1B2     		uxtb	r1, r2
 6164 11c4 814A     		ldr	r2, .L503+4
 6165 11c6 1344     		add	r3, r3, r2
 6166 11c8 0A46     		mov	r2, r1
 6167 11ca 83F83220 		strb	r2, [r3, #50]
1253:.\Protocolo.c **** 								lado3.totales[2][x]=Surtidor_rxBuffer[x+88];
 6168              		.loc 1 1253 0 discriminator 3
 6169 11ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6170 11d0 0133     		adds	r3, r3, #1
 6171 11d2 FB73     		strb	r3, [r7, #15]
 6172              	.L408:
1253:.\Protocolo.c **** 								lado3.totales[2][x]=Surtidor_rxBuffer[x+88];
 6173              		.loc 1 1253 0 is_stmt 0 discriminator 1
 6174 11d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 136


 6175 11d6 0B2B     		cmp	r3, #11
 6176 11d8 EED9     		bls	.L409
1255:.\Protocolo.c **** 							}
1256:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6177              		.loc 1 1256 0 is_stmt 1
 6178 11da 0023     		movs	r3, #0
 6179 11dc FB73     		strb	r3, [r7, #15]
 6180 11de 17E0     		b	.L410
 6181              	.L412:
1257:.\Protocolo.c ****                                  if(Surtidor_rxBuffer[x+101]==0){
 6182              		.loc 1 1257 0
 6183 11e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6184 11e2 6533     		adds	r3, r3, #101
 6185 11e4 784A     		ldr	r2, .L503
 6186 11e6 D35C     		ldrb	r3, [r2, r3]
 6187 11e8 DBB2     		uxtb	r3, r3
 6188 11ea 002B     		cmp	r3, #0
 6189 11ec 01D1     		bne	.L411
1258:.\Protocolo.c ****                                     return 0;
 6190              		.loc 1 1258 0
 6191 11ee 0023     		movs	r3, #0
 6192 11f0 2FE3     		b	.L199
 6193              	.L411:
1259:.\Protocolo.c ****                                 }                                
1260:.\Protocolo.c **** 								lado3.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 6194              		.loc 1 1260 0 discriminator 2
 6195 11f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6196 11f4 0C33     		adds	r3, r3, #12
 6197 11f6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6198 11f8 6532     		adds	r2, r2, #101
 6199 11fa 7349     		ldr	r1, .L503
 6200 11fc 8A5C     		ldrb	r2, [r1, r2]
 6201 11fe D1B2     		uxtb	r1, r2
 6202 1200 724A     		ldr	r2, .L503+4
 6203 1202 1344     		add	r3, r3, r2
 6204 1204 0A46     		mov	r2, r1
 6205 1206 83F83220 		strb	r2, [r3, #50]
1256:.\Protocolo.c ****                                  if(Surtidor_rxBuffer[x+101]==0){
 6206              		.loc 1 1256 0 discriminator 2
 6207 120a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6208 120c 0133     		adds	r3, r3, #1
 6209 120e FB73     		strb	r3, [r7, #15]
 6210              	.L410:
1256:.\Protocolo.c ****                                  if(Surtidor_rxBuffer[x+101]==0){
 6211              		.loc 1 1256 0 is_stmt 0 discriminator 1
 6212 1210 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6213 1212 0B2B     		cmp	r3, #11
 6214 1214 E4D9     		bls	.L412
1261:.\Protocolo.c **** 							}
1262:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6215              		.loc 1 1262 0 is_stmt 1
 6216 1216 0023     		movs	r3, #0
 6217 1218 FB73     		strb	r3, [r7, #15]
 6218 121a 0DE0     		b	.L413
 6219              	.L414:
1263:.\Protocolo.c **** 								lado3.ppu[2][x]=Surtidor_rxBuffer[x+114];
 6220              		.loc 1 1263 0 discriminator 3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 137


 6221 121c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6222 121e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6223 1220 7232     		adds	r2, r2, #114
 6224 1222 6949     		ldr	r1, .L503
 6225 1224 8A5C     		ldrb	r2, [r1, r2]
 6226 1226 D1B2     		uxtb	r1, r2
 6227 1228 684A     		ldr	r2, .L503+4
 6228 122a 1344     		add	r3, r3, r2
 6229 122c 0A46     		mov	r2, r1
 6230 122e 83F85420 		strb	r2, [r3, #84]
1262:.\Protocolo.c **** 								lado3.ppu[2][x]=Surtidor_rxBuffer[x+114];
 6231              		.loc 1 1262 0 discriminator 3
 6232 1232 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6233 1234 0133     		adds	r3, r3, #1
 6234 1236 FB73     		strb	r3, [r7, #15]
 6235              	.L413:
1262:.\Protocolo.c **** 								lado3.ppu[2][x]=Surtidor_rxBuffer[x+114];
 6236              		.loc 1 1262 0 is_stmt 0 discriminator 1
 6237 1238 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6238 123a 042B     		cmp	r3, #4
 6239 123c EED9     		bls	.L414
1264:.\Protocolo.c **** 							}
1265:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 6240              		.loc 1 1265 0 is_stmt 1
 6241 123e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1266:.\Protocolo.c ****     						return 3;                            
 6242              		.loc 1 1266 0
 6243 1242 0323     		movs	r3, #3
 6244 1244 05E3     		b	.L199
 6245              	.L400:
1267:.\Protocolo.c **** 						}
1268:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 6246              		.loc 1 1268 0
 6247 1246 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1269:.\Protocolo.c **** 						return 1;			
 6248              		.loc 1 1269 0
 6249 124a 0123     		movs	r3, #1
 6250 124c 01E3     		b	.L199
 6251              	.L380:
1270:.\Protocolo.c **** 					}
1271:.\Protocolo.c **** 					else{
1272:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 6252              		.loc 1 1272 0
 6253 124e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1273:.\Protocolo.c **** 						return 0;					
 6254              		.loc 1 1273 0
 6255 1252 0023     		movs	r3, #0
 6256 1254 FDE2     		b	.L199
 6257              	.L379:
1274:.\Protocolo.c **** 					}
1275:.\Protocolo.c **** 				}
1276:.\Protocolo.c **** 				else{
1277:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 6258              		.loc 1 1277 0
 6259 1256 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1278:.\Protocolo.c **** 					return 0;		
 6260              		.loc 1 1278 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 138


 6261 125a 0023     		movs	r3, #0
 6262 125c F9E2     		b	.L199
 6263              	.L339:
1279:.\Protocolo.c **** 				}	
1280:.\Protocolo.c **** 			}
1281:.\Protocolo.c **** 		}
1282:.\Protocolo.c **** 		else if(dir==lado4.dir){
 6264              		.loc 1 1282 0
 6265 125e 5C4B     		ldr	r3, .L503+8
 6266 1260 1B78     		ldrb	r3, [r3]
 6267 1262 DBB2     		uxtb	r3, r3
 6268 1264 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6269 1266 9A42     		cmp	r2, r3
 6270 1268 40F0F082 		bne	.L415
1283:.\Protocolo.c **** 			if(version[1]!=7){
 6271              		.loc 1 1283 0
 6272 126c 594B     		ldr	r3, .L503+12
 6273 126e 5B78     		ldrb	r3, [r3, #1]
 6274 1270 DBB2     		uxtb	r3, r3
 6275 1272 072B     		cmp	r3, #7
 6276 1274 00F07781 		beq	.L416
1284:.\Protocolo.c **** 				CyDelay(900);
 6277              		.loc 1 1284 0
 6278 1278 4FF46170 		mov	r0, #900
 6279 127c FFF7FEFF 		bl	CyDelay
1285:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 6280              		.loc 1 1285 0
 6281 1280 FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 6282 1284 0346     		mov	r3, r0
 6283 1286 FB73     		strb	r3, [r7, #15]
1286:.\Protocolo.c **** 				if((x==34)||(x==64)||(x==94)){
 6284              		.loc 1 1286 0
 6285 1288 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6286 128a 222B     		cmp	r3, #34
 6287 128c 06D0     		beq	.L417
 6288              		.loc 1 1286 0 is_stmt 0 discriminator 1
 6289 128e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6290 1290 402B     		cmp	r3, #64
 6291 1292 03D0     		beq	.L417
 6292              		.loc 1 1286 0 discriminator 2
 6293 1294 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6294 1296 5E2B     		cmp	r3, #94
 6295 1298 40F06181 		bne	.L418
 6296              	.L417:
1287:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
 6297              		.loc 1 1287 0 is_stmt 1
 6298 129c 4A4B     		ldr	r3, .L503
 6299 129e 1B78     		ldrb	r3, [r3]
 6300 12a0 DBB2     		uxtb	r3, r3
 6301 12a2 FF2B     		cmp	r3, #255
 6302 12a4 40F05781 		bne	.L419
 6303              		.loc 1 1287 0 is_stmt 0 discriminator 1
 6304 12a8 474B     		ldr	r3, .L503
 6305 12aa 5B78     		ldrb	r3, [r3, #1]
 6306 12ac DBB2     		uxtb	r3, r3
 6307 12ae F62B     		cmp	r3, #246
 6308 12b0 40F05181 		bne	.L419
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 139


 6309              		.loc 1 1287 0 discriminator 2
 6310 12b4 444B     		ldr	r3, .L503
 6311 12b6 DB78     		ldrb	r3, [r3, #3]
 6312 12b8 DBB2     		uxtb	r3, r3
 6313 12ba F92B     		cmp	r3, #249
 6314 12bc 40F04B81 		bne	.L419
1288:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 6315              		.loc 1 1288 0 is_stmt 1
 6316 12c0 0023     		movs	r3, #0
 6317 12c2 BB73     		strb	r3, [r7, #14]
 6318 12c4 16E0     		b	.L420
 6319              	.L423:
1289:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 6320              		.loc 1 1289 0
 6321 12c6 0023     		movs	r3, #0
 6322 12c8 FB73     		strb	r3, [r7, #15]
 6323 12ca 0DE0     		b	.L421
 6324              	.L422:
1290:.\Protocolo.c ****                     			lado4.totales[y][x]=0;
 6325              		.loc 1 1290 0 discriminator 3
 6326 12cc BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 6327 12ce F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 6328 12d0 3F48     		ldr	r0, .L503+8
 6329 12d2 1346     		mov	r3, r2
 6330 12d4 5B00     		lsls	r3, r3, #1
 6331 12d6 1344     		add	r3, r3, r2
 6332 12d8 DB00     		lsls	r3, r3, #3
 6333 12da 0B44     		add	r3, r3, r1
 6334 12dc 0344     		add	r3, r3, r0
 6335 12de 0022     		movs	r2, #0
 6336 12e0 9A70     		strb	r2, [r3, #2]
1289:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 6337              		.loc 1 1289 0 discriminator 3
 6338 12e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6339 12e4 0133     		adds	r3, r3, #1
 6340 12e6 FB73     		strb	r3, [r7, #15]
 6341              	.L421:
1289:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 6342              		.loc 1 1289 0 is_stmt 0 discriminator 1
 6343 12e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6344 12ea 172B     		cmp	r3, #23
 6345 12ec EED9     		bls	.L422
1288:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 6346              		.loc 1 1288 0 is_stmt 1 discriminator 2
 6347 12ee BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 6348 12f0 0133     		adds	r3, r3, #1
 6349 12f2 BB73     		strb	r3, [r7, #14]
 6350              	.L420:
1288:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 6351              		.loc 1 1288 0 is_stmt 0 discriminator 1
 6352 12f4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 6353 12f6 022B     		cmp	r3, #2
 6354 12f8 E5D9     		bls	.L423
1291:.\Protocolo.c ****                     		}
1292:.\Protocolo.c ****                     	}                        
1293:.\Protocolo.c **** 						for(x=0;x<=7;x++){                          
 6355              		.loc 1 1293 0 is_stmt 1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 140


 6356 12fa 0023     		movs	r3, #0
 6357 12fc FB73     		strb	r3, [r7, #15]
 6358 12fe 0CE0     		b	.L424
 6359              	.L425:
1294:.\Protocolo.c **** 							lado4.totales[0][x]=Surtidor_rxBuffer[x+4]; 
 6360              		.loc 1 1294 0 discriminator 3
 6361 1300 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6362 1302 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6363 1304 0432     		adds	r2, r2, #4
 6364 1306 3049     		ldr	r1, .L503
 6365 1308 8A5C     		ldrb	r2, [r1, r2]
 6366 130a D1B2     		uxtb	r1, r2
 6367 130c 304A     		ldr	r2, .L503+8
 6368 130e 1344     		add	r3, r3, r2
 6369 1310 0A46     		mov	r2, r1
 6370 1312 9A70     		strb	r2, [r3, #2]
1293:.\Protocolo.c **** 							lado4.totales[0][x]=Surtidor_rxBuffer[x+4]; 
 6371              		.loc 1 1293 0 discriminator 3
 6372 1314 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6373 1316 0133     		adds	r3, r3, #1
 6374 1318 FB73     		strb	r3, [r7, #15]
 6375              	.L424:
1293:.\Protocolo.c **** 							lado4.totales[0][x]=Surtidor_rxBuffer[x+4]; 
 6376              		.loc 1 1293 0 is_stmt 0 discriminator 1
 6377 131a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6378 131c 072B     		cmp	r3, #7
 6379 131e EFD9     		bls	.L425
1295:.\Protocolo.c **** 						}
1296:.\Protocolo.c **** 						for(x=0;x<=7;x++){
 6380              		.loc 1 1296 0 is_stmt 1
 6381 1320 0023     		movs	r3, #0
 6382 1322 FB73     		strb	r3, [r7, #15]
 6383 1324 16E0     		b	.L426
 6384              	.L428:
1297:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 6385              		.loc 1 1297 0
 6386 1326 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6387 1328 0D33     		adds	r3, r3, #13
 6388 132a 274A     		ldr	r2, .L503
 6389 132c D35C     		ldrb	r3, [r2, r3]
 6390 132e DBB2     		uxtb	r3, r3
 6391 1330 002B     		cmp	r3, #0
 6392 1332 01D1     		bne	.L427
1298:.\Protocolo.c ****                                 return 0;
 6393              		.loc 1 1298 0
 6394 1334 0023     		movs	r3, #0
 6395 1336 8CE2     		b	.L199
 6396              	.L427:
1299:.\Protocolo.c ****                             }
1300:.\Protocolo.c **** 							lado4.totales[0][x+12]=Surtidor_rxBuffer[x+13];
 6397              		.loc 1 1300 0 discriminator 2
 6398 1338 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6399 133a 0C33     		adds	r3, r3, #12
 6400 133c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6401 133e 0D32     		adds	r2, r2, #13
 6402 1340 2149     		ldr	r1, .L503
 6403 1342 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 141


 6404 1344 D1B2     		uxtb	r1, r2
 6405 1346 224A     		ldr	r2, .L503+8
 6406 1348 1344     		add	r3, r3, r2
 6407 134a 0A46     		mov	r2, r1
 6408 134c 9A70     		strb	r2, [r3, #2]
1296:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 6409              		.loc 1 1296 0 discriminator 2
 6410 134e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6411 1350 0133     		adds	r3, r3, #1
 6412 1352 FB73     		strb	r3, [r7, #15]
 6413              	.L426:
1296:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+13]==0){
 6414              		.loc 1 1296 0 is_stmt 0 discriminator 1
 6415 1354 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6416 1356 072B     		cmp	r3, #7
 6417 1358 E5D9     		bls	.L428
1301:.\Protocolo.c **** 						}
1302:.\Protocolo.c **** 						for(x=0;x<=3;x++){
 6418              		.loc 1 1302 0 is_stmt 1
 6419 135a 0023     		movs	r3, #0
 6420 135c FB73     		strb	r3, [r7, #15]
 6421 135e 0DE0     		b	.L429
 6422              	.L430:
1303:.\Protocolo.c **** 							lado4.ppu[0][x]=Surtidor_rxBuffer[x+22];
 6423              		.loc 1 1303 0 discriminator 3
 6424 1360 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6425 1362 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6426 1364 1632     		adds	r2, r2, #22
 6427 1366 1849     		ldr	r1, .L503
 6428 1368 8A5C     		ldrb	r2, [r1, r2]
 6429 136a D1B2     		uxtb	r1, r2
 6430 136c 184A     		ldr	r2, .L503+8
 6431 136e 1344     		add	r3, r3, r2
 6432 1370 0A46     		mov	r2, r1
 6433 1372 83F84A20 		strb	r2, [r3, #74]
1302:.\Protocolo.c **** 							lado4.ppu[0][x]=Surtidor_rxBuffer[x+22];
 6434              		.loc 1 1302 0 discriminator 3
 6435 1376 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6436 1378 0133     		adds	r3, r3, #1
 6437 137a FB73     		strb	r3, [r7, #15]
 6438              	.L429:
1302:.\Protocolo.c **** 							lado4.ppu[0][x]=Surtidor_rxBuffer[x+22];
 6439              		.loc 1 1302 0 is_stmt 0 discriminator 1
 6440 137c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6441 137e 032B     		cmp	r3, #3
 6442 1380 EED9     		bls	.L430
1304:.\Protocolo.c **** 						}				
1305:.\Protocolo.c **** 						if(nmangueras==2){
 6443              		.loc 1 1305 0 is_stmt 1
 6444 1382 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6445 1384 022B     		cmp	r3, #2
 6446 1386 50D1     		bne	.L431
1306:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6447              		.loc 1 1306 0
 6448 1388 0023     		movs	r3, #0
 6449 138a FB73     		strb	r3, [r7, #15]
 6450 138c 0CE0     		b	.L432
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 142


 6451              	.L433:
1307:.\Protocolo.c **** 								lado4.totales[1][x]=Surtidor_rxBuffer[x+34];
 6452              		.loc 1 1307 0 discriminator 3
 6453 138e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6454 1390 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6455 1392 2232     		adds	r2, r2, #34
 6456 1394 0C49     		ldr	r1, .L503
 6457 1396 8A5C     		ldrb	r2, [r1, r2]
 6458 1398 D1B2     		uxtb	r1, r2
 6459 139a 0D4A     		ldr	r2, .L503+8
 6460 139c 1344     		add	r3, r3, r2
 6461 139e 0A46     		mov	r2, r1
 6462 13a0 9A76     		strb	r2, [r3, #26]
1306:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6463              		.loc 1 1306 0 discriminator 3
 6464 13a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6465 13a4 0133     		adds	r3, r3, #1
 6466 13a6 FB73     		strb	r3, [r7, #15]
 6467              	.L432:
1306:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6468              		.loc 1 1306 0 is_stmt 0 discriminator 1
 6469 13a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6470 13aa 072B     		cmp	r3, #7
 6471 13ac EFD9     		bls	.L433
1308:.\Protocolo.c **** 							}
1309:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6472              		.loc 1 1309 0 is_stmt 1
 6473 13ae 0023     		movs	r3, #0
 6474 13b0 FB73     		strb	r3, [r7, #15]
 6475 13b2 1FE0     		b	.L434
 6476              	.L436:
1310:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 6477              		.loc 1 1310 0
 6478 13b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6479 13b6 2B33     		adds	r3, r3, #43
 6480 13b8 034A     		ldr	r2, .L503
 6481 13ba D35C     		ldrb	r3, [r2, r3]
 6482 13bc DBB2     		uxtb	r3, r3
 6483 13be 002B     		cmp	r3, #0
 6484 13c0 0AD1     		bne	.L435
1311:.\Protocolo.c ****                                     return 0;
 6485              		.loc 1 1311 0
 6486 13c2 0023     		movs	r3, #0
 6487 13c4 45E2     		b	.L199
 6488              	.L504:
 6489 13c6 00BF     		.align	2
 6490              	.L503:
 6491 13c8 00000000 		.word	Surtidor_rxBuffer
 6492 13cc 00000000 		.word	lado3
 6493 13d0 00000000 		.word	lado4
 6494 13d4 00000000 		.word	version
 6495              	.L435:
1312:.\Protocolo.c ****                                 }                                
1313:.\Protocolo.c **** 								lado4.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 6496              		.loc 1 1313 0 discriminator 2
 6497 13d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6498 13da 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 143


 6499 13dc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6500 13de 2B32     		adds	r2, r2, #43
 6501 13e0 B049     		ldr	r1, .L505
 6502 13e2 8A5C     		ldrb	r2, [r1, r2]
 6503 13e4 D1B2     		uxtb	r1, r2
 6504 13e6 B04A     		ldr	r2, .L505+4
 6505 13e8 1344     		add	r3, r3, r2
 6506 13ea 0A46     		mov	r2, r1
 6507 13ec 9A76     		strb	r2, [r3, #26]
1309:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 6508              		.loc 1 1309 0 discriminator 2
 6509 13ee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6510 13f0 0133     		adds	r3, r3, #1
 6511 13f2 FB73     		strb	r3, [r7, #15]
 6512              	.L434:
1309:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 6513              		.loc 1 1309 0 is_stmt 0 discriminator 1
 6514 13f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6515 13f6 072B     		cmp	r3, #7
 6516 13f8 DCD9     		bls	.L436
1314:.\Protocolo.c **** 							}
1315:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 6517              		.loc 1 1315 0 is_stmt 1
 6518 13fa 0023     		movs	r3, #0
 6519 13fc FB73     		strb	r3, [r7, #15]
 6520 13fe 0DE0     		b	.L437
 6521              	.L438:
1316:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+52];
 6522              		.loc 1 1316 0 discriminator 3
 6523 1400 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6524 1402 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6525 1404 3432     		adds	r2, r2, #52
 6526 1406 A749     		ldr	r1, .L505
 6527 1408 8A5C     		ldrb	r2, [r1, r2]
 6528 140a D1B2     		uxtb	r1, r2
 6529 140c A64A     		ldr	r2, .L505+4
 6530 140e 1344     		add	r3, r3, r2
 6531 1410 0A46     		mov	r2, r1
 6532 1412 83F84F20 		strb	r2, [r3, #79]
1315:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+52];
 6533              		.loc 1 1315 0 discriminator 3
 6534 1416 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6535 1418 0133     		adds	r3, r3, #1
 6536 141a FB73     		strb	r3, [r7, #15]
 6537              	.L437:
1315:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+52];
 6538              		.loc 1 1315 0 is_stmt 0 discriminator 1
 6539 141c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6540 141e 032B     		cmp	r3, #3
 6541 1420 EED9     		bls	.L438
1317:.\Protocolo.c **** 							}	
1318:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 6542              		.loc 1 1318 0 is_stmt 1
 6543 1422 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1319:.\Protocolo.c ****     						return 2;                            
 6544              		.loc 1 1319 0
 6545 1426 0223     		movs	r3, #2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 144


 6546 1428 13E2     		b	.L199
 6547              	.L431:
1320:.\Protocolo.c **** 						}
1321:.\Protocolo.c **** 						if(nmangueras==3){
 6548              		.loc 1 1321 0
 6549 142a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6550 142c 032B     		cmp	r3, #3
 6551 142e 40F08E80 		bne	.L439
1322:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6552              		.loc 1 1322 0
 6553 1432 0023     		movs	r3, #0
 6554 1434 FB73     		strb	r3, [r7, #15]
 6555 1436 0CE0     		b	.L440
 6556              	.L441:
1323:.\Protocolo.c **** 								lado4.totales[1][x]=Surtidor_rxBuffer[x+34];
 6557              		.loc 1 1323 0 discriminator 3
 6558 1438 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6559 143a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6560 143c 2232     		adds	r2, r2, #34
 6561 143e 9949     		ldr	r1, .L505
 6562 1440 8A5C     		ldrb	r2, [r1, r2]
 6563 1442 D1B2     		uxtb	r1, r2
 6564 1444 984A     		ldr	r2, .L505+4
 6565 1446 1344     		add	r3, r3, r2
 6566 1448 0A46     		mov	r2, r1
 6567 144a 9A76     		strb	r2, [r3, #26]
1322:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6568              		.loc 1 1322 0 discriminator 3
 6569 144c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6570 144e 0133     		adds	r3, r3, #1
 6571 1450 FB73     		strb	r3, [r7, #15]
 6572              	.L440:
1322:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6573              		.loc 1 1322 0 is_stmt 0 discriminator 1
 6574 1452 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6575 1454 072B     		cmp	r3, #7
 6576 1456 EFD9     		bls	.L441
1324:.\Protocolo.c **** 							}
1325:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6577              		.loc 1 1325 0 is_stmt 1
 6578 1458 0023     		movs	r3, #0
 6579 145a FB73     		strb	r3, [r7, #15]
 6580 145c 16E0     		b	.L442
 6581              	.L444:
1326:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 6582              		.loc 1 1326 0
 6583 145e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6584 1460 2B33     		adds	r3, r3, #43
 6585 1462 904A     		ldr	r2, .L505
 6586 1464 D35C     		ldrb	r3, [r2, r3]
 6587 1466 DBB2     		uxtb	r3, r3
 6588 1468 002B     		cmp	r3, #0
 6589 146a 01D1     		bne	.L443
1327:.\Protocolo.c ****                                     return 0;
 6590              		.loc 1 1327 0
 6591 146c 0023     		movs	r3, #0
 6592 146e F0E1     		b	.L199
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 145


 6593              	.L443:
1328:.\Protocolo.c ****                                 }                                 
1329:.\Protocolo.c **** 								lado4.totales[1][x+12]=Surtidor_rxBuffer[x+43];
 6594              		.loc 1 1329 0 discriminator 2
 6595 1470 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6596 1472 0C33     		adds	r3, r3, #12
 6597 1474 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6598 1476 2B32     		adds	r2, r2, #43
 6599 1478 8A49     		ldr	r1, .L505
 6600 147a 8A5C     		ldrb	r2, [r1, r2]
 6601 147c D1B2     		uxtb	r1, r2
 6602 147e 8A4A     		ldr	r2, .L505+4
 6603 1480 1344     		add	r3, r3, r2
 6604 1482 0A46     		mov	r2, r1
 6605 1484 9A76     		strb	r2, [r3, #26]
1325:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 6606              		.loc 1 1325 0 discriminator 2
 6607 1486 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6608 1488 0133     		adds	r3, r3, #1
 6609 148a FB73     		strb	r3, [r7, #15]
 6610              	.L442:
1325:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+43]==0){
 6611              		.loc 1 1325 0 is_stmt 0 discriminator 1
 6612 148c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6613 148e 072B     		cmp	r3, #7
 6614 1490 E5D9     		bls	.L444
1330:.\Protocolo.c **** 							}
1331:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 6615              		.loc 1 1331 0 is_stmt 1
 6616 1492 0023     		movs	r3, #0
 6617 1494 FB73     		strb	r3, [r7, #15]
 6618 1496 0DE0     		b	.L445
 6619              	.L446:
1332:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+52];
 6620              		.loc 1 1332 0 discriminator 3
 6621 1498 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6622 149a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6623 149c 3432     		adds	r2, r2, #52
 6624 149e 8149     		ldr	r1, .L505
 6625 14a0 8A5C     		ldrb	r2, [r1, r2]
 6626 14a2 D1B2     		uxtb	r1, r2
 6627 14a4 804A     		ldr	r2, .L505+4
 6628 14a6 1344     		add	r3, r3, r2
 6629 14a8 0A46     		mov	r2, r1
 6630 14aa 83F84F20 		strb	r2, [r3, #79]
1331:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+52];
 6631              		.loc 1 1331 0 discriminator 3
 6632 14ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6633 14b0 0133     		adds	r3, r3, #1
 6634 14b2 FB73     		strb	r3, [r7, #15]
 6635              	.L445:
1331:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+52];
 6636              		.loc 1 1331 0 is_stmt 0 discriminator 1
 6637 14b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6638 14b6 032B     		cmp	r3, #3
 6639 14b8 EED9     		bls	.L446
1333:.\Protocolo.c **** 							}						
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 146


1334:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6640              		.loc 1 1334 0 is_stmt 1
 6641 14ba 0023     		movs	r3, #0
 6642 14bc FB73     		strb	r3, [r7, #15]
 6643 14be 0DE0     		b	.L447
 6644              	.L448:
1335:.\Protocolo.c **** 								lado4.totales[2][x]=Surtidor_rxBuffer[x+64];
 6645              		.loc 1 1335 0 discriminator 3
 6646 14c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6647 14c2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6648 14c4 4032     		adds	r2, r2, #64
 6649 14c6 7749     		ldr	r1, .L505
 6650 14c8 8A5C     		ldrb	r2, [r1, r2]
 6651 14ca D1B2     		uxtb	r1, r2
 6652 14cc 764A     		ldr	r2, .L505+4
 6653 14ce 1344     		add	r3, r3, r2
 6654 14d0 0A46     		mov	r2, r1
 6655 14d2 83F83220 		strb	r2, [r3, #50]
1334:.\Protocolo.c **** 								lado4.totales[2][x]=Surtidor_rxBuffer[x+64];
 6656              		.loc 1 1334 0 discriminator 3
 6657 14d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6658 14d8 0133     		adds	r3, r3, #1
 6659 14da FB73     		strb	r3, [r7, #15]
 6660              	.L447:
1334:.\Protocolo.c **** 								lado4.totales[2][x]=Surtidor_rxBuffer[x+64];
 6661              		.loc 1 1334 0 is_stmt 0 discriminator 1
 6662 14dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6663 14de 072B     		cmp	r3, #7
 6664 14e0 EED9     		bls	.L448
1336:.\Protocolo.c **** 							}
1337:.\Protocolo.c **** 							for(x=0;x<=7;x++){
 6665              		.loc 1 1337 0 is_stmt 1
 6666 14e2 0023     		movs	r3, #0
 6667 14e4 FB73     		strb	r3, [r7, #15]
 6668 14e6 17E0     		b	.L449
 6669              	.L451:
1338:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 6670              		.loc 1 1338 0
 6671 14e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6672 14ea 4933     		adds	r3, r3, #73
 6673 14ec 6D4A     		ldr	r2, .L505
 6674 14ee D35C     		ldrb	r3, [r2, r3]
 6675 14f0 DBB2     		uxtb	r3, r3
 6676 14f2 002B     		cmp	r3, #0
 6677 14f4 01D1     		bne	.L450
1339:.\Protocolo.c ****                                     return 0;
 6678              		.loc 1 1339 0
 6679 14f6 0023     		movs	r3, #0
 6680 14f8 ABE1     		b	.L199
 6681              	.L450:
1340:.\Protocolo.c ****                                 }                                 
1341:.\Protocolo.c **** 								lado4.totales[2][x+12]=Surtidor_rxBuffer[x+73];
 6682              		.loc 1 1341 0 discriminator 2
 6683 14fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6684 14fc 0C33     		adds	r3, r3, #12
 6685 14fe FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6686 1500 4932     		adds	r2, r2, #73
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 147


 6687 1502 6849     		ldr	r1, .L505
 6688 1504 8A5C     		ldrb	r2, [r1, r2]
 6689 1506 D1B2     		uxtb	r1, r2
 6690 1508 674A     		ldr	r2, .L505+4
 6691 150a 1344     		add	r3, r3, r2
 6692 150c 0A46     		mov	r2, r1
 6693 150e 83F83220 		strb	r2, [r3, #50]
1337:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 6694              		.loc 1 1337 0 discriminator 2
 6695 1512 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6696 1514 0133     		adds	r3, r3, #1
 6697 1516 FB73     		strb	r3, [r7, #15]
 6698              	.L449:
1337:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+73]==0){
 6699              		.loc 1 1337 0 is_stmt 0 discriminator 1
 6700 1518 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6701 151a 072B     		cmp	r3, #7
 6702 151c E4D9     		bls	.L451
1342:.\Protocolo.c **** 							}
1343:.\Protocolo.c **** 							for(x=0;x<=3;x++){
 6703              		.loc 1 1343 0 is_stmt 1
 6704 151e 0023     		movs	r3, #0
 6705 1520 FB73     		strb	r3, [r7, #15]
 6706 1522 0DE0     		b	.L452
 6707              	.L453:
1344:.\Protocolo.c **** 								lado4.ppu[2][x]=Surtidor_rxBuffer[x+82];
 6708              		.loc 1 1344 0 discriminator 3
 6709 1524 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6710 1526 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6711 1528 5232     		adds	r2, r2, #82
 6712 152a 5E49     		ldr	r1, .L505
 6713 152c 8A5C     		ldrb	r2, [r1, r2]
 6714 152e D1B2     		uxtb	r1, r2
 6715 1530 5D4A     		ldr	r2, .L505+4
 6716 1532 1344     		add	r3, r3, r2
 6717 1534 0A46     		mov	r2, r1
 6718 1536 83F85420 		strb	r2, [r3, #84]
1343:.\Protocolo.c **** 								lado4.ppu[2][x]=Surtidor_rxBuffer[x+82];
 6719              		.loc 1 1343 0 discriminator 3
 6720 153a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6721 153c 0133     		adds	r3, r3, #1
 6722 153e FB73     		strb	r3, [r7, #15]
 6723              	.L452:
1343:.\Protocolo.c **** 								lado4.ppu[2][x]=Surtidor_rxBuffer[x+82];
 6724              		.loc 1 1343 0 is_stmt 0 discriminator 1
 6725 1540 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6726 1542 032B     		cmp	r3, #3
 6727 1544 EED9     		bls	.L453
1345:.\Protocolo.c **** 							}
1346:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 6728              		.loc 1 1346 0 is_stmt 1
 6729 1546 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1347:.\Protocolo.c ****     						return 3;                            
 6730              		.loc 1 1347 0
 6731 154a 0323     		movs	r3, #3
 6732 154c 81E1     		b	.L199
 6733              	.L439:
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 148


1348:.\Protocolo.c **** 						}
1349:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 6734              		.loc 1 1349 0
 6735 154e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1350:.\Protocolo.c **** 						return 1;
 6736              		.loc 1 1350 0
 6737 1552 0123     		movs	r3, #1
 6738 1554 7DE1     		b	.L199
 6739              	.L419:
1351:.\Protocolo.c **** 					}
1352:.\Protocolo.c **** 					else{
1353:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 6740              		.loc 1 1353 0
 6741 1556 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1354:.\Protocolo.c **** 						return 0;
 6742              		.loc 1 1354 0
 6743 155a 0023     		movs	r3, #0
 6744 155c 79E1     		b	.L199
 6745              	.L418:
1355:.\Protocolo.c **** 					}					
1356:.\Protocolo.c **** 				}
1357:.\Protocolo.c **** 				else{
1358:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 6746              		.loc 1 1358 0
 6747 155e FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1359:.\Protocolo.c **** 					return 0;		
 6748              		.loc 1 1359 0
 6749 1562 0023     		movs	r3, #0
 6750 1564 75E1     		b	.L199
 6751              	.L416:
1360:.\Protocolo.c **** 				}
1361:.\Protocolo.c **** 			}
1362:.\Protocolo.c **** 			else{
1363:.\Protocolo.c **** 				CyDelay(900);
 6752              		.loc 1 1363 0
 6753 1566 4FF46170 		mov	r0, #900
 6754 156a FFF7FEFF 		bl	CyDelay
1364:.\Protocolo.c **** 				x=Surtidor_GetRxBufferSize();
 6755              		.loc 1 1364 0
 6756 156e FFF7FEFF 		bl	Surtidor_GetRxBufferSize
 6757 1572 0346     		mov	r3, r0
 6758 1574 FB73     		strb	r3, [r7, #15]
1365:.\Protocolo.c **** 				if((x==46)||(x==88)||(x==130)){				
 6759              		.loc 1 1365 0
 6760 1576 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6761 1578 2E2B     		cmp	r3, #46
 6762 157a 06D0     		beq	.L454
 6763              		.loc 1 1365 0 is_stmt 0 discriminator 1
 6764 157c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6765 157e 582B     		cmp	r3, #88
 6766 1580 03D0     		beq	.L454
 6767              		.loc 1 1365 0 discriminator 2
 6768 1582 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6769 1584 822B     		cmp	r3, #130
 6770 1586 40F05D81 		bne	.L455
 6771              	.L454:
1366:.\Protocolo.c **** 					if((Surtidor_rxBuffer[0]==0xFF)&&(Surtidor_rxBuffer[1]==0xF6)&&(Surtidor_rxBuffer[3]==0xF9)){
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 149


 6772              		.loc 1 1366 0 is_stmt 1
 6773 158a 464B     		ldr	r3, .L505
 6774 158c 1B78     		ldrb	r3, [r3]
 6775 158e DBB2     		uxtb	r3, r3
 6776 1590 FF2B     		cmp	r3, #255
 6777 1592 40F05381 		bne	.L456
 6778              		.loc 1 1366 0 is_stmt 0 discriminator 1
 6779 1596 434B     		ldr	r3, .L505
 6780 1598 5B78     		ldrb	r3, [r3, #1]
 6781 159a DBB2     		uxtb	r3, r3
 6782 159c F62B     		cmp	r3, #246
 6783 159e 40F04D81 		bne	.L456
 6784              		.loc 1 1366 0 discriminator 2
 6785 15a2 404B     		ldr	r3, .L505
 6786 15a4 DB78     		ldrb	r3, [r3, #3]
 6787 15a6 DBB2     		uxtb	r3, r3
 6788 15a8 F92B     		cmp	r3, #249
 6789 15aa 40F04781 		bne	.L456
1367:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 6790              		.loc 1 1367 0 is_stmt 1
 6791 15ae 0023     		movs	r3, #0
 6792 15b0 BB73     		strb	r3, [r7, #14]
 6793 15b2 16E0     		b	.L457
 6794              	.L460:
1368:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 6795              		.loc 1 1368 0
 6796 15b4 0023     		movs	r3, #0
 6797 15b6 FB73     		strb	r3, [r7, #15]
 6798 15b8 0DE0     		b	.L458
 6799              	.L459:
1369:.\Protocolo.c ****                     			lado4.totales[y][x]=0;
 6800              		.loc 1 1369 0 discriminator 3
 6801 15ba BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 6802 15bc F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 6803 15be 3A48     		ldr	r0, .L505+4
 6804 15c0 1346     		mov	r3, r2
 6805 15c2 5B00     		lsls	r3, r3, #1
 6806 15c4 1344     		add	r3, r3, r2
 6807 15c6 DB00     		lsls	r3, r3, #3
 6808 15c8 0B44     		add	r3, r3, r1
 6809 15ca 0344     		add	r3, r3, r0
 6810 15cc 0022     		movs	r2, #0
 6811 15ce 9A70     		strb	r2, [r3, #2]
1368:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 6812              		.loc 1 1368 0 discriminator 3
 6813 15d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6814 15d2 0133     		adds	r3, r3, #1
 6815 15d4 FB73     		strb	r3, [r7, #15]
 6816              	.L458:
1368:.\Protocolo.c ****                     		for(x=0;x<=23;x++){
 6817              		.loc 1 1368 0 is_stmt 0 discriminator 1
 6818 15d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6819 15d8 172B     		cmp	r3, #23
 6820 15da EED9     		bls	.L459
1367:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 6821              		.loc 1 1367 0 is_stmt 1 discriminator 2
 6822 15dc BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 150


 6823 15de 0133     		adds	r3, r3, #1
 6824 15e0 BB73     		strb	r3, [r7, #14]
 6825              	.L457:
1367:.\Protocolo.c ****                     	for(y=0;y<=2;y++){
 6826              		.loc 1 1367 0 is_stmt 0 discriminator 1
 6827 15e2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 6828 15e4 022B     		cmp	r3, #2
 6829 15e6 E5D9     		bls	.L460
1370:.\Protocolo.c ****                     		}
1371:.\Protocolo.c ****                     	}                        
1372:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 6830              		.loc 1 1372 0 is_stmt 1
 6831 15e8 0023     		movs	r3, #0
 6832 15ea FB73     		strb	r3, [r7, #15]
 6833 15ec 0CE0     		b	.L461
 6834              	.L462:
1373:.\Protocolo.c **** 							lado4.totales[0][x]=Surtidor_rxBuffer[x+4];
 6835              		.loc 1 1373 0 discriminator 3
 6836 15ee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6837 15f0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6838 15f2 0432     		adds	r2, r2, #4
 6839 15f4 2B49     		ldr	r1, .L505
 6840 15f6 8A5C     		ldrb	r2, [r1, r2]
 6841 15f8 D1B2     		uxtb	r1, r2
 6842 15fa 2B4A     		ldr	r2, .L505+4
 6843 15fc 1344     		add	r3, r3, r2
 6844 15fe 0A46     		mov	r2, r1
 6845 1600 9A70     		strb	r2, [r3, #2]
1372:.\Protocolo.c **** 							lado4.totales[0][x]=Surtidor_rxBuffer[x+4];
 6846              		.loc 1 1372 0 discriminator 3
 6847 1602 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6848 1604 0133     		adds	r3, r3, #1
 6849 1606 FB73     		strb	r3, [r7, #15]
 6850              	.L461:
1372:.\Protocolo.c **** 							lado4.totales[0][x]=Surtidor_rxBuffer[x+4];
 6851              		.loc 1 1372 0 is_stmt 0 discriminator 1
 6852 1608 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6853 160a 0B2B     		cmp	r3, #11
 6854 160c EFD9     		bls	.L462
1374:.\Protocolo.c **** 						}
1375:.\Protocolo.c **** 						for(x=0;x<=11;x++){
 6855              		.loc 1 1375 0 is_stmt 1
 6856 160e 0023     		movs	r3, #0
 6857 1610 FB73     		strb	r3, [r7, #15]
 6858 1612 16E0     		b	.L463
 6859              	.L465:
1376:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 6860              		.loc 1 1376 0
 6861 1614 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6862 1616 1133     		adds	r3, r3, #17
 6863 1618 224A     		ldr	r2, .L505
 6864 161a D35C     		ldrb	r3, [r2, r3]
 6865 161c DBB2     		uxtb	r3, r3
 6866 161e 002B     		cmp	r3, #0
 6867 1620 01D1     		bne	.L464
1377:.\Protocolo.c ****                                 return 0;
 6868              		.loc 1 1377 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 151


 6869 1622 0023     		movs	r3, #0
 6870 1624 15E1     		b	.L199
 6871              	.L464:
1378:.\Protocolo.c ****                             }                             
1379:.\Protocolo.c **** 							lado4.totales[0][x+12]=Surtidor_rxBuffer[x+17];
 6872              		.loc 1 1379 0 discriminator 2
 6873 1626 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6874 1628 0C33     		adds	r3, r3, #12
 6875 162a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6876 162c 1132     		adds	r2, r2, #17
 6877 162e 1D49     		ldr	r1, .L505
 6878 1630 8A5C     		ldrb	r2, [r1, r2]
 6879 1632 D1B2     		uxtb	r1, r2
 6880 1634 1C4A     		ldr	r2, .L505+4
 6881 1636 1344     		add	r3, r3, r2
 6882 1638 0A46     		mov	r2, r1
 6883 163a 9A70     		strb	r2, [r3, #2]
1375:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 6884              		.loc 1 1375 0 discriminator 2
 6885 163c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6886 163e 0133     		adds	r3, r3, #1
 6887 1640 FB73     		strb	r3, [r7, #15]
 6888              	.L463:
1375:.\Protocolo.c ****                             if(Surtidor_rxBuffer[x+17]==0){
 6889              		.loc 1 1375 0 is_stmt 0 discriminator 1
 6890 1642 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6891 1644 0B2B     		cmp	r3, #11
 6892 1646 E5D9     		bls	.L465
1380:.\Protocolo.c **** 						}
1381:.\Protocolo.c **** 						for(x=0;x<=4;x++){
 6893              		.loc 1 1381 0 is_stmt 1
 6894 1648 0023     		movs	r3, #0
 6895 164a FB73     		strb	r3, [r7, #15]
 6896 164c 0DE0     		b	.L466
 6897              	.L467:
1382:.\Protocolo.c **** 							lado4.ppu[0][x]=Surtidor_rxBuffer[x+30];
 6898              		.loc 1 1382 0 discriminator 3
 6899 164e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6900 1650 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6901 1652 1E32     		adds	r2, r2, #30
 6902 1654 1349     		ldr	r1, .L505
 6903 1656 8A5C     		ldrb	r2, [r1, r2]
 6904 1658 D1B2     		uxtb	r1, r2
 6905 165a 134A     		ldr	r2, .L505+4
 6906 165c 1344     		add	r3, r3, r2
 6907 165e 0A46     		mov	r2, r1
 6908 1660 83F84A20 		strb	r2, [r3, #74]
1381:.\Protocolo.c **** 							lado4.ppu[0][x]=Surtidor_rxBuffer[x+30];
 6909              		.loc 1 1381 0 discriminator 3
 6910 1664 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6911 1666 0133     		adds	r3, r3, #1
 6912 1668 FB73     		strb	r3, [r7, #15]
 6913              	.L466:
1381:.\Protocolo.c **** 							lado4.ppu[0][x]=Surtidor_rxBuffer[x+30];
 6914              		.loc 1 1381 0 is_stmt 0 discriminator 1
 6915 166a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6916 166c 042B     		cmp	r3, #4
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 152


 6917 166e EED9     		bls	.L467
1383:.\Protocolo.c **** 						}				
1384:.\Protocolo.c **** 						if(nmangueras==2){
 6918              		.loc 1 1384 0 is_stmt 1
 6919 1670 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6920 1672 022B     		cmp	r3, #2
 6921 1674 4CD1     		bne	.L468
1385:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6922              		.loc 1 1385 0
 6923 1676 0023     		movs	r3, #0
 6924 1678 FB73     		strb	r3, [r7, #15]
 6925 167a 0CE0     		b	.L469
 6926              	.L470:
1386:.\Protocolo.c **** 								lado4.totales[1][x]=Surtidor_rxBuffer[x+46];
 6927              		.loc 1 1386 0 discriminator 3
 6928 167c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6929 167e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6930 1680 2E32     		adds	r2, r2, #46
 6931 1682 0849     		ldr	r1, .L505
 6932 1684 8A5C     		ldrb	r2, [r1, r2]
 6933 1686 D1B2     		uxtb	r1, r2
 6934 1688 074A     		ldr	r2, .L505+4
 6935 168a 1344     		add	r3, r3, r2
 6936 168c 0A46     		mov	r2, r1
 6937 168e 9A76     		strb	r2, [r3, #26]
1385:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6938              		.loc 1 1385 0 discriminator 3
 6939 1690 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6940 1692 0133     		adds	r3, r3, #1
 6941 1694 FB73     		strb	r3, [r7, #15]
 6942              	.L469:
1385:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6943              		.loc 1 1385 0 is_stmt 0 discriminator 1
 6944 1696 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6945 1698 0B2B     		cmp	r3, #11
 6946 169a EFD9     		bls	.L470
1387:.\Protocolo.c **** 							}
1388:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 6947              		.loc 1 1388 0 is_stmt 1
 6948 169c 0023     		movs	r3, #0
 6949 169e FB73     		strb	r3, [r7, #15]
 6950 16a0 1BE0     		b	.L471
 6951              	.L506:
 6952 16a2 00BF     		.align	2
 6953              	.L505:
 6954 16a4 00000000 		.word	Surtidor_rxBuffer
 6955 16a8 00000000 		.word	lado4
 6956              	.L473:
1389:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 6957              		.loc 1 1389 0
 6958 16ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6959 16ae 3B33     		adds	r3, r3, #59
 6960 16b0 6A4A     		ldr	r2, .L507
 6961 16b2 D35C     		ldrb	r3, [r2, r3]
 6962 16b4 DBB2     		uxtb	r3, r3
 6963 16b6 002B     		cmp	r3, #0
 6964 16b8 01D1     		bne	.L472
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 153


1390:.\Protocolo.c ****                                     return 0;
 6965              		.loc 1 1390 0
 6966 16ba 0023     		movs	r3, #0
 6967 16bc C9E0     		b	.L199
 6968              	.L472:
1391:.\Protocolo.c ****                                 }                                 
1392:.\Protocolo.c **** 								lado4.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 6969              		.loc 1 1392 0 discriminator 2
 6970 16be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6971 16c0 0C33     		adds	r3, r3, #12
 6972 16c2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6973 16c4 3B32     		adds	r2, r2, #59
 6974 16c6 6549     		ldr	r1, .L507
 6975 16c8 8A5C     		ldrb	r2, [r1, r2]
 6976 16ca D1B2     		uxtb	r1, r2
 6977 16cc 644A     		ldr	r2, .L507+4
 6978 16ce 1344     		add	r3, r3, r2
 6979 16d0 0A46     		mov	r2, r1
 6980 16d2 9A76     		strb	r2, [r3, #26]
1388:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 6981              		.loc 1 1388 0 discriminator 2
 6982 16d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6983 16d6 0133     		adds	r3, r3, #1
 6984 16d8 FB73     		strb	r3, [r7, #15]
 6985              	.L471:
1388:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 6986              		.loc 1 1388 0 is_stmt 0 discriminator 1
 6987 16da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6988 16dc 0B2B     		cmp	r3, #11
 6989 16de E5D9     		bls	.L473
1393:.\Protocolo.c **** 							}
1394:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 6990              		.loc 1 1394 0 is_stmt 1
 6991 16e0 0023     		movs	r3, #0
 6992 16e2 FB73     		strb	r3, [r7, #15]
 6993 16e4 0DE0     		b	.L474
 6994              	.L475:
1395:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+72];
 6995              		.loc 1 1395 0 discriminator 3
 6996 16e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6997 16e8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 6998 16ea 4832     		adds	r2, r2, #72
 6999 16ec 5B49     		ldr	r1, .L507
 7000 16ee 8A5C     		ldrb	r2, [r1, r2]
 7001 16f0 D1B2     		uxtb	r1, r2
 7002 16f2 5B4A     		ldr	r2, .L507+4
 7003 16f4 1344     		add	r3, r3, r2
 7004 16f6 0A46     		mov	r2, r1
 7005 16f8 83F84F20 		strb	r2, [r3, #79]
1394:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+72];
 7006              		.loc 1 1394 0 discriminator 3
 7007 16fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7008 16fe 0133     		adds	r3, r3, #1
 7009 1700 FB73     		strb	r3, [r7, #15]
 7010              	.L474:
1394:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+72];
 7011              		.loc 1 1394 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 154


 7012 1702 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7013 1704 042B     		cmp	r3, #4
 7014 1706 EED9     		bls	.L475
1396:.\Protocolo.c **** 							}
1397:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 7015              		.loc 1 1397 0 is_stmt 1
 7016 1708 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1398:.\Protocolo.c ****     						return 2;                            
 7017              		.loc 1 1398 0
 7018 170c 0223     		movs	r3, #2
 7019 170e A0E0     		b	.L199
 7020              	.L468:
1399:.\Protocolo.c **** 						}
1400:.\Protocolo.c **** 						if(nmangueras==3){
 7021              		.loc 1 1400 0
 7022 1710 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 7023 1712 032B     		cmp	r3, #3
 7024 1714 40F08E80 		bne	.L476
1401:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 7025              		.loc 1 1401 0
 7026 1718 0023     		movs	r3, #0
 7027 171a FB73     		strb	r3, [r7, #15]
 7028 171c 0CE0     		b	.L477
 7029              	.L478:
1402:.\Protocolo.c **** 								lado4.totales[1][x]=Surtidor_rxBuffer[x+46];
 7030              		.loc 1 1402 0 discriminator 3
 7031 171e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7032 1720 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 7033 1722 2E32     		adds	r2, r2, #46
 7034 1724 4D49     		ldr	r1, .L507
 7035 1726 8A5C     		ldrb	r2, [r1, r2]
 7036 1728 D1B2     		uxtb	r1, r2
 7037 172a 4D4A     		ldr	r2, .L507+4
 7038 172c 1344     		add	r3, r3, r2
 7039 172e 0A46     		mov	r2, r1
 7040 1730 9A76     		strb	r2, [r3, #26]
1401:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 7041              		.loc 1 1401 0 discriminator 3
 7042 1732 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7043 1734 0133     		adds	r3, r3, #1
 7044 1736 FB73     		strb	r3, [r7, #15]
 7045              	.L477:
1401:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 7046              		.loc 1 1401 0 is_stmt 0 discriminator 1
 7047 1738 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7048 173a 0B2B     		cmp	r3, #11
 7049 173c EFD9     		bls	.L478
1403:.\Protocolo.c **** 							}
1404:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 7050              		.loc 1 1404 0 is_stmt 1
 7051 173e 0023     		movs	r3, #0
 7052 1740 FB73     		strb	r3, [r7, #15]
 7053 1742 16E0     		b	.L479
 7054              	.L481:
1405:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 7055              		.loc 1 1405 0
 7056 1744 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 155


 7057 1746 3B33     		adds	r3, r3, #59
 7058 1748 444A     		ldr	r2, .L507
 7059 174a D35C     		ldrb	r3, [r2, r3]
 7060 174c DBB2     		uxtb	r3, r3
 7061 174e 002B     		cmp	r3, #0
 7062 1750 01D1     		bne	.L480
1406:.\Protocolo.c ****                                     return 0;
 7063              		.loc 1 1406 0
 7064 1752 0023     		movs	r3, #0
 7065 1754 7DE0     		b	.L199
 7066              	.L480:
1407:.\Protocolo.c ****                                 }                                 
1408:.\Protocolo.c **** 								lado4.totales[1][x+12]=Surtidor_rxBuffer[x+59];
 7067              		.loc 1 1408 0 discriminator 2
 7068 1756 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7069 1758 0C33     		adds	r3, r3, #12
 7070 175a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 7071 175c 3B32     		adds	r2, r2, #59
 7072 175e 3F49     		ldr	r1, .L507
 7073 1760 8A5C     		ldrb	r2, [r1, r2]
 7074 1762 D1B2     		uxtb	r1, r2
 7075 1764 3E4A     		ldr	r2, .L507+4
 7076 1766 1344     		add	r3, r3, r2
 7077 1768 0A46     		mov	r2, r1
 7078 176a 9A76     		strb	r2, [r3, #26]
1404:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 7079              		.loc 1 1404 0 discriminator 2
 7080 176c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7081 176e 0133     		adds	r3, r3, #1
 7082 1770 FB73     		strb	r3, [r7, #15]
 7083              	.L479:
1404:.\Protocolo.c ****                                 if(Surtidor_rxBuffer[x+59]==0){
 7084              		.loc 1 1404 0 is_stmt 0 discriminator 1
 7085 1772 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7086 1774 0B2B     		cmp	r3, #11
 7087 1776 E5D9     		bls	.L481
1409:.\Protocolo.c **** 							}
1410:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 7088              		.loc 1 1410 0 is_stmt 1
 7089 1778 0023     		movs	r3, #0
 7090 177a FB73     		strb	r3, [r7, #15]
 7091 177c 0DE0     		b	.L482
 7092              	.L483:
1411:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+72];
 7093              		.loc 1 1411 0 discriminator 3
 7094 177e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7095 1780 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 7096 1782 4832     		adds	r2, r2, #72
 7097 1784 3549     		ldr	r1, .L507
 7098 1786 8A5C     		ldrb	r2, [r1, r2]
 7099 1788 D1B2     		uxtb	r1, r2
 7100 178a 354A     		ldr	r2, .L507+4
 7101 178c 1344     		add	r3, r3, r2
 7102 178e 0A46     		mov	r2, r1
 7103 1790 83F84F20 		strb	r2, [r3, #79]
1410:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+72];
 7104              		.loc 1 1410 0 discriminator 3
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 156


 7105 1794 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7106 1796 0133     		adds	r3, r3, #1
 7107 1798 FB73     		strb	r3, [r7, #15]
 7108              	.L482:
1410:.\Protocolo.c **** 								lado4.ppu[1][x]=Surtidor_rxBuffer[x+72];
 7109              		.loc 1 1410 0 is_stmt 0 discriminator 1
 7110 179a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7111 179c 042B     		cmp	r3, #4
 7112 179e EED9     		bls	.L483
1412:.\Protocolo.c **** 							}					
1413:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 7113              		.loc 1 1413 0 is_stmt 1
 7114 17a0 0023     		movs	r3, #0
 7115 17a2 FB73     		strb	r3, [r7, #15]
 7116 17a4 0DE0     		b	.L484
 7117              	.L485:
1414:.\Protocolo.c **** 								lado4.totales[2][x]=Surtidor_rxBuffer[x+88];
 7118              		.loc 1 1414 0 discriminator 3
 7119 17a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7120 17a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 7121 17aa 5832     		adds	r2, r2, #88
 7122 17ac 2B49     		ldr	r1, .L507
 7123 17ae 8A5C     		ldrb	r2, [r1, r2]
 7124 17b0 D1B2     		uxtb	r1, r2
 7125 17b2 2B4A     		ldr	r2, .L507+4
 7126 17b4 1344     		add	r3, r3, r2
 7127 17b6 0A46     		mov	r2, r1
 7128 17b8 83F83220 		strb	r2, [r3, #50]
1413:.\Protocolo.c **** 								lado4.totales[2][x]=Surtidor_rxBuffer[x+88];
 7129              		.loc 1 1413 0 discriminator 3
 7130 17bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7131 17be 0133     		adds	r3, r3, #1
 7132 17c0 FB73     		strb	r3, [r7, #15]
 7133              	.L484:
1413:.\Protocolo.c **** 								lado4.totales[2][x]=Surtidor_rxBuffer[x+88];
 7134              		.loc 1 1413 0 is_stmt 0 discriminator 1
 7135 17c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7136 17c4 0B2B     		cmp	r3, #11
 7137 17c6 EED9     		bls	.L485
1415:.\Protocolo.c **** 							}
1416:.\Protocolo.c **** 							for(x=0;x<=11;x++){
 7138              		.loc 1 1416 0 is_stmt 1
 7139 17c8 0023     		movs	r3, #0
 7140 17ca FB73     		strb	r3, [r7, #15]
 7141 17cc 17E0     		b	.L486
 7142              	.L488:
1417:.\Protocolo.c ****                                  if(Surtidor_rxBuffer[x+101]==0){
 7143              		.loc 1 1417 0
 7144 17ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7145 17d0 6533     		adds	r3, r3, #101
 7146 17d2 224A     		ldr	r2, .L507
 7147 17d4 D35C     		ldrb	r3, [r2, r3]
 7148 17d6 DBB2     		uxtb	r3, r3
 7149 17d8 002B     		cmp	r3, #0
 7150 17da 01D1     		bne	.L487
1418:.\Protocolo.c ****                                     return 0;
 7151              		.loc 1 1418 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 157


 7152 17dc 0023     		movs	r3, #0
 7153 17de 38E0     		b	.L199
 7154              	.L487:
1419:.\Protocolo.c ****                                 }                                
1420:.\Protocolo.c **** 								lado4.totales[2][x+12]=Surtidor_rxBuffer[x+101];
 7155              		.loc 1 1420 0 discriminator 2
 7156 17e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7157 17e2 0C33     		adds	r3, r3, #12
 7158 17e4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 7159 17e6 6532     		adds	r2, r2, #101
 7160 17e8 1C49     		ldr	r1, .L507
 7161 17ea 8A5C     		ldrb	r2, [r1, r2]
 7162 17ec D1B2     		uxtb	r1, r2
 7163 17ee 1C4A     		ldr	r2, .L507+4
 7164 17f0 1344     		add	r3, r3, r2
 7165 17f2 0A46     		mov	r2, r1
 7166 17f4 83F83220 		strb	r2, [r3, #50]
1416:.\Protocolo.c ****                                  if(Surtidor_rxBuffer[x+101]==0){
 7167              		.loc 1 1416 0 discriminator 2
 7168 17f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7169 17fa 0133     		adds	r3, r3, #1
 7170 17fc FB73     		strb	r3, [r7, #15]
 7171              	.L486:
1416:.\Protocolo.c ****                                  if(Surtidor_rxBuffer[x+101]==0){
 7172              		.loc 1 1416 0 is_stmt 0 discriminator 1
 7173 17fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7174 1800 0B2B     		cmp	r3, #11
 7175 1802 E4D9     		bls	.L488
1421:.\Protocolo.c **** 							}
1422:.\Protocolo.c **** 							for(x=0;x<=4;x++){
 7176              		.loc 1 1422 0 is_stmt 1
 7177 1804 0023     		movs	r3, #0
 7178 1806 FB73     		strb	r3, [r7, #15]
 7179 1808 0DE0     		b	.L489
 7180              	.L490:
1423:.\Protocolo.c **** 								lado4.ppu[2][x]=Surtidor_rxBuffer[x+114];
 7181              		.loc 1 1423 0 discriminator 3
 7182 180a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7183 180c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 7184 180e 7232     		adds	r2, r2, #114
 7185 1810 1249     		ldr	r1, .L507
 7186 1812 8A5C     		ldrb	r2, [r1, r2]
 7187 1814 D1B2     		uxtb	r1, r2
 7188 1816 124A     		ldr	r2, .L507+4
 7189 1818 1344     		add	r3, r3, r2
 7190 181a 0A46     		mov	r2, r1
 7191 181c 83F85420 		strb	r2, [r3, #84]
1422:.\Protocolo.c **** 								lado4.ppu[2][x]=Surtidor_rxBuffer[x+114];
 7192              		.loc 1 1422 0 discriminator 3
 7193 1820 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7194 1822 0133     		adds	r3, r3, #1
 7195 1824 FB73     		strb	r3, [r7, #15]
 7196              	.L489:
1422:.\Protocolo.c **** 								lado4.ppu[2][x]=Surtidor_rxBuffer[x+114];
 7197              		.loc 1 1422 0 is_stmt 0 discriminator 1
 7198 1826 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7199 1828 042B     		cmp	r3, #4
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 158


 7200 182a EED9     		bls	.L490
1424:.\Protocolo.c **** 							}
1425:.\Protocolo.c ****     						Surtidor_ClearRxBuffer();
 7201              		.loc 1 1425 0 is_stmt 1
 7202 182c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1426:.\Protocolo.c ****     						return 3;                            
 7203              		.loc 1 1426 0
 7204 1830 0323     		movs	r3, #3
 7205 1832 0EE0     		b	.L199
 7206              	.L476:
1427:.\Protocolo.c **** 						}
1428:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 7207              		.loc 1 1428 0
 7208 1834 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1429:.\Protocolo.c **** 						return 1;			
 7209              		.loc 1 1429 0
 7210 1838 0123     		movs	r3, #1
 7211 183a 0AE0     		b	.L199
 7212              	.L456:
1430:.\Protocolo.c **** 					}
1431:.\Protocolo.c **** 					else{
1432:.\Protocolo.c **** 						Surtidor_ClearRxBuffer();
 7213              		.loc 1 1432 0
 7214 183c FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1433:.\Protocolo.c **** 						return 0;					
 7215              		.loc 1 1433 0
 7216 1840 0023     		movs	r3, #0
 7217 1842 06E0     		b	.L199
 7218              	.L455:
1434:.\Protocolo.c **** 					}
1435:.\Protocolo.c **** 				}
1436:.\Protocolo.c **** 				else{
1437:.\Protocolo.c **** 					Surtidor_ClearRxBuffer();
 7219              		.loc 1 1437 0
 7220 1844 FFF7FEFF 		bl	Surtidor_ClearRxBuffer
1438:.\Protocolo.c **** 					return 0;		
 7221              		.loc 1 1438 0
 7222 1848 0023     		movs	r3, #0
 7223 184a 02E0     		b	.L199
 7224              	.L415:
1439:.\Protocolo.c **** 				}	
1440:.\Protocolo.c **** 			}
1441:.\Protocolo.c **** 		}
1442:.\Protocolo.c **** 		return 0;
 7225              		.loc 1 1442 0
 7226 184c 0023     		movs	r3, #0
 7227 184e 00E0     		b	.L199
 7228              	.L185:
1443:.\Protocolo.c **** 	}
1444:.\Protocolo.c **** 	else{
1445:.\Protocolo.c **** 		return 0;
 7229              		.loc 1 1445 0
 7230 1850 0023     		movs	r3, #0
 7231              	.L199:
1446:.\Protocolo.c **** 	}
1447:.\Protocolo.c **** }
 7232              		.loc 1 1447 0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 159


 7233 1852 1846     		mov	r0, r3
 7234 1854 1037     		adds	r7, r7, #16
 7235              		.cfi_def_cfa_offset 8
 7236 1856 BD46     		mov	sp, r7
 7237              		.cfi_def_cfa_register 13
 7238              		@ sp needed
 7239 1858 80BD     		pop	{r7, pc}
 7240              	.L508:
 7241 185a 00BF     		.align	2
 7242              	.L507:
 7243 185c 00000000 		.word	Surtidor_rxBuffer
 7244 1860 00000000 		.word	lado4
 7245              		.cfi_endproc
 7246              	.LFE72:
 7247              		.size	totales, .-totales
 7248              		.text
 7249              	.Letext0:
 7250              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 7251              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 7252              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 7253              		.file 5 ".\\VariablesG.h"
 7254              		.file 6 "Generated_Source\\PSoC5/Surtidor.h"
 7255              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 7256              		.section	.debug_info,"",%progbits
 7257              	.Ldebug_info0:
 7258 0000 4F0B0000 		.4byte	0xb4f
 7259 0004 0400     		.2byte	0x4
 7260 0006 00000000 		.4byte	.Ldebug_abbrev0
 7261 000a 04       		.byte	0x4
 7262 000b 01       		.uleb128 0x1
 7263 000c EC020000 		.4byte	.LASF122
 7264 0010 01       		.byte	0x1
 7265 0011 78010000 		.4byte	.LASF123
 7266 0015 46000000 		.4byte	.LASF124
 7267 0019 00000000 		.4byte	.Ldebug_ranges0+0
 7268 001d 00000000 		.4byte	0
 7269 0021 00000000 		.4byte	.Ldebug_line0
 7270 0025 02       		.uleb128 0x2
 7271 0026 01       		.byte	0x1
 7272 0027 06       		.byte	0x6
 7273 0028 E2040000 		.4byte	.LASF0
 7274 002c 02       		.uleb128 0x2
 7275 002d 01       		.byte	0x1
 7276 002e 08       		.byte	0x8
 7277 002f A2040000 		.4byte	.LASF1
 7278 0033 02       		.uleb128 0x2
 7279 0034 02       		.byte	0x2
 7280 0035 05       		.byte	0x5
 7281 0036 0C040000 		.4byte	.LASF2
 7282 003a 02       		.uleb128 0x2
 7283 003b 02       		.byte	0x2
 7284 003c 07       		.byte	0x7
 7285 003d 04050000 		.4byte	.LASF3
 7286 0041 03       		.uleb128 0x3
 7287 0042 A2000000 		.4byte	.LASF9
 7288 0046 02       		.byte	0x2
 7289 0047 3F       		.byte	0x3f
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 160


 7290 0048 4C000000 		.4byte	0x4c
 7291 004c 02       		.uleb128 0x2
 7292 004d 04       		.byte	0x4
 7293 004e 05       		.byte	0x5
 7294 004f 16040000 		.4byte	.LASF4
 7295 0053 02       		.uleb128 0x2
 7296 0054 04       		.byte	0x4
 7297 0055 07       		.byte	0x7
 7298 0056 7D040000 		.4byte	.LASF5
 7299 005a 02       		.uleb128 0x2
 7300 005b 08       		.byte	0x8
 7301 005c 05       		.byte	0x5
 7302 005d BF020000 		.4byte	.LASF6
 7303 0061 02       		.uleb128 0x2
 7304 0062 08       		.byte	0x8
 7305 0063 07       		.byte	0x7
 7306 0064 53010000 		.4byte	.LASF7
 7307 0068 04       		.uleb128 0x4
 7308 0069 04       		.byte	0x4
 7309 006a 05       		.byte	0x5
 7310 006b 696E7400 		.ascii	"int\000"
 7311 006f 02       		.uleb128 0x2
 7312 0070 04       		.byte	0x4
 7313 0071 07       		.byte	0x7
 7314 0072 8D000000 		.4byte	.LASF8
 7315 0076 03       		.uleb128 0x3
 7316 0077 8F040000 		.4byte	.LASF10
 7317 007b 03       		.byte	0x3
 7318 007c 2C       		.byte	0x2c
 7319 007d 41000000 		.4byte	0x41
 7320 0081 03       		.uleb128 0x3
 7321 0082 17050000 		.4byte	.LASF11
 7322 0086 04       		.byte	0x4
 7323 0087 B3       		.byte	0xb3
 7324 0088 2C000000 		.4byte	0x2c
 7325 008c 03       		.uleb128 0x3
 7326 008d 50020000 		.4byte	.LASF12
 7327 0091 04       		.byte	0x4
 7328 0092 B4       		.byte	0xb4
 7329 0093 3A000000 		.4byte	0x3a
 7330 0097 02       		.uleb128 0x2
 7331 0098 04       		.byte	0x4
 7332 0099 04       		.byte	0x4
 7333 009a 22010000 		.4byte	.LASF13
 7334 009e 02       		.uleb128 0x2
 7335 009f 08       		.byte	0x8
 7336 00a0 04       		.byte	0x4
 7337 00a1 1D050000 		.4byte	.LASF14
 7338 00a5 02       		.uleb128 0x2
 7339 00a6 01       		.byte	0x1
 7340 00a7 08       		.byte	0x8
 7341 00a8 35020000 		.4byte	.LASF15
 7342 00ac 05       		.uleb128 0x5
 7343 00ad 81000000 		.4byte	0x81
 7344 00b1 05       		.uleb128 0x5
 7345 00b2 8C000000 		.4byte	0x8c
 7346 00b6 02       		.uleb128 0x2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 161


 7347 00b7 04       		.byte	0x4
 7348 00b8 07       		.byte	0x7
 7349 00b9 74040000 		.4byte	.LASF16
 7350 00bd 06       		.uleb128 0x6
 7351 00be 81000000 		.4byte	0x81
 7352 00c2 CD000000 		.4byte	0xcd
 7353 00c6 07       		.uleb128 0x7
 7354 00c7 B6000000 		.4byte	0xb6
 7355 00cb 03       		.byte	0x3
 7356 00cc 00       		.byte	0
 7357 00cd 08       		.uleb128 0x8
 7358 00ce 2C040000 		.4byte	.LASF21
 7359 00d2 5D       		.byte	0x5d
 7360 00d3 05       		.byte	0x5
 7361 00d4 5C       		.byte	0x5c
 7362 00d5 22010000 		.4byte	0x122
 7363 00d9 09       		.uleb128 0x9
 7364 00da 64697200 		.ascii	"dir\000"
 7365 00de 05       		.byte	0x5
 7366 00df 5D       		.byte	0x5d
 7367 00e0 AC000000 		.4byte	0xac
 7368 00e4 00       		.byte	0
 7369 00e5 0A       		.uleb128 0xa
 7370 00e6 DA030000 		.4byte	.LASF17
 7371 00ea 05       		.byte	0x5
 7372 00eb 5E       		.byte	0x5e
 7373 00ec AC000000 		.4byte	0xac
 7374 00f0 01       		.byte	0x1
 7375 00f1 0A       		.uleb128 0xa
 7376 00f2 82020000 		.4byte	.LASF18
 7377 00f6 05       		.byte	0x5
 7378 00f7 5F       		.byte	0x5f
 7379 00f8 38010000 		.4byte	0x138
 7380 00fc 02       		.byte	0x2
 7381 00fd 09       		.uleb128 0x9
 7382 00fe 70707500 		.ascii	"ppu\000"
 7383 0102 05       		.byte	0x5
 7384 0103 60       		.byte	0x60
 7385 0104 53010000 		.4byte	0x153
 7386 0108 4A       		.byte	0x4a
 7387 0109 0A       		.uleb128 0xa
 7388 010a 37050000 		.4byte	.LASF19
 7389 010e 05       		.byte	0x5
 7390 010f 61       		.byte	0x61
 7391 0110 6E010000 		.4byte	0x16e
 7392 0114 59       		.byte	0x59
 7393 0115 0A       		.uleb128 0xa
 7394 0116 46020000 		.4byte	.LASF20
 7395 011a 05       		.byte	0x5
 7396 011b 62       		.byte	0x62
 7397 011c AC000000 		.4byte	0xac
 7398 0120 5C       		.byte	0x5c
 7399 0121 00       		.byte	0
 7400 0122 06       		.uleb128 0x6
 7401 0123 81000000 		.4byte	0x81
 7402 0127 38010000 		.4byte	0x138
 7403 012b 07       		.uleb128 0x7
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 162


 7404 012c B6000000 		.4byte	0xb6
 7405 0130 02       		.byte	0x2
 7406 0131 07       		.uleb128 0x7
 7407 0132 B6000000 		.4byte	0xb6
 7408 0136 17       		.byte	0x17
 7409 0137 00       		.byte	0
 7410 0138 05       		.uleb128 0x5
 7411 0139 22010000 		.4byte	0x122
 7412 013d 06       		.uleb128 0x6
 7413 013e 81000000 		.4byte	0x81
 7414 0142 53010000 		.4byte	0x153
 7415 0146 07       		.uleb128 0x7
 7416 0147 B6000000 		.4byte	0xb6
 7417 014b 02       		.byte	0x2
 7418 014c 07       		.uleb128 0x7
 7419 014d B6000000 		.4byte	0xb6
 7420 0151 04       		.byte	0x4
 7421 0152 00       		.byte	0
 7422 0153 05       		.uleb128 0x5
 7423 0154 3D010000 		.4byte	0x13d
 7424 0158 06       		.uleb128 0x6
 7425 0159 81000000 		.4byte	0x81
 7426 015d 6E010000 		.4byte	0x16e
 7427 0161 07       		.uleb128 0x7
 7428 0162 B6000000 		.4byte	0xb6
 7429 0166 02       		.byte	0x2
 7430 0167 07       		.uleb128 0x7
 7431 0168 B6000000 		.4byte	0xb6
 7432 016c 00       		.byte	0
 7433 016d 00       		.byte	0
 7434 016e 05       		.uleb128 0x5
 7435 016f 58010000 		.4byte	0x158
 7436 0173 08       		.uleb128 0x8
 7437 0174 C0030000 		.4byte	.LASF22
 7438 0178 61       		.byte	0x61
 7439 0179 05       		.byte	0x5
 7440 017a 75       		.byte	0x75
 7441 017b 4A020000 		.4byte	0x24a
 7442 017f 0A       		.uleb128 0xa
 7443 0180 DE000000 		.4byte	.LASF23
 7444 0184 05       		.byte	0x5
 7445 0185 76       		.byte	0x76
 7446 0186 81000000 		.4byte	0x81
 7447 018a 00       		.byte	0
 7448 018b 0A       		.uleb128 0xa
 7449 018c 37050000 		.4byte	.LASF19
 7450 0190 05       		.byte	0x5
 7451 0191 77       		.byte	0x77
 7452 0192 81000000 		.4byte	0x81
 7453 0196 01       		.byte	0x1
 7454 0197 09       		.uleb128 0x9
 7455 0198 70707500 		.ascii	"ppu\000"
 7456 019c 05       		.byte	0x5
 7457 019d 78       		.byte	0x78
 7458 019e 4A020000 		.4byte	0x24a
 7459 01a2 02       		.byte	0x2
 7460 01a3 0A       		.uleb128 0xa
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 163


 7461 01a4 C7030000 		.4byte	.LASF24
 7462 01a8 05       		.byte	0x5
 7463 01a9 79       		.byte	0x79
 7464 01aa 5A020000 		.4byte	0x25a
 7465 01ae 07       		.byte	0x7
 7466 01af 0A       		.uleb128 0xa
 7467 01b0 D3010000 		.4byte	.LASF25
 7468 01b4 05       		.byte	0x5
 7469 01b5 7A       		.byte	0x7a
 7470 01b6 5A020000 		.4byte	0x25a
 7471 01ba 10       		.byte	0x10
 7472 01bb 0A       		.uleb128 0xa
 7473 01bc CD020000 		.4byte	.LASF26
 7474 01c0 05       		.byte	0x5
 7475 01c1 7B       		.byte	0x7b
 7476 01c2 81000000 		.4byte	0x81
 7477 01c6 19       		.byte	0x19
 7478 01c7 0A       		.uleb128 0xa
 7479 01c8 2E050000 		.4byte	.LASF27
 7480 01cc 05       		.byte	0x5
 7481 01cd 7C       		.byte	0x7c
 7482 01ce 81000000 		.4byte	0x81
 7483 01d2 1A       		.byte	0x1a
 7484 01d3 0A       		.uleb128 0xa
 7485 01d4 1B010000 		.4byte	.LASF28
 7486 01d8 05       		.byte	0x5
 7487 01d9 7D       		.byte	0x7d
 7488 01da 6A020000 		.4byte	0x26a
 7489 01de 1B       		.byte	0x1b
 7490 01df 09       		.uleb128 0x9
 7491 01e0 696400   		.ascii	"id\000"
 7492 01e3 05       		.byte	0x5
 7493 01e4 7E       		.byte	0x7e
 7494 01e5 7A020000 		.4byte	0x27a
 7495 01e9 23       		.byte	0x23
 7496 01ea 09       		.uleb128 0x9
 7497 01eb 6B6D00   		.ascii	"km\000"
 7498 01ee 05       		.byte	0x5
 7499 01ef 7F       		.byte	0x7f
 7500 01f0 8A020000 		.4byte	0x28a
 7501 01f4 33       		.byte	0x33
 7502 01f5 0A       		.uleb128 0xa
 7503 01f6 C5010000 		.4byte	.LASF29
 7504 01fa 05       		.byte	0x5
 7505 01fb 80       		.byte	0x80
 7506 01fc 5A020000 		.4byte	0x25a
 7507 0200 3E       		.byte	0x3e
 7508 0201 0A       		.uleb128 0xa
 7509 0202 4A010000 		.4byte	.LASF30
 7510 0206 05       		.byte	0x5
 7511 0207 81       		.byte	0x81
 7512 0208 81000000 		.4byte	0x81
 7513 020c 47       		.byte	0x47
 7514 020d 0A       		.uleb128 0xa
 7515 020e 71020000 		.4byte	.LASF31
 7516 0212 05       		.byte	0x5
 7517 0213 82       		.byte	0x82
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 164


 7518 0214 81000000 		.4byte	0x81
 7519 0218 48       		.byte	0x48
 7520 0219 0A       		.uleb128 0xa
 7521 021a E5020000 		.4byte	.LASF32
 7522 021e 05       		.byte	0x5
 7523 021f 83       		.byte	0x83
 7524 0220 8A020000 		.4byte	0x28a
 7525 0224 49       		.byte	0x49
 7526 0225 0A       		.uleb128 0xa
 7527 0226 00000000 		.4byte	.LASF33
 7528 022a 05       		.byte	0x5
 7529 022b 84       		.byte	0x84
 7530 022c 8A020000 		.4byte	0x28a
 7531 0230 54       		.byte	0x54
 7532 0231 0A       		.uleb128 0xa
 7533 0232 7C020000 		.4byte	.LASF34
 7534 0236 05       		.byte	0x5
 7535 0237 85       		.byte	0x85
 7536 0238 81000000 		.4byte	0x81
 7537 023c 5F       		.byte	0x5f
 7538 023d 0A       		.uleb128 0xa
 7539 023e 97040000 		.4byte	.LASF35
 7540 0242 05       		.byte	0x5
 7541 0243 86       		.byte	0x86
 7542 0244 81000000 		.4byte	0x81
 7543 0248 60       		.byte	0x60
 7544 0249 00       		.byte	0
 7545 024a 06       		.uleb128 0x6
 7546 024b 81000000 		.4byte	0x81
 7547 024f 5A020000 		.4byte	0x25a
 7548 0253 07       		.uleb128 0x7
 7549 0254 B6000000 		.4byte	0xb6
 7550 0258 04       		.byte	0x4
 7551 0259 00       		.byte	0
 7552 025a 06       		.uleb128 0x6
 7553 025b 81000000 		.4byte	0x81
 7554 025f 6A020000 		.4byte	0x26a
 7555 0263 07       		.uleb128 0x7
 7556 0264 B6000000 		.4byte	0xb6
 7557 0268 08       		.byte	0x8
 7558 0269 00       		.byte	0
 7559 026a 06       		.uleb128 0x6
 7560 026b 81000000 		.4byte	0x81
 7561 026f 7A020000 		.4byte	0x27a
 7562 0273 07       		.uleb128 0x7
 7563 0274 B6000000 		.4byte	0xb6
 7564 0278 07       		.byte	0x7
 7565 0279 00       		.byte	0
 7566 027a 06       		.uleb128 0x6
 7567 027b 81000000 		.4byte	0x81
 7568 027f 8A020000 		.4byte	0x28a
 7569 0283 07       		.uleb128 0x7
 7570 0284 B6000000 		.4byte	0xb6
 7571 0288 0F       		.byte	0xf
 7572 0289 00       		.byte	0
 7573 028a 06       		.uleb128 0x6
 7574 028b 81000000 		.4byte	0x81
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 165


 7575 028f 9A020000 		.4byte	0x29a
 7576 0293 07       		.uleb128 0x7
 7577 0294 B6000000 		.4byte	0xb6
 7578 0298 0A       		.byte	0xa
 7579 0299 00       		.byte	0
 7580 029a 0B       		.uleb128 0xb
 7581 029b 3D050000 		.4byte	.LASF125
 7582 029f 01       		.byte	0x1
 7583 02a0 3F       		.byte	0x3f
 7584 02a1 00000000 		.4byte	.LFB63
 7585 02a5 14000000 		.4byte	.LFE63-.LFB63
 7586 02a9 01       		.uleb128 0x1
 7587 02aa 9C       		.byte	0x9c
 7588 02ab 0C       		.uleb128 0xc
 7589 02ac B0040000 		.4byte	.LASF36
 7590 02b0 01       		.byte	0x1
 7591 02b1 56       		.byte	0x56
 7592 02b2 81000000 		.4byte	0x81
 7593 02b6 00000000 		.4byte	.LFB64
 7594 02ba 98000000 		.4byte	.LFE64-.LFB64
 7595 02be 01       		.uleb128 0x1
 7596 02bf 9C       		.byte	0x9c
 7597 02c0 E1020000 		.4byte	0x2e1
 7598 02c4 0D       		.uleb128 0xd
 7599 02c5 64697200 		.ascii	"dir\000"
 7600 02c9 01       		.byte	0x1
 7601 02ca 56       		.byte	0x56
 7602 02cb 81000000 		.4byte	0x81
 7603 02cf 02       		.uleb128 0x2
 7604 02d0 91       		.byte	0x91
 7605 02d1 6F       		.sleb128 -17
 7606 02d2 0E       		.uleb128 0xe
 7607 02d3 DA030000 		.4byte	.LASF17
 7608 02d7 01       		.byte	0x1
 7609 02d8 57       		.byte	0x57
 7610 02d9 81000000 		.4byte	0x81
 7611 02dd 02       		.uleb128 0x2
 7612 02de 91       		.byte	0x91
 7613 02df 77       		.sleb128 -9
 7614 02e0 00       		.byte	0
 7615 02e1 0C       		.uleb128 0xc
 7616 02e2 CB010000 		.4byte	.LASF37
 7617 02e6 01       		.byte	0x1
 7618 02e7 86       		.byte	0x86
 7619 02e8 81000000 		.4byte	0x81
 7620 02ec 00000000 		.4byte	.LFB65
 7621 02f0 EC000000 		.4byte	.LFE65-.LFB65
 7622 02f4 01       		.uleb128 0x1
 7623 02f5 9C       		.byte	0x9c
 7624 02f6 07030000 		.4byte	0x307
 7625 02fa 0F       		.uleb128 0xf
 7626 02fb 7800     		.ascii	"x\000"
 7627 02fd 01       		.byte	0x1
 7628 02fe 87       		.byte	0x87
 7629 02ff 81000000 		.4byte	0x81
 7630 0303 02       		.uleb128 0x2
 7631 0304 91       		.byte	0x91
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 166


 7632 0305 77       		.sleb128 -9
 7633 0306 00       		.byte	0
 7634 0307 10       		.uleb128 0x10
 7635 0308 C1040000 		.4byte	.LASF41
 7636 030c 01       		.byte	0x1
 7637 030d BA       		.byte	0xba
 7638 030e 00000000 		.4byte	.LFB66
 7639 0312 36000000 		.4byte	.LFE66-.LFB66
 7640 0316 01       		.uleb128 0x1
 7641 0317 9C       		.byte	0x9c
 7642 0318 39030000 		.4byte	0x339
 7643 031c 0D       		.uleb128 0xd
 7644 031d 76616C00 		.ascii	"val\000"
 7645 0321 01       		.byte	0x1
 7646 0322 BA       		.byte	0xba
 7647 0323 81000000 		.4byte	0x81
 7648 0327 02       		.uleb128 0x2
 7649 0328 91       		.byte	0x91
 7650 0329 6F       		.sleb128 -17
 7651 032a 0E       		.uleb128 0xe
 7652 032b DA030000 		.4byte	.LASF17
 7653 032f 01       		.byte	0x1
 7654 0330 BB       		.byte	0xbb
 7655 0331 81000000 		.4byte	0x81
 7656 0335 02       		.uleb128 0x2
 7657 0336 91       		.byte	0x91
 7658 0337 77       		.sleb128 -9
 7659 0338 00       		.byte	0
 7660 0339 0C       		.uleb128 0xc
 7661 033a 60040000 		.4byte	.LASF38
 7662 033e 01       		.byte	0x1
 7663 033f D7       		.byte	0xd7
 7664 0340 81000000 		.4byte	0x81
 7665 0344 00000000 		.4byte	.LFB67
 7666 0348 7C010000 		.4byte	.LFE67-.LFB67
 7667 034c 01       		.uleb128 0x1
 7668 034d 9C       		.byte	0x9c
 7669 034e 89030000 		.4byte	0x389
 7670 0352 0D       		.uleb128 0xd
 7671 0353 76616C00 		.ascii	"val\000"
 7672 0357 01       		.byte	0x1
 7673 0358 D7       		.byte	0xd7
 7674 0359 81000000 		.4byte	0x81
 7675 035d 02       		.uleb128 0x2
 7676 035e 91       		.byte	0x91
 7677 035f 4F       		.sleb128 -49
 7678 0360 0E       		.uleb128 0xe
 7679 0361 24050000 		.4byte	.LASF39
 7680 0365 01       		.byte	0x1
 7681 0366 D8       		.byte	0xd8
 7682 0367 89030000 		.4byte	0x389
 7683 036b 02       		.uleb128 0x2
 7684 036c 91       		.byte	0x91
 7685 036d 5C       		.sleb128 -36
 7686 036e 0F       		.uleb128 0xf
 7687 036f 7800     		.ascii	"x\000"
 7688 0371 01       		.byte	0x1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 167


 7689 0372 D8       		.byte	0xd8
 7690 0373 81000000 		.4byte	0x81
 7691 0377 02       		.uleb128 0x2
 7692 0378 91       		.byte	0x91
 7693 0379 6F       		.sleb128 -17
 7694 037a 0E       		.uleb128 0xe
 7695 037b 1C020000 		.4byte	.LASF40
 7696 037f 01       		.byte	0x1
 7697 0380 D8       		.byte	0xd8
 7698 0381 5A020000 		.4byte	0x25a
 7699 0385 02       		.uleb128 0x2
 7700 0386 91       		.byte	0x91
 7701 0387 50       		.sleb128 -48
 7702 0388 00       		.byte	0
 7703 0389 06       		.uleb128 0x6
 7704 038a 81000000 		.4byte	0x81
 7705 038e 99030000 		.4byte	0x399
 7706 0392 07       		.uleb128 0x7
 7707 0393 B6000000 		.4byte	0xb6
 7708 0397 12       		.byte	0x12
 7709 0398 00       		.byte	0
 7710 0399 11       		.uleb128 0x11
 7711 039a 14020000 		.4byte	.LASF42
 7712 039e 01       		.byte	0x1
 7713 039f 2801     		.2byte	0x128
 7714 03a1 00000000 		.4byte	.LFB68
 7715 03a5 24000000 		.4byte	.LFE68-.LFB68
 7716 03a9 01       		.uleb128 0x1
 7717 03aa 9C       		.byte	0x9c
 7718 03ab BF030000 		.4byte	0x3bf
 7719 03af 12       		.uleb128 0x12
 7720 03b0 76616C00 		.ascii	"val\000"
 7721 03b4 01       		.byte	0x1
 7722 03b5 2801     		.2byte	0x128
 7723 03b7 81000000 		.4byte	0x81
 7724 03bb 02       		.uleb128 0x2
 7725 03bc 91       		.byte	0x91
 7726 03bd 77       		.sleb128 -9
 7727 03be 00       		.byte	0
 7728 03bf 13       		.uleb128 0x13
 7729 03c0 DB010000 		.4byte	.LASF43
 7730 03c4 01       		.byte	0x1
 7731 03c5 3D01     		.2byte	0x13d
 7732 03c7 81000000 		.4byte	0x81
 7733 03cb 00000000 		.4byte	.LFB69
 7734 03cf 40060000 		.4byte	.LFE69-.LFB69
 7735 03d3 01       		.uleb128 0x1
 7736 03d4 9C       		.byte	0x9c
 7737 03d5 F6030000 		.4byte	0x3f6
 7738 03d9 12       		.uleb128 0x12
 7739 03da 64697200 		.ascii	"dir\000"
 7740 03de 01       		.byte	0x1
 7741 03df 3D01     		.2byte	0x13d
 7742 03e1 81000000 		.4byte	0x81
 7743 03e5 02       		.uleb128 0x2
 7744 03e6 91       		.byte	0x91
 7745 03e7 6F       		.sleb128 -17
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 168


 7746 03e8 14       		.uleb128 0x14
 7747 03e9 7800     		.ascii	"x\000"
 7748 03eb 01       		.byte	0x1
 7749 03ec 3E01     		.2byte	0x13e
 7750 03ee 81000000 		.4byte	0x81
 7751 03f2 02       		.uleb128 0x2
 7752 03f3 91       		.byte	0x91
 7753 03f4 77       		.sleb128 -9
 7754 03f5 00       		.byte	0
 7755 03f6 13       		.uleb128 0x13
 7756 03f7 6A040000 		.4byte	.LASF44
 7757 03fb 01       		.byte	0x1
 7758 03fc C501     		.2byte	0x1c5
 7759 03fe 81000000 		.4byte	0x81
 7760 0402 00000000 		.4byte	.LFB70
 7761 0406 80080000 		.4byte	.LFE70-.LFB70
 7762 040a 01       		.uleb128 0x1
 7763 040b 9C       		.byte	0x9c
 7764 040c 96040000 		.4byte	0x496
 7765 0410 12       		.uleb128 0x12
 7766 0411 64697200 		.ascii	"dir\000"
 7767 0415 01       		.byte	0x1
 7768 0416 C501     		.2byte	0x1c5
 7769 0418 81000000 		.4byte	0x81
 7770 041c 02       		.uleb128 0x2
 7771 041d 91       		.byte	0x91
 7772 041e 5F       		.sleb128 -33
 7773 041f 15       		.uleb128 0x15
 7774 0420 37050000 		.4byte	.LASF19
 7775 0424 01       		.byte	0x1
 7776 0425 C501     		.2byte	0x1c5
 7777 0427 81000000 		.4byte	0x81
 7778 042b 02       		.uleb128 0x2
 7779 042c 91       		.byte	0x91
 7780 042d 5E       		.sleb128 -34
 7781 042e 15       		.uleb128 0x15
 7782 042f EE040000 		.4byte	.LASF45
 7783 0433 01       		.byte	0x1
 7784 0434 C501     		.2byte	0x1c5
 7785 0436 96040000 		.4byte	0x496
 7786 043a 02       		.uleb128 0x2
 7787 043b 91       		.byte	0x91
 7788 043c 58       		.sleb128 -40
 7789 043d 15       		.uleb128 0x15
 7790 043e 1B010000 		.4byte	.LASF28
 7791 0442 01       		.byte	0x1
 7792 0443 C501     		.2byte	0x1c5
 7793 0445 81000000 		.4byte	0x81
 7794 0449 02       		.uleb128 0x2
 7795 044a 91       		.byte	0x91
 7796 044b 5D       		.sleb128 -35
 7797 044c 16       		.uleb128 0x16
 7798 044d 86000000 		.4byte	.LASF46
 7799 0451 01       		.byte	0x1
 7800 0452 C601     		.2byte	0x1c6
 7801 0454 9C040000 		.4byte	0x49c
 7802 0458 02       		.uleb128 0x2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 169


 7803 0459 91       		.byte	0x91
 7804 045a 60       		.sleb128 -32
 7805 045b 16       		.uleb128 0x16
 7806 045c BB030000 		.4byte	.LASF47
 7807 0460 01       		.byte	0x1
 7808 0461 C601     		.2byte	0x1c6
 7809 0463 81000000 		.4byte	0x81
 7810 0467 02       		.uleb128 0x2
 7811 0468 91       		.byte	0x91
 7812 0469 77       		.sleb128 -9
 7813 046a 16       		.uleb128 0x16
 7814 046b 43040000 		.4byte	.LASF48
 7815 046f 01       		.byte	0x1
 7816 0470 C601     		.2byte	0x1c6
 7817 0472 81000000 		.4byte	0x81
 7818 0476 02       		.uleb128 0x2
 7819 0477 91       		.byte	0x91
 7820 0478 76       		.sleb128 -10
 7821 0479 14       		.uleb128 0x14
 7822 047a 6900     		.ascii	"i\000"
 7823 047c 01       		.byte	0x1
 7824 047d C601     		.2byte	0x1c6
 7825 047f 81000000 		.4byte	0x81
 7826 0483 02       		.uleb128 0x2
 7827 0484 91       		.byte	0x91
 7828 0485 75       		.sleb128 -11
 7829 0486 16       		.uleb128 0x16
 7830 0487 C1000000 		.4byte	.LASF49
 7831 048b 01       		.byte	0x1
 7832 048c C601     		.2byte	0x1c6
 7833 048e 81000000 		.4byte	0x81
 7834 0492 02       		.uleb128 0x2
 7835 0493 91       		.byte	0x91
 7836 0494 74       		.sleb128 -12
 7837 0495 00       		.byte	0
 7838 0496 17       		.uleb128 0x17
 7839 0497 04       		.byte	0x4
 7840 0498 81000000 		.4byte	0x81
 7841 049c 06       		.uleb128 0x6
 7842 049d 81000000 		.4byte	0x81
 7843 04a1 AC040000 		.4byte	0x4ac
 7844 04a5 07       		.uleb128 0x7
 7845 04a6 B6000000 		.4byte	0xb6
 7846 04aa 11       		.byte	0x11
 7847 04ab 00       		.byte	0
 7848 04ac 13       		.uleb128 0x13
 7849 04ad D6020000 		.4byte	.LASF50
 7850 04b1 01       		.byte	0x1
 7851 04b2 C902     		.2byte	0x2c9
 7852 04b4 81000000 		.4byte	0x81
 7853 04b8 00000000 		.4byte	.LFB71
 7854 04bc 54020000 		.4byte	.LFE71-.LFB71
 7855 04c0 01       		.uleb128 0x1
 7856 04c1 9C       		.byte	0x9c
 7857 04c2 1F050000 		.4byte	0x51f
 7858 04c6 12       		.uleb128 0x12
 7859 04c7 64697200 		.ascii	"dir\000"
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 170


 7860 04cb 01       		.byte	0x1
 7861 04cc C902     		.2byte	0x2c9
 7862 04ce 81000000 		.4byte	0x81
 7863 04d2 02       		.uleb128 0x2
 7864 04d3 91       		.byte	0x91
 7865 04d4 5F       		.sleb128 -33
 7866 04d5 15       		.uleb128 0x15
 7867 04d6 AC000000 		.4byte	.LASF51
 7868 04da 01       		.byte	0x1
 7869 04db C902     		.2byte	0x2c9
 7870 04dd 96040000 		.4byte	0x496
 7871 04e1 02       		.uleb128 0x2
 7872 04e2 91       		.byte	0x91
 7873 04e3 58       		.sleb128 -40
 7874 04e4 15       		.uleb128 0x15
 7875 04e5 B9000000 		.4byte	.LASF52
 7876 04e9 01       		.byte	0x1
 7877 04ea C902     		.2byte	0x2c9
 7878 04ec 81000000 		.4byte	0x81
 7879 04f0 02       		.uleb128 0x2
 7880 04f1 91       		.byte	0x91
 7881 04f2 5E       		.sleb128 -34
 7882 04f3 16       		.uleb128 0x16
 7883 04f4 86000000 		.4byte	.LASF46
 7884 04f8 01       		.byte	0x1
 7885 04f9 CA02     		.2byte	0x2ca
 7886 04fb 1F050000 		.4byte	0x51f
 7887 04ff 02       		.uleb128 0x2
 7888 0500 91       		.byte	0x91
 7889 0501 64       		.sleb128 -28
 7890 0502 16       		.uleb128 0x16
 7891 0503 BB030000 		.4byte	.LASF47
 7892 0507 01       		.byte	0x1
 7893 0508 CA02     		.2byte	0x2ca
 7894 050a 81000000 		.4byte	0x81
 7895 050e 02       		.uleb128 0x2
 7896 050f 91       		.byte	0x91
 7897 0510 77       		.sleb128 -9
 7898 0511 14       		.uleb128 0x14
 7899 0512 7800     		.ascii	"x\000"
 7900 0514 01       		.byte	0x1
 7901 0515 CA02     		.2byte	0x2ca
 7902 0517 81000000 		.4byte	0x81
 7903 051b 02       		.uleb128 0x2
 7904 051c 91       		.byte	0x91
 7905 051d 76       		.sleb128 -10
 7906 051e 00       		.byte	0
 7907 051f 06       		.uleb128 0x6
 7908 0520 81000000 		.4byte	0x81
 7909 0524 2F050000 		.4byte	0x52f
 7910 0528 07       		.uleb128 0x7
 7911 0529 B6000000 		.4byte	0xb6
 7912 052d 0E       		.byte	0xe
 7913 052e 00       		.byte	0
 7914 052f 13       		.uleb128 0x13
 7915 0530 82020000 		.4byte	.LASF18
 7916 0534 01       		.byte	0x1
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 171


 7917 0535 1B03     		.2byte	0x31b
 7918 0537 81000000 		.4byte	0x81
 7919 053b 00000000 		.4byte	.LFB72
 7920 053f 64180000 		.4byte	.LFE72-.LFB72
 7921 0543 01       		.uleb128 0x1
 7922 0544 9C       		.byte	0x9c
 7923 0545 82050000 		.4byte	0x582
 7924 0549 12       		.uleb128 0x12
 7925 054a 64697200 		.ascii	"dir\000"
 7926 054e 01       		.byte	0x1
 7927 054f 1B03     		.2byte	0x31b
 7928 0551 81000000 		.4byte	0x81
 7929 0555 02       		.uleb128 0x2
 7930 0556 91       		.byte	0x91
 7931 0557 6F       		.sleb128 -17
 7932 0558 15       		.uleb128 0x15
 7933 0559 F9030000 		.4byte	.LASF53
 7934 055d 01       		.byte	0x1
 7935 055e 1B03     		.2byte	0x31b
 7936 0560 81000000 		.4byte	0x81
 7937 0564 02       		.uleb128 0x2
 7938 0565 91       		.byte	0x91
 7939 0566 6E       		.sleb128 -18
 7940 0567 14       		.uleb128 0x14
 7941 0568 7800     		.ascii	"x\000"
 7942 056a 01       		.byte	0x1
 7943 056b 1C03     		.2byte	0x31c
 7944 056d 81000000 		.4byte	0x81
 7945 0571 02       		.uleb128 0x2
 7946 0572 91       		.byte	0x91
 7947 0573 77       		.sleb128 -9
 7948 0574 14       		.uleb128 0x14
 7949 0575 7900     		.ascii	"y\000"
 7950 0577 01       		.byte	0x1
 7951 0578 1C03     		.2byte	0x31c
 7952 057a 81000000 		.4byte	0x81
 7953 057e 02       		.uleb128 0x2
 7954 057f 91       		.byte	0x91
 7955 0580 76       		.sleb128 -10
 7956 0581 00       		.byte	0
 7957 0582 06       		.uleb128 0x6
 7958 0583 81000000 		.4byte	0x81
 7959 0587 92050000 		.4byte	0x592
 7960 058b 07       		.uleb128 0x7
 7961 058c B6000000 		.4byte	0xb6
 7962 0590 FF       		.byte	0xff
 7963 0591 00       		.byte	0
 7964 0592 18       		.uleb128 0x18
 7965 0593 B3010000 		.4byte	.LASF54
 7966 0597 06       		.byte	0x6
 7967 0598 3E01     		.2byte	0x13e
 7968 059a 9E050000 		.4byte	0x59e
 7969 059e 05       		.uleb128 0x5
 7970 059f 82050000 		.4byte	0x582
 7971 05a3 18       		.uleb128 0x18
 7972 05a4 1F040000 		.4byte	.LASF55
 7973 05a8 07       		.byte	0x7
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 172


 7974 05a9 2A06     		.2byte	0x62a
 7975 05ab AF050000 		.4byte	0x5af
 7976 05af 05       		.uleb128 0x5
 7977 05b0 76000000 		.4byte	0x76
 7978 05b4 19       		.uleb128 0x19
 7979 05b5 97020000 		.4byte	.LASF56
 7980 05b9 05       		.byte	0x5
 7981 05ba 4A       		.byte	0x4a
 7982 05bb AC000000 		.4byte	0xac
 7983 05bf 05       		.uleb128 0x5
 7984 05c0 03       		.byte	0x3
 7985 05c1 00000000 		.4byte	count_teclas1
 7986 05c5 19       		.uleb128 0x19
 7987 05c6 35040000 		.4byte	.LASF57
 7988 05ca 05       		.byte	0x5
 7989 05cb 4A       		.byte	0x4a
 7990 05cc AC000000 		.4byte	0xac
 7991 05d0 05       		.uleb128 0x5
 7992 05d1 03       		.byte	0x3
 7993 05d2 00000000 		.4byte	comas1
 7994 05d6 19       		.uleb128 0x19
 7995 05d7 3C040000 		.4byte	.LASF58
 7996 05db 05       		.byte	0x5
 7997 05dc 4A       		.byte	0x4a
 7998 05dd AC000000 		.4byte	0xac
 7999 05e1 05       		.uleb128 0x5
 8000 05e2 03       		.byte	0x3
 8001 05e3 00000000 		.4byte	comas2
 8002 05e7 19       		.uleb128 0x19
 8003 05e8 74000000 		.4byte	.LASF59
 8004 05ec 05       		.byte	0x5
 8005 05ed 4A       		.byte	0x4a
 8006 05ee AC000000 		.4byte	0xac
 8007 05f2 05       		.uleb128 0x5
 8008 05f3 03       		.byte	0x3
 8009 05f4 00000000 		.4byte	id_coma1
 8010 05f8 19       		.uleb128 0x19
 8011 05f9 EA010000 		.4byte	.LASF60
 8012 05fd 05       		.byte	0x5
 8013 05fe 4A       		.byte	0x4a
 8014 05ff AC000000 		.4byte	0xac
 8015 0603 05       		.uleb128 0x5
 8016 0604 03       		.byte	0x3
 8017 0605 00000000 		.4byte	id_teclado1
 8018 0609 19       		.uleb128 0x19
 8019 060a A5020000 		.4byte	.LASF61
 8020 060e 05       		.byte	0x5
 8021 060f 4A       		.byte	0x4a
 8022 0610 AC000000 		.4byte	0xac
 8023 0614 05       		.uleb128 0x5
 8024 0615 03       		.byte	0x3
 8025 0616 00000000 		.4byte	count_teclas2
 8026 061a 19       		.uleb128 0x19
 8027 061b 7D000000 		.4byte	.LASF62
 8028 061f 05       		.byte	0x5
 8029 0620 4A       		.byte	0x4a
 8030 0621 AC000000 		.4byte	0xac
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 173


 8031 0625 05       		.uleb128 0x5
 8032 0626 03       		.byte	0x3
 8033 0627 00000000 		.4byte	id_coma2
 8034 062b 19       		.uleb128 0x19
 8035 062c F6010000 		.4byte	.LASF63
 8036 0630 05       		.byte	0x5
 8037 0631 4A       		.byte	0x4a
 8038 0632 AC000000 		.4byte	0xac
 8039 0636 05       		.uleb128 0x5
 8040 0637 03       		.byte	0x3
 8041 0638 00000000 		.4byte	id_teclado2
 8042 063c 19       		.uleb128 0x19
 8043 063d B3020000 		.4byte	.LASF64
 8044 0641 05       		.byte	0x5
 8045 0642 4B       		.byte	0x4b
 8046 0643 B1000000 		.4byte	0xb1
 8047 0647 05       		.uleb128 0x5
 8048 0648 03       		.byte	0x3
 8049 0649 00000000 		.4byte	posx1
 8050 064d 19       		.uleb128 0x19
 8051 064e AF030000 		.4byte	.LASF65
 8052 0652 05       		.byte	0x5
 8053 0653 4B       		.byte	0x4b
 8054 0654 B1000000 		.4byte	0xb1
 8055 0658 05       		.uleb128 0x5
 8056 0659 03       		.byte	0x3
 8057 065a 00000000 		.4byte	posy1
 8058 065e 19       		.uleb128 0x19
 8059 065f 49050000 		.4byte	.LASF66
 8060 0663 05       		.byte	0x5
 8061 0664 4B       		.byte	0x4b
 8062 0665 B1000000 		.4byte	0xb1
 8063 0669 05       		.uleb128 0x5
 8064 066a 03       		.byte	0x3
 8065 066b 00000000 		.4byte	sizeletra1
 8066 066f 19       		.uleb128 0x19
 8067 0670 B9020000 		.4byte	.LASF67
 8068 0674 05       		.byte	0x5
 8069 0675 4B       		.byte	0x4b
 8070 0676 B1000000 		.4byte	0xb1
 8071 067a 05       		.uleb128 0x5
 8072 067b 03       		.byte	0x3
 8073 067c 00000000 		.4byte	posx2
 8074 0680 19       		.uleb128 0x19
 8075 0681 B5030000 		.4byte	.LASF68
 8076 0685 05       		.byte	0x5
 8077 0686 4B       		.byte	0x4b
 8078 0687 B1000000 		.4byte	0xb1
 8079 068b 05       		.uleb128 0x5
 8080 068c 03       		.byte	0x3
 8081 068d 00000000 		.4byte	posy2
 8082 0691 19       		.uleb128 0x19
 8083 0692 54050000 		.4byte	.LASF69
 8084 0696 05       		.byte	0x5
 8085 0697 4B       		.byte	0x4b
 8086 0698 B1000000 		.4byte	0xb1
 8087 069c 05       		.uleb128 0x5
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 174


 8088 069d 03       		.byte	0x3
 8089 069e 00000000 		.4byte	sizeletra2
 8090 06a2 19       		.uleb128 0x19
 8091 06a3 CE000000 		.4byte	.LASF70
 8092 06a7 05       		.byte	0x5
 8093 06a8 4C       		.byte	0x4c
 8094 06a9 AC000000 		.4byte	0xac
 8095 06ad 05       		.uleb128 0x5
 8096 06ae 03       		.byte	0x3
 8097 06af 00000000 		.4byte	teclas1
 8098 06b3 19       		.uleb128 0x19
 8099 06b4 D6000000 		.4byte	.LASF71
 8100 06b8 05       		.byte	0x5
 8101 06b9 4C       		.byte	0x4c
 8102 06ba AC000000 		.4byte	0xac
 8103 06be 05       		.uleb128 0x5
 8104 06bf 03       		.byte	0x3
 8105 06c0 00000000 		.4byte	teclas2
 8106 06c4 19       		.uleb128 0x19
 8107 06c5 09000000 		.4byte	.LASF72
 8108 06c9 05       		.byte	0x5
 8109 06ca 4D       		.byte	0x4d
 8110 06cb AC000000 		.4byte	0xac
 8111 06cf 05       		.uleb128 0x5
 8112 06d0 03       		.byte	0x3
 8113 06d1 00000000 		.4byte	flujo_LCD1
 8114 06d5 19       		.uleb128 0x19
 8115 06d6 14000000 		.4byte	.LASF73
 8116 06da 05       		.byte	0x5
 8117 06db 4D       		.byte	0x4d
 8118 06dc AC000000 		.4byte	0xac
 8119 06e0 05       		.uleb128 0x5
 8120 06e1 03       		.byte	0x3
 8121 06e2 00000000 		.4byte	flujo_LCD2
 8122 06e6 19       		.uleb128 0x19
 8123 06e7 1F000000 		.4byte	.LASF74
 8124 06eb 05       		.byte	0x5
 8125 06ec 4D       		.byte	0x4d
 8126 06ed AC000000 		.4byte	0xac
 8127 06f1 05       		.uleb128 0x5
 8128 06f2 03       		.byte	0x3
 8129 06f3 00000000 		.4byte	flujo_LCD3
 8130 06f7 19       		.uleb128 0x19
 8131 06f8 2A000000 		.4byte	.LASF75
 8132 06fc 05       		.byte	0x5
 8133 06fd 4D       		.byte	0x4d
 8134 06fe AC000000 		.4byte	0xac
 8135 0702 05       		.uleb128 0x5
 8136 0703 03       		.byte	0x3
 8137 0704 00000000 		.4byte	flujo_LCD4
 8138 0708 06       		.uleb128 0x6
 8139 0709 81000000 		.4byte	0x81
 8140 070d 18070000 		.4byte	0x718
 8141 0711 07       		.uleb128 0x7
 8142 0712 B6000000 		.4byte	0xb6
 8143 0716 1D       		.byte	0x1d
 8144 0717 00       		.byte	0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 175


 8145 0718 19       		.uleb128 0x19
 8146 0719 CE030000 		.4byte	.LASF76
 8147 071d 05       		.byte	0x5
 8148 071e 4E       		.byte	0x4e
 8149 071f 29070000 		.4byte	0x729
 8150 0723 05       		.uleb128 0x5
 8151 0724 03       		.byte	0x3
 8152 0725 00000000 		.4byte	Buffer_LCD1
 8153 0729 05       		.uleb128 0x5
 8154 072a 08070000 		.4byte	0x708
 8155 072e 19       		.uleb128 0x19
 8156 072f 29020000 		.4byte	.LASF77
 8157 0733 05       		.byte	0x5
 8158 0734 4F       		.byte	0x4f
 8159 0735 3F070000 		.4byte	0x73f
 8160 0739 05       		.uleb128 0x5
 8161 073a 03       		.byte	0x3
 8162 073b 00000000 		.4byte	Buffer_LCD2
 8163 073f 05       		.uleb128 0x5
 8164 0740 08070000 		.4byte	0x708
 8165 0744 19       		.uleb128 0x19
 8166 0745 F4040000 		.4byte	.LASF78
 8167 0749 05       		.byte	0x5
 8168 074a 50       		.byte	0x50
 8169 074b AC000000 		.4byte	0xac
 8170 074f 05       		.uleb128 0x5
 8171 0750 03       		.byte	0x3
 8172 0751 00000000 		.4byte	count_protector
 8173 0755 19       		.uleb128 0x19
 8174 0756 35000000 		.4byte	.LASF79
 8175 075a 05       		.byte	0x5
 8176 075b 50       		.byte	0x50
 8177 075c AC000000 		.4byte	0xac
 8178 0760 05       		.uleb128 0x5
 8179 0761 03       		.byte	0x3
 8180 0762 00000000 		.4byte	count_protector2
 8181 0766 19       		.uleb128 0x19
 8182 0767 8A020000 		.4byte	.LASF80
 8183 076b 05       		.byte	0x5
 8184 076c 51       		.byte	0x51
 8185 076d 77070000 		.4byte	0x777
 8186 0771 05       		.uleb128 0x5
 8187 0772 03       		.byte	0x3
 8188 0773 00000000 		.4byte	password_lcd
 8189 0777 05       		.uleb128 0x5
 8190 0778 5A020000 		.4byte	0x25a
 8191 077c 19       		.uleb128 0x19
 8192 077d 85030000 		.4byte	.LASF81
 8193 0781 05       		.byte	0x5
 8194 0782 52       		.byte	0x52
 8195 0783 B1000000 		.4byte	0xb1
 8196 0787 05       		.uleb128 0x5
 8197 0788 03       		.byte	0x3
 8198 0789 00000000 		.4byte	imagen_grado1
 8199 078d 19       		.uleb128 0x19
 8200 078e 93030000 		.4byte	.LASF82
 8201 0792 05       		.byte	0x5
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 176


 8202 0793 52       		.byte	0x52
 8203 0794 B1000000 		.4byte	0xb1
 8204 0798 05       		.uleb128 0x5
 8205 0799 03       		.byte	0x3
 8206 079a 00000000 		.4byte	imagen_grado2
 8207 079e 19       		.uleb128 0x19
 8208 079f A1030000 		.4byte	.LASF83
 8209 07a3 05       		.byte	0x5
 8210 07a4 52       		.byte	0x52
 8211 07a5 B1000000 		.4byte	0xb1
 8212 07a9 05       		.uleb128 0x5
 8213 07aa 03       		.byte	0x3
 8214 07ab 00000000 		.4byte	imagen_grado3
 8215 07af 19       		.uleb128 0x19
 8216 07b0 6A010000 		.4byte	.LASF84
 8217 07b4 05       		.byte	0x5
 8218 07b5 52       		.byte	0x52
 8219 07b6 B1000000 		.4byte	0xb1
 8220 07ba 05       		.uleb128 0x5
 8221 07bb 03       		.byte	0x3
 8222 07bc 00000000 		.4byte	imagen_grado4
 8223 07c0 06       		.uleb128 0x6
 8224 07c1 8C000000 		.4byte	0x8c
 8225 07c5 D6070000 		.4byte	0x7d6
 8226 07c9 07       		.uleb128 0x7
 8227 07ca B6000000 		.4byte	0xb6
 8228 07ce 03       		.byte	0x3
 8229 07cf 07       		.uleb128 0x7
 8230 07d0 B6000000 		.4byte	0xb6
 8231 07d4 01       		.byte	0x1
 8232 07d5 00       		.byte	0
 8233 07d6 19       		.uleb128 0x19
 8234 07d7 11010000 		.4byte	.LASF85
 8235 07db 05       		.byte	0x5
 8236 07dc 53       		.byte	0x53
 8237 07dd E7070000 		.4byte	0x7e7
 8238 07e1 05       		.uleb128 0x5
 8239 07e2 03       		.byte	0x3
 8240 07e3 00000000 		.4byte	prox_caso
 8241 07e7 05       		.uleb128 0x5
 8242 07e8 C0070000 		.4byte	0x7c0
 8243 07ec 06       		.uleb128 0x6
 8244 07ed 81000000 		.4byte	0x81
 8245 07f1 FC070000 		.4byte	0x7fc
 8246 07f5 07       		.uleb128 0x7
 8247 07f6 B6000000 		.4byte	0xb6
 8248 07fa 02       		.byte	0x2
 8249 07fb 00       		.byte	0
 8250 07fc 19       		.uleb128 0x19
 8251 07fd 3A020000 		.4byte	.LASF86
 8252 0801 05       		.byte	0x5
 8253 0802 54       		.byte	0x54
 8254 0803 0D080000 		.4byte	0x80d
 8255 0807 05       		.uleb128 0x5
 8256 0808 03       		.byte	0x3
 8257 0809 00000000 		.4byte	bloqueo_LCD
 8258 080d 05       		.uleb128 0x5
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 177


 8259 080e EC070000 		.4byte	0x7ec
 8260 0812 19       		.uleb128 0x19
 8261 0813 E1030000 		.4byte	.LASF87
 8262 0817 05       		.byte	0x5
 8263 0818 58       		.byte	0x58
 8264 0819 AC000000 		.4byte	0xac
 8265 081d 05       		.uleb128 0x5
 8266 081e 03       		.byte	0x3
 8267 081f 00000000 		.4byte	ppux10
 8268 0823 06       		.uleb128 0x6
 8269 0824 81000000 		.4byte	0x81
 8270 0828 33080000 		.4byte	0x833
 8271 082c 07       		.uleb128 0x7
 8272 082d B6000000 		.4byte	0xb6
 8273 0831 10       		.byte	0x10
 8274 0832 00       		.byte	0
 8275 0833 19       		.uleb128 0x19
 8276 0834 48040000 		.4byte	.LASF88
 8277 0838 05       		.byte	0x5
 8278 0839 59       		.byte	0x59
 8279 083a 44080000 		.4byte	0x844
 8280 083e 05       		.uleb128 0x5
 8281 083f 03       		.byte	0x3
 8282 0840 00000000 		.4byte	nombre_pro1
 8283 0844 05       		.uleb128 0x5
 8284 0845 23080000 		.4byte	0x823
 8285 0849 19       		.uleb128 0x19
 8286 084a D6040000 		.4byte	.LASF89
 8287 084e 05       		.byte	0x5
 8288 084f 59       		.byte	0x59
 8289 0850 5A080000 		.4byte	0x85a
 8290 0854 05       		.uleb128 0x5
 8291 0855 03       		.byte	0x3
 8292 0856 00000000 		.4byte	nombre_pro2
 8293 085a 05       		.uleb128 0x5
 8294 085b 23080000 		.4byte	0x823
 8295 085f 19       		.uleb128 0x19
 8296 0860 54040000 		.4byte	.LASF90
 8297 0864 05       		.byte	0x5
 8298 0865 59       		.byte	0x59
 8299 0866 70080000 		.4byte	0x870
 8300 086a 05       		.uleb128 0x5
 8301 086b 03       		.byte	0x3
 8302 086c 00000000 		.4byte	nombre_pro3
 8303 0870 05       		.uleb128 0x5
 8304 0871 23080000 		.4byte	0x823
 8305 0875 19       		.uleb128 0x19
 8306 0876 9A000000 		.4byte	.LASF91
 8307 087a 05       		.byte	0x5
 8308 087b 5A       		.byte	0x5a
 8309 087c 86080000 		.4byte	0x886
 8310 0880 05       		.uleb128 0x5
 8311 0881 03       		.byte	0x3
 8312 0882 00000000 		.4byte	version
 8313 0886 05       		.uleb128 0x5
 8314 0887 BD000000 		.4byte	0xbd
 8315 088b 19       		.uleb128 0x19
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 178


 8316 088c 86010000 		.4byte	.LASF92
 8317 0890 05       		.byte	0x5
 8318 0891 64       		.byte	0x64
 8319 0892 CD000000 		.4byte	0xcd
 8320 0896 05       		.uleb128 0x5
 8321 0897 03       		.byte	0x3
 8322 0898 00000000 		.4byte	lado1
 8323 089c 19       		.uleb128 0x19
 8324 089d 8C010000 		.4byte	.LASF93
 8325 08a1 05       		.byte	0x5
 8326 08a2 65       		.byte	0x65
 8327 08a3 CD000000 		.4byte	0xcd
 8328 08a7 05       		.uleb128 0x5
 8329 08a8 03       		.byte	0x3
 8330 08a9 00000000 		.4byte	lado2
 8331 08ad 19       		.uleb128 0x19
 8332 08ae 92010000 		.4byte	.LASF94
 8333 08b2 05       		.byte	0x5
 8334 08b3 66       		.byte	0x66
 8335 08b4 CD000000 		.4byte	0xcd
 8336 08b8 05       		.uleb128 0x5
 8337 08b9 03       		.byte	0x3
 8338 08ba 00000000 		.4byte	lado3
 8339 08be 19       		.uleb128 0x19
 8340 08bf 98010000 		.4byte	.LASF95
 8341 08c3 05       		.byte	0x5
 8342 08c4 67       		.byte	0x67
 8343 08c5 CD000000 		.4byte	0xcd
 8344 08c9 05       		.uleb128 0x5
 8345 08ca 03       		.byte	0x3
 8346 08cb 00000000 		.4byte	lado4
 8347 08cf 06       		.uleb128 0x6
 8348 08d0 81000000 		.4byte	0x81
 8349 08d4 DF080000 		.4byte	0x8df
 8350 08d8 07       		.uleb128 0x7
 8351 08d9 B6000000 		.4byte	0xb6
 8352 08dd 20       		.byte	0x20
 8353 08de 00       		.byte	0
 8354 08df 19       		.uleb128 0x19
 8355 08e0 E8030000 		.4byte	.LASF96
 8356 08e4 05       		.byte	0x5
 8357 08e5 6B       		.byte	0x6b
 8358 08e6 F0080000 		.4byte	0x8f0
 8359 08ea 05       		.uleb128 0x5
 8360 08eb 03       		.byte	0x3
 8361 08ec 00000000 		.4byte	nombre
 8362 08f0 05       		.uleb128 0x5
 8363 08f1 CF080000 		.4byte	0x8cf
 8364 08f5 1A       		.uleb128 0x1a
 8365 08f6 6E697400 		.ascii	"nit\000"
 8366 08fa 05       		.byte	0x5
 8367 08fb 6C       		.byte	0x6c
 8368 08fc 06090000 		.4byte	0x906
 8369 0900 05       		.uleb128 0x5
 8370 0901 03       		.byte	0x3
 8371 0902 00000000 		.4byte	nit
 8372 0906 05       		.uleb128 0x5
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 179


 8373 0907 1F050000 		.4byte	0x51f
 8374 090b 06       		.uleb128 0x6
 8375 090c 81000000 		.4byte	0x81
 8376 0910 1B090000 		.4byte	0x91b
 8377 0914 07       		.uleb128 0x7
 8378 0915 B6000000 		.4byte	0xb6
 8379 0919 13       		.byte	0x13
 8380 091a 00       		.byte	0
 8381 091b 19       		.uleb128 0x19
 8382 091c E1010000 		.4byte	.LASF97
 8383 0920 05       		.byte	0x5
 8384 0921 6D       		.byte	0x6d
 8385 0922 2C090000 		.4byte	0x92c
 8386 0926 05       		.uleb128 0x5
 8387 0927 03       		.byte	0x3
 8388 0928 00000000 		.4byte	telefono
 8389 092c 05       		.uleb128 0x5
 8390 092d 0B090000 		.4byte	0x90b
 8391 0931 19       		.uleb128 0x19
 8392 0932 07010000 		.4byte	.LASF98
 8393 0936 05       		.byte	0x5
 8394 0937 6E       		.byte	0x6e
 8395 0938 42090000 		.4byte	0x942
 8396 093c 05       		.uleb128 0x5
 8397 093d 03       		.byte	0x3
 8398 093e 00000000 		.4byte	direccion
 8399 0942 05       		.uleb128 0x5
 8400 0943 CF080000 		.4byte	0x8cf
 8401 0947 06       		.uleb128 0x6
 8402 0948 81000000 		.4byte	0x81
 8403 094c 57090000 		.4byte	0x957
 8404 0950 07       		.uleb128 0x7
 8405 0951 B6000000 		.4byte	0xb6
 8406 0955 1F       		.byte	0x1f
 8407 0956 00       		.byte	0
 8408 0957 19       		.uleb128 0x19
 8409 0958 3E010000 		.4byte	.LASF99
 8410 095c 05       		.byte	0x5
 8411 095d 6F       		.byte	0x6f
 8412 095e 68090000 		.4byte	0x968
 8413 0962 05       		.uleb128 0x5
 8414 0963 03       		.byte	0x3
 8415 0964 00000000 		.4byte	lema1
 8416 0968 05       		.uleb128 0x5
 8417 0969 47090000 		.4byte	0x947
 8418 096d 19       		.uleb128 0x19
 8419 096e 44010000 		.4byte	.LASF100
 8420 0972 05       		.byte	0x5
 8421 0973 70       		.byte	0x70
 8422 0974 7E090000 		.4byte	0x97e
 8423 0978 05       		.uleb128 0x5
 8424 0979 03       		.byte	0x3
 8425 097a 00000000 		.4byte	lema2
 8426 097e 05       		.uleb128 0x5
 8427 097f 47090000 		.4byte	0x947
 8428 0983 06       		.uleb128 0x6
 8429 0984 81000000 		.4byte	0x81
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 180


 8430 0988 93090000 		.4byte	0x993
 8431 098c 07       		.uleb128 0x7
 8432 098d B6000000 		.4byte	0xb6
 8433 0991 01       		.byte	0x1
 8434 0992 00       		.byte	0
 8435 0993 19       		.uleb128 0x19
 8436 0994 04040000 		.4byte	.LASF101
 8437 0998 05       		.byte	0x5
 8438 0999 71       		.byte	0x71
 8439 099a A4090000 		.4byte	0x9a4
 8440 099e 05       		.uleb128 0x5
 8441 099f 03       		.byte	0x3
 8442 09a0 00000000 		.4byte	id_logo
 8443 09a4 05       		.uleb128 0x5
 8444 09a5 83090000 		.4byte	0x983
 8445 09a9 1A       		.uleb128 0x1a
 8446 09aa 6B6D00   		.ascii	"km\000"
 8447 09ad 05       		.byte	0x5
 8448 09ae 72       		.byte	0x72
 8449 09af B9090000 		.4byte	0x9b9
 8450 09b3 05       		.uleb128 0x5
 8451 09b4 03       		.byte	0x3
 8452 09b5 00000000 		.4byte	km
 8453 09b9 05       		.uleb128 0x5
 8454 09ba 83090000 		.4byte	0x983
 8455 09be 19       		.uleb128 0x19
 8456 09bf BB040000 		.4byte	.LASF102
 8457 09c3 05       		.byte	0x5
 8458 09c4 73       		.byte	0x73
 8459 09c5 EC070000 		.4byte	0x7ec
 8460 09c9 05       		.uleb128 0x5
 8461 09ca 03       		.byte	0x3
 8462 09cb 00000000 		.4byte	fecha
 8463 09cf 19       		.uleb128 0x19
 8464 09d0 C9000000 		.4byte	.LASF103
 8465 09d4 05       		.byte	0x5
 8466 09d5 74       		.byte	0x74
 8467 09d6 83090000 		.4byte	0x983
 8468 09da 05       		.uleb128 0x5
 8469 09db 03       		.byte	0x3
 8470 09dc 00000000 		.4byte	hora
 8471 09e0 19       		.uleb128 0x19
 8472 09e1 E7000000 		.4byte	.LASF104
 8473 09e5 05       		.byte	0x5
 8474 09e6 88       		.byte	0x88
 8475 09e7 73010000 		.4byte	0x173
 8476 09eb 05       		.uleb128 0x5
 8477 09ec 03       		.byte	0x3
 8478 09ed 00000000 		.4byte	rventa1
 8479 09f1 19       		.uleb128 0x19
 8480 09f2 EF000000 		.4byte	.LASF105
 8481 09f6 05       		.byte	0x5
 8482 09f7 89       		.byte	0x89
 8483 09f8 73010000 		.4byte	0x173
 8484 09fc 05       		.uleb128 0x5
 8485 09fd 03       		.byte	0x3
 8486 09fe 00000000 		.4byte	rventa2
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 181


 8487 0a02 19       		.uleb128 0x19
 8488 0a03 F7000000 		.4byte	.LASF106
 8489 0a07 05       		.byte	0x5
 8490 0a08 8A       		.byte	0x8a
 8491 0a09 73010000 		.4byte	0x173
 8492 0a0d 05       		.uleb128 0x5
 8493 0a0e 03       		.byte	0x3
 8494 0a0f 00000000 		.4byte	rventa3
 8495 0a13 19       		.uleb128 0x19
 8496 0a14 FF000000 		.4byte	.LASF107
 8497 0a18 05       		.byte	0x5
 8498 0a19 8B       		.byte	0x8b
 8499 0a1a 73010000 		.4byte	0x173
 8500 0a1e 05       		.uleb128 0x5
 8501 0a1f 03       		.byte	0x3
 8502 0a20 00000000 		.4byte	rventa4
 8503 0a24 19       		.uleb128 0x19
 8504 0a25 B3000000 		.4byte	.LASF108
 8505 0a29 05       		.byte	0x5
 8506 0a2a 90       		.byte	0x90
 8507 0a2b 81000000 		.4byte	0x81
 8508 0a2f 05       		.uleb128 0x5
 8509 0a30 03       		.byte	0x3
 8510 0a31 00000000 		.4byte	ok_RF
 8511 0a35 19       		.uleb128 0x19
 8512 0a36 CB040000 		.4byte	.LASF109
 8513 0a3a 05       		.byte	0x5
 8514 0a3b 91       		.byte	0x91
 8515 0a3c 81000000 		.4byte	0x81
 8516 0a40 05       		.uleb128 0x5
 8517 0a41 03       		.byte	0x3
 8518 0a42 00000000 		.4byte	ok_datosRF
 8519 0a46 06       		.uleb128 0x6
 8520 0a47 81000000 		.4byte	0x81
 8521 0a4b 560A0000 		.4byte	0xa56
 8522 0a4f 07       		.uleb128 0x7
 8523 0a50 B6000000 		.4byte	0xb6
 8524 0a54 C7       		.byte	0xc7
 8525 0a55 00       		.byte	0
 8526 0a56 19       		.uleb128 0x19
 8527 0a57 0D020000 		.4byte	.LASF110
 8528 0a5b 05       		.byte	0x5
 8529 0a5c 92       		.byte	0x92
 8530 0a5d 460A0000 		.4byte	0xa46
 8531 0a61 05       		.uleb128 0x5
 8532 0a62 03       		.byte	0x3
 8533 0a63 00000000 		.4byte	rf_mod
 8534 0a67 06       		.uleb128 0x6
 8535 0a68 81000000 		.4byte	0x81
 8536 0a6c 770A0000 		.4byte	0xa77
 8537 0a70 07       		.uleb128 0x7
 8538 0a71 B6000000 		.4byte	0xb6
 8539 0a75 3F       		.byte	0x3f
 8540 0a76 00       		.byte	0
 8541 0a77 19       		.uleb128 0x19
 8542 0a78 33010000 		.4byte	.LASF111
 8543 0a7c 05       		.byte	0x5
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 182


 8544 0a7d 97       		.byte	0x97
 8545 0a7e 670A0000 		.4byte	0xa67
 8546 0a82 05       		.uleb128 0x5
 8547 0a83 03       		.byte	0x3
 8548 0a84 00000000 		.4byte	buffer_i2c
 8549 0a88 19       		.uleb128 0x19
 8550 0a89 EF030000 		.4byte	.LASF112
 8551 0a8d 05       		.byte	0x5
 8552 0a8e 9C       		.byte	0x9c
 8553 0a8f 81000000 		.4byte	0x81
 8554 0a93 05       		.uleb128 0x5
 8555 0a94 03       		.byte	0x3
 8556 0a95 00000000 		.4byte	crc_total
 8557 0a99 19       		.uleb128 0x19
 8558 0a9a 63020000 		.4byte	.LASF113
 8559 0a9e 05       		.byte	0x5
 8560 0a9f A0       		.byte	0xa0
 8561 0aa0 83090000 		.4byte	0x983
 8562 0aa4 05       		.uleb128 0x5
 8563 0aa5 03       		.byte	0x3
 8564 0aa6 00000000 		.4byte	print1
 8565 0aaa 19       		.uleb128 0x19
 8566 0aab 6A020000 		.4byte	.LASF114
 8567 0aaf 05       		.byte	0x5
 8568 0ab0 A1       		.byte	0xa1
 8569 0ab1 83090000 		.4byte	0x983
 8570 0ab5 05       		.uleb128 0x5
 8571 0ab6 03       		.byte	0x3
 8572 0ab7 00000000 		.4byte	print2
 8573 0abb 19       		.uleb128 0x19
 8574 0abc 7A030000 		.4byte	.LASF115
 8575 0ac0 01       		.byte	0x1
 8576 0ac1 2F       		.byte	0x2f
 8577 0ac2 81000000 		.4byte	0x81
 8578 0ac6 05       		.uleb128 0x5
 8579 0ac7 03       		.byte	0x3
 8580 0ac8 00000000 		.4byte	rx_timeout
 8581 0acc 19       		.uleb128 0x19
 8582 0acd 9E010000 		.4byte	.LASF116
 8583 0ad1 01       		.byte	0x1
 8584 0ad2 30       		.byte	0x30
 8585 0ad3 23080000 		.4byte	0x823
 8586 0ad7 05       		.uleb128 0x5
 8587 0ad8 03       		.byte	0x3
 8588 0ad9 00000000 		.4byte	msn_tc
 8589 0add 06       		.uleb128 0x6
 8590 0ade 81000000 		.4byte	0x81
 8591 0ae2 ED0A0000 		.4byte	0xaed
 8592 0ae6 07       		.uleb128 0x7
 8593 0ae7 B6000000 		.4byte	0xb6
 8594 0aeb 0C       		.byte	0xc
 8595 0aec 00       		.byte	0
 8596 0aed 19       		.uleb128 0x19
 8597 0aee AC010000 		.4byte	.LASF117
 8598 0af2 01       		.byte	0x1
 8599 0af3 31       		.byte	0x31
 8600 0af4 DD0A0000 		.4byte	0xadd
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 183


 8601 0af8 05       		.uleb128 0x5
 8602 0af9 03       		.byte	0x3
 8603 0afa 00000000 		.4byte	msn_te
 8604 0afe 06       		.uleb128 0x6
 8605 0aff 81000000 		.4byte	0x81
 8606 0b03 0E0B0000 		.4byte	0xb0e
 8607 0b07 07       		.uleb128 0x7
 8608 0b08 B6000000 		.4byte	0xb6
 8609 0b0c 0D       		.byte	0xd
 8610 0b0d 00       		.byte	0
 8611 0b0e 19       		.uleb128 0x19
 8612 0b0f A5010000 		.4byte	.LASF118
 8613 0b13 01       		.byte	0x1
 8614 0b14 32       		.byte	0x32
 8615 0b15 FE0A0000 		.4byte	0xafe
 8616 0b19 05       		.uleb128 0x5
 8617 0b1a 03       		.byte	0x3
 8618 0b1b 00000000 		.4byte	msn_td
 8619 0b1f 19       		.uleb128 0x19
 8620 0b20 02020000 		.4byte	.LASF119
 8621 0b24 01       		.byte	0x1
 8622 0b25 33       		.byte	0x33
 8623 0b26 1F050000 		.4byte	0x51f
 8624 0b2a 05       		.uleb128 0x5
 8625 0b2b 03       		.byte	0x3
 8626 0b2c 00000000 		.4byte	msn_lecact
 8627 0b30 19       		.uleb128 0x19
 8628 0b31 28010000 		.4byte	.LASF120
 8629 0b35 01       		.byte	0x1
 8630 0b36 34       		.byte	0x34
 8631 0b37 23080000 		.4byte	0x823
 8632 0b3b 05       		.uleb128 0x5
 8633 0b3c 03       		.byte	0x3
 8634 0b3d 00000000 		.4byte	msn_lecaan
 8635 0b41 19       		.uleb128 0x19
 8636 0b42 57020000 		.4byte	.LASF121
 8637 0b46 01       		.byte	0x1
 8638 0b47 35       		.byte	0x35
 8639 0b48 9C040000 		.4byte	0x49c
 8640 0b4c 05       		.uleb128 0x5
 8641 0b4d 03       		.byte	0x3
 8642 0b4e 00000000 		.4byte	msn_tventas
 8643 0b52 00       		.byte	0
 8644              		.section	.debug_abbrev,"",%progbits
 8645              	.Ldebug_abbrev0:
 8646 0000 01       		.uleb128 0x1
 8647 0001 11       		.uleb128 0x11
 8648 0002 01       		.byte	0x1
 8649 0003 25       		.uleb128 0x25
 8650 0004 0E       		.uleb128 0xe
 8651 0005 13       		.uleb128 0x13
 8652 0006 0B       		.uleb128 0xb
 8653 0007 03       		.uleb128 0x3
 8654 0008 0E       		.uleb128 0xe
 8655 0009 1B       		.uleb128 0x1b
 8656 000a 0E       		.uleb128 0xe
 8657 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 184


 8658 000c 17       		.uleb128 0x17
 8659 000d 11       		.uleb128 0x11
 8660 000e 01       		.uleb128 0x1
 8661 000f 10       		.uleb128 0x10
 8662 0010 17       		.uleb128 0x17
 8663 0011 00       		.byte	0
 8664 0012 00       		.byte	0
 8665 0013 02       		.uleb128 0x2
 8666 0014 24       		.uleb128 0x24
 8667 0015 00       		.byte	0
 8668 0016 0B       		.uleb128 0xb
 8669 0017 0B       		.uleb128 0xb
 8670 0018 3E       		.uleb128 0x3e
 8671 0019 0B       		.uleb128 0xb
 8672 001a 03       		.uleb128 0x3
 8673 001b 0E       		.uleb128 0xe
 8674 001c 00       		.byte	0
 8675 001d 00       		.byte	0
 8676 001e 03       		.uleb128 0x3
 8677 001f 16       		.uleb128 0x16
 8678 0020 00       		.byte	0
 8679 0021 03       		.uleb128 0x3
 8680 0022 0E       		.uleb128 0xe
 8681 0023 3A       		.uleb128 0x3a
 8682 0024 0B       		.uleb128 0xb
 8683 0025 3B       		.uleb128 0x3b
 8684 0026 0B       		.uleb128 0xb
 8685 0027 49       		.uleb128 0x49
 8686 0028 13       		.uleb128 0x13
 8687 0029 00       		.byte	0
 8688 002a 00       		.byte	0
 8689 002b 04       		.uleb128 0x4
 8690 002c 24       		.uleb128 0x24
 8691 002d 00       		.byte	0
 8692 002e 0B       		.uleb128 0xb
 8693 002f 0B       		.uleb128 0xb
 8694 0030 3E       		.uleb128 0x3e
 8695 0031 0B       		.uleb128 0xb
 8696 0032 03       		.uleb128 0x3
 8697 0033 08       		.uleb128 0x8
 8698 0034 00       		.byte	0
 8699 0035 00       		.byte	0
 8700 0036 05       		.uleb128 0x5
 8701 0037 35       		.uleb128 0x35
 8702 0038 00       		.byte	0
 8703 0039 49       		.uleb128 0x49
 8704 003a 13       		.uleb128 0x13
 8705 003b 00       		.byte	0
 8706 003c 00       		.byte	0
 8707 003d 06       		.uleb128 0x6
 8708 003e 01       		.uleb128 0x1
 8709 003f 01       		.byte	0x1
 8710 0040 49       		.uleb128 0x49
 8711 0041 13       		.uleb128 0x13
 8712 0042 01       		.uleb128 0x1
 8713 0043 13       		.uleb128 0x13
 8714 0044 00       		.byte	0
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 185


 8715 0045 00       		.byte	0
 8716 0046 07       		.uleb128 0x7
 8717 0047 21       		.uleb128 0x21
 8718 0048 00       		.byte	0
 8719 0049 49       		.uleb128 0x49
 8720 004a 13       		.uleb128 0x13
 8721 004b 2F       		.uleb128 0x2f
 8722 004c 0B       		.uleb128 0xb
 8723 004d 00       		.byte	0
 8724 004e 00       		.byte	0
 8725 004f 08       		.uleb128 0x8
 8726 0050 13       		.uleb128 0x13
 8727 0051 01       		.byte	0x1
 8728 0052 03       		.uleb128 0x3
 8729 0053 0E       		.uleb128 0xe
 8730 0054 0B       		.uleb128 0xb
 8731 0055 0B       		.uleb128 0xb
 8732 0056 3A       		.uleb128 0x3a
 8733 0057 0B       		.uleb128 0xb
 8734 0058 3B       		.uleb128 0x3b
 8735 0059 0B       		.uleb128 0xb
 8736 005a 01       		.uleb128 0x1
 8737 005b 13       		.uleb128 0x13
 8738 005c 00       		.byte	0
 8739 005d 00       		.byte	0
 8740 005e 09       		.uleb128 0x9
 8741 005f 0D       		.uleb128 0xd
 8742 0060 00       		.byte	0
 8743 0061 03       		.uleb128 0x3
 8744 0062 08       		.uleb128 0x8
 8745 0063 3A       		.uleb128 0x3a
 8746 0064 0B       		.uleb128 0xb
 8747 0065 3B       		.uleb128 0x3b
 8748 0066 0B       		.uleb128 0xb
 8749 0067 49       		.uleb128 0x49
 8750 0068 13       		.uleb128 0x13
 8751 0069 38       		.uleb128 0x38
 8752 006a 0B       		.uleb128 0xb
 8753 006b 00       		.byte	0
 8754 006c 00       		.byte	0
 8755 006d 0A       		.uleb128 0xa
 8756 006e 0D       		.uleb128 0xd
 8757 006f 00       		.byte	0
 8758 0070 03       		.uleb128 0x3
 8759 0071 0E       		.uleb128 0xe
 8760 0072 3A       		.uleb128 0x3a
 8761 0073 0B       		.uleb128 0xb
 8762 0074 3B       		.uleb128 0x3b
 8763 0075 0B       		.uleb128 0xb
 8764 0076 49       		.uleb128 0x49
 8765 0077 13       		.uleb128 0x13
 8766 0078 38       		.uleb128 0x38
 8767 0079 0B       		.uleb128 0xb
 8768 007a 00       		.byte	0
 8769 007b 00       		.byte	0
 8770 007c 0B       		.uleb128 0xb
 8771 007d 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 186


 8772 007e 00       		.byte	0
 8773 007f 3F       		.uleb128 0x3f
 8774 0080 19       		.uleb128 0x19
 8775 0081 03       		.uleb128 0x3
 8776 0082 0E       		.uleb128 0xe
 8777 0083 3A       		.uleb128 0x3a
 8778 0084 0B       		.uleb128 0xb
 8779 0085 3B       		.uleb128 0x3b
 8780 0086 0B       		.uleb128 0xb
 8781 0087 27       		.uleb128 0x27
 8782 0088 19       		.uleb128 0x19
 8783 0089 11       		.uleb128 0x11
 8784 008a 01       		.uleb128 0x1
 8785 008b 12       		.uleb128 0x12
 8786 008c 06       		.uleb128 0x6
 8787 008d 40       		.uleb128 0x40
 8788 008e 18       		.uleb128 0x18
 8789 008f 9642     		.uleb128 0x2116
 8790 0091 19       		.uleb128 0x19
 8791 0092 00       		.byte	0
 8792 0093 00       		.byte	0
 8793 0094 0C       		.uleb128 0xc
 8794 0095 2E       		.uleb128 0x2e
 8795 0096 01       		.byte	0x1
 8796 0097 3F       		.uleb128 0x3f
 8797 0098 19       		.uleb128 0x19
 8798 0099 03       		.uleb128 0x3
 8799 009a 0E       		.uleb128 0xe
 8800 009b 3A       		.uleb128 0x3a
 8801 009c 0B       		.uleb128 0xb
 8802 009d 3B       		.uleb128 0x3b
 8803 009e 0B       		.uleb128 0xb
 8804 009f 27       		.uleb128 0x27
 8805 00a0 19       		.uleb128 0x19
 8806 00a1 49       		.uleb128 0x49
 8807 00a2 13       		.uleb128 0x13
 8808 00a3 11       		.uleb128 0x11
 8809 00a4 01       		.uleb128 0x1
 8810 00a5 12       		.uleb128 0x12
 8811 00a6 06       		.uleb128 0x6
 8812 00a7 40       		.uleb128 0x40
 8813 00a8 18       		.uleb128 0x18
 8814 00a9 9642     		.uleb128 0x2116
 8815 00ab 19       		.uleb128 0x19
 8816 00ac 01       		.uleb128 0x1
 8817 00ad 13       		.uleb128 0x13
 8818 00ae 00       		.byte	0
 8819 00af 00       		.byte	0
 8820 00b0 0D       		.uleb128 0xd
 8821 00b1 05       		.uleb128 0x5
 8822 00b2 00       		.byte	0
 8823 00b3 03       		.uleb128 0x3
 8824 00b4 08       		.uleb128 0x8
 8825 00b5 3A       		.uleb128 0x3a
 8826 00b6 0B       		.uleb128 0xb
 8827 00b7 3B       		.uleb128 0x3b
 8828 00b8 0B       		.uleb128 0xb
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 187


 8829 00b9 49       		.uleb128 0x49
 8830 00ba 13       		.uleb128 0x13
 8831 00bb 02       		.uleb128 0x2
 8832 00bc 18       		.uleb128 0x18
 8833 00bd 00       		.byte	0
 8834 00be 00       		.byte	0
 8835 00bf 0E       		.uleb128 0xe
 8836 00c0 34       		.uleb128 0x34
 8837 00c1 00       		.byte	0
 8838 00c2 03       		.uleb128 0x3
 8839 00c3 0E       		.uleb128 0xe
 8840 00c4 3A       		.uleb128 0x3a
 8841 00c5 0B       		.uleb128 0xb
 8842 00c6 3B       		.uleb128 0x3b
 8843 00c7 0B       		.uleb128 0xb
 8844 00c8 49       		.uleb128 0x49
 8845 00c9 13       		.uleb128 0x13
 8846 00ca 02       		.uleb128 0x2
 8847 00cb 18       		.uleb128 0x18
 8848 00cc 00       		.byte	0
 8849 00cd 00       		.byte	0
 8850 00ce 0F       		.uleb128 0xf
 8851 00cf 34       		.uleb128 0x34
 8852 00d0 00       		.byte	0
 8853 00d1 03       		.uleb128 0x3
 8854 00d2 08       		.uleb128 0x8
 8855 00d3 3A       		.uleb128 0x3a
 8856 00d4 0B       		.uleb128 0xb
 8857 00d5 3B       		.uleb128 0x3b
 8858 00d6 0B       		.uleb128 0xb
 8859 00d7 49       		.uleb128 0x49
 8860 00d8 13       		.uleb128 0x13
 8861 00d9 02       		.uleb128 0x2
 8862 00da 18       		.uleb128 0x18
 8863 00db 00       		.byte	0
 8864 00dc 00       		.byte	0
 8865 00dd 10       		.uleb128 0x10
 8866 00de 2E       		.uleb128 0x2e
 8867 00df 01       		.byte	0x1
 8868 00e0 3F       		.uleb128 0x3f
 8869 00e1 19       		.uleb128 0x19
 8870 00e2 03       		.uleb128 0x3
 8871 00e3 0E       		.uleb128 0xe
 8872 00e4 3A       		.uleb128 0x3a
 8873 00e5 0B       		.uleb128 0xb
 8874 00e6 3B       		.uleb128 0x3b
 8875 00e7 0B       		.uleb128 0xb
 8876 00e8 27       		.uleb128 0x27
 8877 00e9 19       		.uleb128 0x19
 8878 00ea 11       		.uleb128 0x11
 8879 00eb 01       		.uleb128 0x1
 8880 00ec 12       		.uleb128 0x12
 8881 00ed 06       		.uleb128 0x6
 8882 00ee 40       		.uleb128 0x40
 8883 00ef 18       		.uleb128 0x18
 8884 00f0 9642     		.uleb128 0x2116
 8885 00f2 19       		.uleb128 0x19
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 188


 8886 00f3 01       		.uleb128 0x1
 8887 00f4 13       		.uleb128 0x13
 8888 00f5 00       		.byte	0
 8889 00f6 00       		.byte	0
 8890 00f7 11       		.uleb128 0x11
 8891 00f8 2E       		.uleb128 0x2e
 8892 00f9 01       		.byte	0x1
 8893 00fa 3F       		.uleb128 0x3f
 8894 00fb 19       		.uleb128 0x19
 8895 00fc 03       		.uleb128 0x3
 8896 00fd 0E       		.uleb128 0xe
 8897 00fe 3A       		.uleb128 0x3a
 8898 00ff 0B       		.uleb128 0xb
 8899 0100 3B       		.uleb128 0x3b
 8900 0101 05       		.uleb128 0x5
 8901 0102 27       		.uleb128 0x27
 8902 0103 19       		.uleb128 0x19
 8903 0104 11       		.uleb128 0x11
 8904 0105 01       		.uleb128 0x1
 8905 0106 12       		.uleb128 0x12
 8906 0107 06       		.uleb128 0x6
 8907 0108 40       		.uleb128 0x40
 8908 0109 18       		.uleb128 0x18
 8909 010a 9642     		.uleb128 0x2116
 8910 010c 19       		.uleb128 0x19
 8911 010d 01       		.uleb128 0x1
 8912 010e 13       		.uleb128 0x13
 8913 010f 00       		.byte	0
 8914 0110 00       		.byte	0
 8915 0111 12       		.uleb128 0x12
 8916 0112 05       		.uleb128 0x5
 8917 0113 00       		.byte	0
 8918 0114 03       		.uleb128 0x3
 8919 0115 08       		.uleb128 0x8
 8920 0116 3A       		.uleb128 0x3a
 8921 0117 0B       		.uleb128 0xb
 8922 0118 3B       		.uleb128 0x3b
 8923 0119 05       		.uleb128 0x5
 8924 011a 49       		.uleb128 0x49
 8925 011b 13       		.uleb128 0x13
 8926 011c 02       		.uleb128 0x2
 8927 011d 18       		.uleb128 0x18
 8928 011e 00       		.byte	0
 8929 011f 00       		.byte	0
 8930 0120 13       		.uleb128 0x13
 8931 0121 2E       		.uleb128 0x2e
 8932 0122 01       		.byte	0x1
 8933 0123 3F       		.uleb128 0x3f
 8934 0124 19       		.uleb128 0x19
 8935 0125 03       		.uleb128 0x3
 8936 0126 0E       		.uleb128 0xe
 8937 0127 3A       		.uleb128 0x3a
 8938 0128 0B       		.uleb128 0xb
 8939 0129 3B       		.uleb128 0x3b
 8940 012a 05       		.uleb128 0x5
 8941 012b 27       		.uleb128 0x27
 8942 012c 19       		.uleb128 0x19
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 189


 8943 012d 49       		.uleb128 0x49
 8944 012e 13       		.uleb128 0x13
 8945 012f 11       		.uleb128 0x11
 8946 0130 01       		.uleb128 0x1
 8947 0131 12       		.uleb128 0x12
 8948 0132 06       		.uleb128 0x6
 8949 0133 40       		.uleb128 0x40
 8950 0134 18       		.uleb128 0x18
 8951 0135 9642     		.uleb128 0x2116
 8952 0137 19       		.uleb128 0x19
 8953 0138 01       		.uleb128 0x1
 8954 0139 13       		.uleb128 0x13
 8955 013a 00       		.byte	0
 8956 013b 00       		.byte	0
 8957 013c 14       		.uleb128 0x14
 8958 013d 34       		.uleb128 0x34
 8959 013e 00       		.byte	0
 8960 013f 03       		.uleb128 0x3
 8961 0140 08       		.uleb128 0x8
 8962 0141 3A       		.uleb128 0x3a
 8963 0142 0B       		.uleb128 0xb
 8964 0143 3B       		.uleb128 0x3b
 8965 0144 05       		.uleb128 0x5
 8966 0145 49       		.uleb128 0x49
 8967 0146 13       		.uleb128 0x13
 8968 0147 02       		.uleb128 0x2
 8969 0148 18       		.uleb128 0x18
 8970 0149 00       		.byte	0
 8971 014a 00       		.byte	0
 8972 014b 15       		.uleb128 0x15
 8973 014c 05       		.uleb128 0x5
 8974 014d 00       		.byte	0
 8975 014e 03       		.uleb128 0x3
 8976 014f 0E       		.uleb128 0xe
 8977 0150 3A       		.uleb128 0x3a
 8978 0151 0B       		.uleb128 0xb
 8979 0152 3B       		.uleb128 0x3b
 8980 0153 05       		.uleb128 0x5
 8981 0154 49       		.uleb128 0x49
 8982 0155 13       		.uleb128 0x13
 8983 0156 02       		.uleb128 0x2
 8984 0157 18       		.uleb128 0x18
 8985 0158 00       		.byte	0
 8986 0159 00       		.byte	0
 8987 015a 16       		.uleb128 0x16
 8988 015b 34       		.uleb128 0x34
 8989 015c 00       		.byte	0
 8990 015d 03       		.uleb128 0x3
 8991 015e 0E       		.uleb128 0xe
 8992 015f 3A       		.uleb128 0x3a
 8993 0160 0B       		.uleb128 0xb
 8994 0161 3B       		.uleb128 0x3b
 8995 0162 05       		.uleb128 0x5
 8996 0163 49       		.uleb128 0x49
 8997 0164 13       		.uleb128 0x13
 8998 0165 02       		.uleb128 0x2
 8999 0166 18       		.uleb128 0x18
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 190


 9000 0167 00       		.byte	0
 9001 0168 00       		.byte	0
 9002 0169 17       		.uleb128 0x17
 9003 016a 0F       		.uleb128 0xf
 9004 016b 00       		.byte	0
 9005 016c 0B       		.uleb128 0xb
 9006 016d 0B       		.uleb128 0xb
 9007 016e 49       		.uleb128 0x49
 9008 016f 13       		.uleb128 0x13
 9009 0170 00       		.byte	0
 9010 0171 00       		.byte	0
 9011 0172 18       		.uleb128 0x18
 9012 0173 34       		.uleb128 0x34
 9013 0174 00       		.byte	0
 9014 0175 03       		.uleb128 0x3
 9015 0176 0E       		.uleb128 0xe
 9016 0177 3A       		.uleb128 0x3a
 9017 0178 0B       		.uleb128 0xb
 9018 0179 3B       		.uleb128 0x3b
 9019 017a 05       		.uleb128 0x5
 9020 017b 49       		.uleb128 0x49
 9021 017c 13       		.uleb128 0x13
 9022 017d 3F       		.uleb128 0x3f
 9023 017e 19       		.uleb128 0x19
 9024 017f 3C       		.uleb128 0x3c
 9025 0180 19       		.uleb128 0x19
 9026 0181 00       		.byte	0
 9027 0182 00       		.byte	0
 9028 0183 19       		.uleb128 0x19
 9029 0184 34       		.uleb128 0x34
 9030 0185 00       		.byte	0
 9031 0186 03       		.uleb128 0x3
 9032 0187 0E       		.uleb128 0xe
 9033 0188 3A       		.uleb128 0x3a
 9034 0189 0B       		.uleb128 0xb
 9035 018a 3B       		.uleb128 0x3b
 9036 018b 0B       		.uleb128 0xb
 9037 018c 49       		.uleb128 0x49
 9038 018d 13       		.uleb128 0x13
 9039 018e 3F       		.uleb128 0x3f
 9040 018f 19       		.uleb128 0x19
 9041 0190 02       		.uleb128 0x2
 9042 0191 18       		.uleb128 0x18
 9043 0192 00       		.byte	0
 9044 0193 00       		.byte	0
 9045 0194 1A       		.uleb128 0x1a
 9046 0195 34       		.uleb128 0x34
 9047 0196 00       		.byte	0
 9048 0197 03       		.uleb128 0x3
 9049 0198 08       		.uleb128 0x8
 9050 0199 3A       		.uleb128 0x3a
 9051 019a 0B       		.uleb128 0xb
 9052 019b 3B       		.uleb128 0x3b
 9053 019c 0B       		.uleb128 0xb
 9054 019d 49       		.uleb128 0x49
 9055 019e 13       		.uleb128 0x13
 9056 019f 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 191


 9057 01a0 19       		.uleb128 0x19
 9058 01a1 02       		.uleb128 0x2
 9059 01a2 18       		.uleb128 0x18
 9060 01a3 00       		.byte	0
 9061 01a4 00       		.byte	0
 9062 01a5 00       		.byte	0
 9063              		.section	.debug_aranges,"",%progbits
 9064 0000 64000000 		.4byte	0x64
 9065 0004 0200     		.2byte	0x2
 9066 0006 00000000 		.4byte	.Ldebug_info0
 9067 000a 04       		.byte	0x4
 9068 000b 00       		.byte	0
 9069 000c 0000     		.2byte	0
 9070 000e 0000     		.2byte	0
 9071 0010 00000000 		.4byte	.LFB63
 9072 0014 14000000 		.4byte	.LFE63-.LFB63
 9073 0018 00000000 		.4byte	.LFB64
 9074 001c 98000000 		.4byte	.LFE64-.LFB64
 9075 0020 00000000 		.4byte	.LFB65
 9076 0024 EC000000 		.4byte	.LFE65-.LFB65
 9077 0028 00000000 		.4byte	.LFB66
 9078 002c 36000000 		.4byte	.LFE66-.LFB66
 9079 0030 00000000 		.4byte	.LFB67
 9080 0034 7C010000 		.4byte	.LFE67-.LFB67
 9081 0038 00000000 		.4byte	.LFB68
 9082 003c 24000000 		.4byte	.LFE68-.LFB68
 9083 0040 00000000 		.4byte	.LFB69
 9084 0044 40060000 		.4byte	.LFE69-.LFB69
 9085 0048 00000000 		.4byte	.LFB70
 9086 004c 80080000 		.4byte	.LFE70-.LFB70
 9087 0050 00000000 		.4byte	.LFB71
 9088 0054 54020000 		.4byte	.LFE71-.LFB71
 9089 0058 00000000 		.4byte	.LFB72
 9090 005c 64180000 		.4byte	.LFE72-.LFB72
 9091 0060 00000000 		.4byte	0
 9092 0064 00000000 		.4byte	0
 9093              		.section	.debug_ranges,"",%progbits
 9094              	.Ldebug_ranges0:
 9095 0000 00000000 		.4byte	.LFB63
 9096 0004 14000000 		.4byte	.LFE63
 9097 0008 00000000 		.4byte	.LFB64
 9098 000c 98000000 		.4byte	.LFE64
 9099 0010 00000000 		.4byte	.LFB65
 9100 0014 EC000000 		.4byte	.LFE65
 9101 0018 00000000 		.4byte	.LFB66
 9102 001c 36000000 		.4byte	.LFE66
 9103 0020 00000000 		.4byte	.LFB67
 9104 0024 7C010000 		.4byte	.LFE67
 9105 0028 00000000 		.4byte	.LFB68
 9106 002c 24000000 		.4byte	.LFE68
 9107 0030 00000000 		.4byte	.LFB69
 9108 0034 40060000 		.4byte	.LFE69
 9109 0038 00000000 		.4byte	.LFB70
 9110 003c 80080000 		.4byte	.LFE70
 9111 0040 00000000 		.4byte	.LFB71
 9112 0044 54020000 		.4byte	.LFE71
 9113 0048 00000000 		.4byte	.LFB72
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 192


 9114 004c 64180000 		.4byte	.LFE72
 9115 0050 00000000 		.4byte	0
 9116 0054 00000000 		.4byte	0
 9117              		.section	.debug_line,"",%progbits
 9118              	.Ldebug_line0:
 9119 0000 EE0F0000 		.section	.debug_str,"MS",%progbits,1
 9119      02006E01 
 9119      00000201 
 9119      FB0E0D00 
 9119      01010101 
 9120              	.LASF33:
 9121 0000 70617373 		.ascii	"password\000"
 9121      776F7264 
 9121      00
 9122              	.LASF72:
 9123 0009 666C756A 		.ascii	"flujo_LCD1\000"
 9123      6F5F4C43 
 9123      443100
 9124              	.LASF73:
 9125 0014 666C756A 		.ascii	"flujo_LCD2\000"
 9125      6F5F4C43 
 9125      443200
 9126              	.LASF74:
 9127 001f 666C756A 		.ascii	"flujo_LCD3\000"
 9127      6F5F4C43 
 9127      443300
 9128              	.LASF75:
 9129 002a 666C756A 		.ascii	"flujo_LCD4\000"
 9129      6F5F4C43 
 9129      443400
 9130              	.LASF79:
 9131 0035 636F756E 		.ascii	"count_protector2\000"
 9131      745F7072 
 9131      6F746563 
 9131      746F7232 
 9131      00
 9132              	.LASF124:
 9133 0046 433A5C55 		.ascii	"C:\\Users\\Usuario\\Desktop\\MUX2\\MUX_Prime.cydsn\000"
 9133      73657273 
 9133      5C557375 
 9133      6172696F 
 9133      5C446573 
 9134              	.LASF59:
 9135 0074 69645F63 		.ascii	"id_coma1\000"
 9135      6F6D6131 
 9135      00
 9136              	.LASF62:
 9137 007d 69645F63 		.ascii	"id_coma2\000"
 9137      6F6D6132 
 9137      00
 9138              	.LASF46:
 9139 0086 62756666 		.ascii	"buffer\000"
 9139      657200
 9140              	.LASF8:
 9141 008d 756E7369 		.ascii	"unsigned int\000"
 9141      676E6564 
 9141      20696E74 
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 193


 9141      00
 9142              	.LASF91:
 9143 009a 76657273 		.ascii	"version\000"
 9143      696F6E00 
 9144              	.LASF9:
 9145 00a2 5F5F696E 		.ascii	"__int32_t\000"
 9145      7433325F 
 9145      7400
 9146              	.LASF51:
 9147 00ac 70726563 		.ascii	"precio\000"
 9147      696F00
 9148              	.LASF108:
 9149 00b3 6F6B5F52 		.ascii	"ok_RF\000"
 9149      4600
 9150              	.LASF52:
 9151 00b9 6E756D5F 		.ascii	"num_man\000"
 9151      6D616E00 
 9152              	.LASF49:
 9153 00c1 64656369 		.ascii	"decimal\000"
 9153      6D616C00 
 9154              	.LASF103:
 9155 00c9 686F7261 		.ascii	"hora\000"
 9155      00
 9156              	.LASF70:
 9157 00ce 7465636C 		.ascii	"teclas1\000"
 9157      61733100 
 9158              	.LASF71:
 9159 00d6 7465636C 		.ascii	"teclas2\000"
 9159      61733200 
 9160              	.LASF23:
 9161 00de 706F7369 		.ascii	"posicion\000"
 9161      63696F6E 
 9161      00
 9162              	.LASF104:
 9163 00e7 7276656E 		.ascii	"rventa1\000"
 9163      74613100 
 9164              	.LASF105:
 9165 00ef 7276656E 		.ascii	"rventa2\000"
 9165      74613200 
 9166              	.LASF106:
 9167 00f7 7276656E 		.ascii	"rventa3\000"
 9167      74613300 
 9168              	.LASF107:
 9169 00ff 7276656E 		.ascii	"rventa4\000"
 9169      74613400 
 9170              	.LASF98:
 9171 0107 64697265 		.ascii	"direccion\000"
 9171      6363696F 
 9171      6E00
 9172              	.LASF85:
 9173 0111 70726F78 		.ascii	"prox_caso\000"
 9173      5F636173 
 9173      6F00
 9174              	.LASF28:
 9175 011b 70726573 		.ascii	"preset\000"
 9175      657400
 9176              	.LASF13:
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 194


 9177 0122 666C6F61 		.ascii	"float\000"
 9177      7400
 9178              	.LASF120:
 9179 0128 6D736E5F 		.ascii	"msn_lecaan\000"
 9179      6C656361 
 9179      616E00
 9180              	.LASF111:
 9181 0133 62756666 		.ascii	"buffer_i2c\000"
 9181      65725F69 
 9181      326300
 9182              	.LASF99:
 9183 013e 6C656D61 		.ascii	"lema1\000"
 9183      3100
 9184              	.LASF100:
 9185 0144 6C656D61 		.ascii	"lema2\000"
 9185      3200
 9186              	.LASF30:
 9187 014a 696D7072 		.ascii	"imprimir\000"
 9187      696D6972 
 9187      00
 9188              	.LASF7:
 9189 0153 6C6F6E67 		.ascii	"long long unsigned int\000"
 9189      206C6F6E 
 9189      6720756E 
 9189      7369676E 
 9189      65642069 
 9190              	.LASF84:
 9191 016a 696D6167 		.ascii	"imagen_grado4\000"
 9191      656E5F67 
 9191      7261646F 
 9191      3400
 9192              	.LASF123:
 9193 0178 2E5C5072 		.ascii	".\\Protocolo.c\000"
 9193      6F746F63 
 9193      6F6C6F2E 
 9193      6300
 9194              	.LASF92:
 9195 0186 6C61646F 		.ascii	"lado1\000"
 9195      3100
 9196              	.LASF93:
 9197 018c 6C61646F 		.ascii	"lado2\000"
 9197      3200
 9198              	.LASF94:
 9199 0192 6C61646F 		.ascii	"lado3\000"
 9199      3300
 9200              	.LASF95:
 9201 0198 6C61646F 		.ascii	"lado4\000"
 9201      3400
 9202              	.LASF116:
 9203 019e 6D736E5F 		.ascii	"msn_tc\000"
 9203      746300
 9204              	.LASF118:
 9205 01a5 6D736E5F 		.ascii	"msn_td\000"
 9205      746400
 9206              	.LASF117:
 9207 01ac 6D736E5F 		.ascii	"msn_te\000"
 9207      746500
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 195


 9208              	.LASF54:
 9209 01b3 53757274 		.ascii	"Surtidor_rxBuffer\000"
 9209      69646F72 
 9209      5F727842 
 9209      75666665 
 9209      7200
 9210              	.LASF29:
 9211 01c5 706C6163 		.ascii	"placa\000"
 9211      6100
 9212              	.LASF37:
 9213 01cb 7665725F 		.ascii	"ver_pos\000"
 9213      706F7300 
 9214              	.LASF25:
 9215 01d3 766F6C75 		.ascii	"volumen\000"
 9215      6D656E00 
 9216              	.LASF43:
 9217 01db 76656E74 		.ascii	"venta\000"
 9217      6100
 9218              	.LASF97:
 9219 01e1 74656C65 		.ascii	"telefono\000"
 9219      666F6E6F 
 9219      00
 9220              	.LASF60:
 9221 01ea 69645F74 		.ascii	"id_teclado1\000"
 9221      65636C61 
 9221      646F3100 
 9222              	.LASF63:
 9223 01f6 69645F74 		.ascii	"id_teclado2\000"
 9223      65636C61 
 9223      646F3200 
 9224              	.LASF119:
 9225 0202 6D736E5F 		.ascii	"msn_lecact\000"
 9225      6C656361 
 9225      637400
 9226              	.LASF110:
 9227 020d 72665F6D 		.ascii	"rf_mod\000"
 9227      6F6400
 9228              	.LASF42:
 9229 0214 64657465 		.ascii	"detener\000"
 9229      6E657200 
 9230              	.LASF40:
 9231 021c 636F6D61 		.ascii	"comand_exten\000"
 9231      6E645F65 
 9231      7874656E 
 9231      00
 9232              	.LASF77:
 9233 0229 42756666 		.ascii	"Buffer_LCD2\000"
 9233      65725F4C 
 9233      43443200 
 9234              	.LASF15:
 9235 0235 63686172 		.ascii	"char\000"
 9235      00
 9236              	.LASF86:
 9237 023a 626C6F71 		.ascii	"bloqueo_LCD\000"
 9237      75656F5F 
 9237      4C434400 
 9238              	.LASF20:
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 196


 9239 0246 6D616E67 		.ascii	"mangueras\000"
 9239      75657261 
 9239      7300
 9240              	.LASF12:
 9241 0250 75696E74 		.ascii	"uint16\000"
 9241      313600
 9242              	.LASF121:
 9243 0257 6D736E5F 		.ascii	"msn_tventas\000"
 9243      7476656E 
 9243      74617300 
 9244              	.LASF113:
 9245 0263 7072696E 		.ascii	"print1\000"
 9245      743100
 9246              	.LASF114:
 9247 026a 7072696E 		.ascii	"print2\000"
 9247      743200
 9248              	.LASF31:
 9249 0271 7469706F 		.ascii	"tipo_venta\000"
 9249      5F76656E 
 9249      746100
 9250              	.LASF34:
 9251 027c 7475726E 		.ascii	"turno\000"
 9251      6F00
 9252              	.LASF18:
 9253 0282 746F7461 		.ascii	"totales\000"
 9253      6C657300 
 9254              	.LASF80:
 9255 028a 70617373 		.ascii	"password_lcd\000"
 9255      776F7264 
 9255      5F6C6364 
 9255      00
 9256              	.LASF56:
 9257 0297 636F756E 		.ascii	"count_teclas1\000"
 9257      745F7465 
 9257      636C6173 
 9257      3100
 9258              	.LASF61:
 9259 02a5 636F756E 		.ascii	"count_teclas2\000"
 9259      745F7465 
 9259      636C6173 
 9259      3200
 9260              	.LASF64:
 9261 02b3 706F7378 		.ascii	"posx1\000"
 9261      3100
 9262              	.LASF67:
 9263 02b9 706F7378 		.ascii	"posx2\000"
 9263      3200
 9264              	.LASF6:
 9265 02bf 6C6F6E67 		.ascii	"long long int\000"
 9265      206C6F6E 
 9265      6720696E 
 9265      7400
 9266              	.LASF26:
 9267 02cd 70726F64 		.ascii	"producto\000"
 9267      7563746F 
 9267      00
 9268              	.LASF50:
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 197


 9269 02d6 63616D62 		.ascii	"cambiar_precio\000"
 9269      6961725F 
 9269      70726563 
 9269      696F00
 9270              	.LASF32:
 9271 02e5 63656475 		.ascii	"cedula\000"
 9271      6C6100
 9272              	.LASF122:
 9273 02ec 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 9273      4320342E 
 9273      392E3320 
 9273      32303135 
 9273      30333033 
 9274 031f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 9274      20726576 
 9274      6973696F 
 9274      6E203232 
 9274      31323230 
 9275 0352 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 9275      66756E63 
 9275      74696F6E 
 9275      2D736563 
 9275      74696F6E 
 9276              	.LASF115:
 9277 037a 72785F74 		.ascii	"rx_timeout\000"
 9277      696D656F 
 9277      757400
 9278              	.LASF81:
 9279 0385 696D6167 		.ascii	"imagen_grado1\000"
 9279      656E5F67 
 9279      7261646F 
 9279      3100
 9280              	.LASF82:
 9281 0393 696D6167 		.ascii	"imagen_grado2\000"
 9281      656E5F67 
 9281      7261646F 
 9281      3200
 9282              	.LASF83:
 9283 03a1 696D6167 		.ascii	"imagen_grado3\000"
 9283      656E5F67 
 9283      7261646F 
 9283      3300
 9284              	.LASF65:
 9285 03af 706F7379 		.ascii	"posy1\000"
 9285      3100
 9286              	.LASF68:
 9287 03b5 706F7379 		.ascii	"posy2\000"
 9287      3200
 9288              	.LASF47:
 9289 03bb 73697A65 		.ascii	"size\000"
 9289      00
 9290              	.LASF22:
 9291 03c0 72656369 		.ascii	"recibo\000"
 9291      626F00
 9292              	.LASF24:
 9293 03c7 64696E65 		.ascii	"dinero\000"
 9293      726F00
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 198


 9294              	.LASF76:
 9295 03ce 42756666 		.ascii	"Buffer_LCD1\000"
 9295      65725F4C 
 9295      43443100 
 9296              	.LASF17:
 9297 03da 65737461 		.ascii	"estado\000"
 9297      646F00
 9298              	.LASF87:
 9299 03e1 70707578 		.ascii	"ppux10\000"
 9299      313000
 9300              	.LASF96:
 9301 03e8 6E6F6D62 		.ascii	"nombre\000"
 9301      726500
 9302              	.LASF112:
 9303 03ef 6372635F 		.ascii	"crc_total\000"
 9303      746F7461 
 9303      6C00
 9304              	.LASF53:
 9305 03f9 6E6D616E 		.ascii	"nmangueras\000"
 9305      67756572 
 9305      617300
 9306              	.LASF101:
 9307 0404 69645F6C 		.ascii	"id_logo\000"
 9307      6F676F00 
 9308              	.LASF2:
 9309 040c 73686F72 		.ascii	"short int\000"
 9309      7420696E 
 9309      7400
 9310              	.LASF4:
 9311 0416 6C6F6E67 		.ascii	"long int\000"
 9311      20696E74 
 9311      00
 9312              	.LASF55:
 9313 041f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 9313      52784275 
 9313      66666572 
 9313      00
 9314              	.LASF21:
 9315 042c 73757274 		.ascii	"surtidor\000"
 9315      69646F72 
 9315      00
 9316              	.LASF57:
 9317 0435 636F6D61 		.ascii	"comas1\000"
 9317      733100
 9318              	.LASF58:
 9319 043c 636F6D61 		.ascii	"comas2\000"
 9319      733200
 9320              	.LASF48:
 9321 0443 74656D70 		.ascii	"temp\000"
 9321      00
 9322              	.LASF88:
 9323 0448 6E6F6D62 		.ascii	"nombre_pro1\000"
 9323      72655F70 
 9323      726F3100 
 9324              	.LASF90:
 9325 0454 6E6F6D62 		.ascii	"nombre_pro3\000"
 9325      72655F70 
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 199


 9325      726F3300 
 9326              	.LASF38:
 9327 0460 65737461 		.ascii	"estado_ex\000"
 9327      646F5F65 
 9327      7800
 9328              	.LASF44:
 9329 046a 70726F67 		.ascii	"programar\000"
 9329      72616D61 
 9329      7200
 9330              	.LASF16:
 9331 0474 73697A65 		.ascii	"sizetype\000"
 9331      74797065 
 9331      00
 9332              	.LASF5:
 9333 047d 6C6F6E67 		.ascii	"long unsigned int\000"
 9333      20756E73 
 9333      69676E65 
 9333      6420696E 
 9333      7400
 9334              	.LASF10:
 9335 048f 696E7433 		.ascii	"int32_t\000"
 9335      325F7400 
 9336              	.LASF35:
 9337 0497 6175746F 		.ascii	"autorizado\000"
 9337      72697A61 
 9337      646F00
 9338              	.LASF1:
 9339 04a2 756E7369 		.ascii	"unsigned char\000"
 9339      676E6564 
 9339      20636861 
 9339      7200
 9340              	.LASF36:
 9341 04b0 6765745F 		.ascii	"get_estado\000"
 9341      65737461 
 9341      646F00
 9342              	.LASF102:
 9343 04bb 66656368 		.ascii	"fecha\000"
 9343      6100
 9344              	.LASF41:
 9345 04c1 7665725F 		.ascii	"ver_error\000"
 9345      6572726F 
 9345      7200
 9346              	.LASF109:
 9347 04cb 6F6B5F64 		.ascii	"ok_datosRF\000"
 9347      61746F73 
 9347      524600
 9348              	.LASF89:
 9349 04d6 6E6F6D62 		.ascii	"nombre_pro2\000"
 9349      72655F70 
 9349      726F3200 
 9350              	.LASF0:
 9351 04e2 7369676E 		.ascii	"signed char\000"
 9351      65642063 
 9351      68617200 
 9352              	.LASF45:
 9353 04ee 76616C6F 		.ascii	"valor\000"
 9353      7200
ARM GAS  C:\Users\Usuario\AppData\Local\Temp\ccmgyCsH.s 			page 200


 9354              	.LASF78:
 9355 04f4 636F756E 		.ascii	"count_protector\000"
 9355      745F7072 
 9355      6F746563 
 9355      746F7200 
 9356              	.LASF3:
 9357 0504 73686F72 		.ascii	"short unsigned int\000"
 9357      7420756E 
 9357      7369676E 
 9357      65642069 
 9357      6E7400
 9358              	.LASF11:
 9359 0517 75696E74 		.ascii	"uint8\000"
 9359      3800
 9360              	.LASF14:
 9361 051d 646F7562 		.ascii	"double\000"
 9361      6C6500
 9362              	.LASF39:
 9363 0524 72785F65 		.ascii	"rx_extend\000"
 9363      7874656E 
 9363      6400
 9364              	.LASF27:
 9365 052e 6D616E67 		.ascii	"manguera\000"
 9365      75657261 
 9365      00
 9366              	.LASF19:
 9367 0537 67726164 		.ascii	"grado\000"
 9367      6F00
 9368              	.LASF125:
 9369 053d 52785F53 		.ascii	"Rx_Surtidor\000"
 9369      75727469 
 9369      646F7200 
 9370              	.LASF66:
 9371 0549 73697A65 		.ascii	"sizeletra1\000"
 9371      6C657472 
 9371      613100
 9372              	.LASF69:
 9373 0554 73697A65 		.ascii	"sizeletra2\000"
 9373      6C657472 
 9373      613200
 9374              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
